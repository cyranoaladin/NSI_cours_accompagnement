{"version":3,"file":"index-DXo8BBNf.js","sources":["../../src/services/api.js","../../src/services/websocket.js","../../src/lib/utils.js","../../src/contexts/AuthContext.jsx","../../src/components/ui/button.jsx","../../src/components/ui/input.jsx","../../src/components/ui/card.jsx","../../src/components/Logo.jsx","../../src/components/Auth/LoginForm.jsx","../../src/components/ui/select.jsx","../../src/components/Auth/RegisterForm.jsx","../../src/components/Auth/AuthPage.jsx","../../src/components/ui/badge.jsx","../../src/components/ui/tabs.jsx","../../src/components/LandingPage.jsx","../../src/components/ui/progress.jsx","../../src/components/StudentDashboard.jsx","../../src/components/ParentDashboard.jsx","../../src/components/TeacherDashboard.jsx","../../src/components/AdminDashboard.jsx","../../src/components/NotificationSystem.jsx","../../src/components/Layout/DashboardLayout.jsx","../../src/components/Dashboard/MainDashboard.jsx","../../src/components/ARIAAgent.jsx","../../src/components/DocumentGenerator.jsx","../../src/components/ContentLibrary.jsx","../../src/components/VideoConference.jsx","../../src/components/Calendar/ScheduleCalendar.jsx","../../src/components/QuizSystem.jsx","../../src/components/LearningPath.jsx","../../src/components/TeacherProfiles.jsx","../../src/components/Gamification.jsx","../../src/components/ProgressTracking.jsx","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["/**\n * Service API principal pour Nexus Réussite\n */\n\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? 'https://your-production-domain.com/api'\n  : 'http://localhost:5000/api';\n\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n    this.token = this.getSecureToken();\n  }\n  \n  // Chiffrement simple pour les tokens (Base64 + rotation)\n  encryptToken(token) {\n    try {\n      const encoded = btoa(token);\n      // Simple rotation cipher pour obscurcir\n      return encoded.split('').map(char => \n        String.fromCharCode(char.charCodeAt(0) + 1)\n      ).join('');\n    } catch (error) {\n      console.error('Erreur de chiffrement:', error);\n      return token;\n    }\n  }\n  \n  // Déchiffrement des tokens\n  decryptToken(encryptedToken) {\n    try {\n      if (!encryptedToken) return null;\n      // Inverse rotation cipher\n      const decoded = encryptedToken.split('').map(char => \n        String.fromCharCode(char.charCodeAt(0) - 1)\n      ).join('');\n      return atob(decoded);\n    } catch (error) {\n      console.error('Erreur de déchiffrement:', error);\n      return null;\n    }\n  }\n  \n  // Récupération sécurisée du token\n  getSecureToken() {\n    const encrypted = localStorage.getItem('auth_token_enc');\n    return this.decryptToken(encrypted);\n  }\n\n  // Configuration des headers\n  getHeaders(includeAuth = true) {\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    if (includeAuth && this.token) {\n      headers['Authorization'] = `Bearer ${this.token}`;\n    }\n\n    return headers;\n  }\n\n  // Méthode générique pour les requêtes\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: this.getHeaders(options.auth !== false),\n      ...options,\n    };\n\n    try {\n      const response = await fetch(url, config);\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n\n      const contentType = response.headers.get('content-type');\n      if (contentType && contentType.includes('application/json')) {\n        return await response.json();\n      }\n      \n      return await response.text();\n    } catch (error) {\n      console.error('API Request failed:', error);\n      throw error;\n    }\n  }\n\n  // Méthodes HTTP\n  async get(endpoint, params = {}) {\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `${endpoint}?${queryString}` : endpoint;\n    return this.request(url, { method: 'GET' });\n  }\n\n  async post(endpoint, data = {}) {\n    return this.request(endpoint, {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async put(endpoint, data = {}) {\n    return this.request(endpoint, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async delete(endpoint) {\n    return this.request(endpoint, { method: 'DELETE' });\n  }\n\n  // Gestion de l'authentification\n  setToken(token) {\n    this.token = token;\n    if (token) {\n      const encrypted = this.encryptToken(token);\n      localStorage.setItem('auth_token_enc', encrypted);\n      // Supprimer l'ancien token non chiffré\n      localStorage.removeItem('auth_token');\n    } else {\n      localStorage.removeItem('auth_token_enc');\n      localStorage.removeItem('auth_token');\n    }\n  }\n\n  getToken() {\n    return this.token;\n  }\n\n  clearToken() {\n    this.token = null;\n    localStorage.removeItem('auth_token_enc');\n    localStorage.removeItem('auth_token');\n  }\n\n  // === AUTHENTIFICATION ===\n  \n  async login(email, password) {\n    const response = await this.post('/auth/login', { email, password });\n    if (response.success && response.token) {\n      this.setToken(response.token);\n    }\n    return response;\n  }\n\n  async register(userData) {\n    return this.post('/auth/register', userData);\n  }\n\n  async logout() {\n    try {\n      await this.post('/auth/logout');\n    } finally {\n      this.clearToken();\n    }\n  }\n\n  async refreshToken() {\n    const response = await this.post('/auth/refresh');\n    if (response.success && response.token) {\n      this.setToken(response.token);\n    }\n    return response;\n  }\n\n  async getCurrentUser() {\n    return this.get('/auth/me');\n  }\n\n  // === PROFILS UTILISATEURS ===\n\n  async getProfile() {\n    return this.get('/profile');\n  }\n\n  async updateProfile(profileData) {\n    return this.put('/profile', profileData);\n  }\n\n  async uploadAvatar(file) {\n    const formData = new FormData();\n    formData.append('avatar', file);\n    \n    return this.request('/profile/avatar', {\n      method: 'POST',\n      body: formData,\n      headers: { 'Authorization': `Bearer ${this.token}` }\n    });\n  }\n\n  // === ÉTUDIANTS ===\n\n  async getStudents(params = {}) {\n    return this.get('/students', params);\n  }\n\n  async getStudent(studentId) {\n    return this.get(`/students/${studentId}`);\n  }\n\n  async createStudent(studentData) {\n    return this.post('/students', studentData);\n  }\n\n  async updateStudent(studentId, studentData) {\n    return this.put(`/students/${studentId}`, studentData);\n  }\n\n  async deleteStudent(studentId) {\n    return this.delete(`/students/${studentId}`);\n  }\n\n  async getStudentProgress(studentId) {\n    return this.get(`/students/${studentId}/progress`);\n  }\n\n  async updateStudentProgress(studentId, progressData) {\n    return this.put(`/students/${studentId}/progress`, progressData);\n  }\n\n  // === IA ARIA ===\n\n  async chatWithAria(message, context = {}) {\n    return this.post('/aria/chat', { message, context });\n  }\n\n  async getAriaRecommendations(studentId) {\n    return this.get(`/aria/recommendations/${studentId}`);\n  }\n\n  async generatePersonalizedContent(studentId, subject, contentType) {\n    return this.post('/aria/generate-content', {\n      student_id: studentId,\n      subject,\n      content_type: contentType\n    });\n  }\n\n  async getAriaAnalysis(studentId) {\n    return this.get(`/aria/analysis/${studentId}`);\n  }\n\n  // === GÉNÉRATION DE DOCUMENTS ===\n\n  async generateDocument(documentData) {\n    return this.post('/documents/generate', documentData);\n  }\n\n  async getDocumentTemplates() {\n    return this.get('/documents/templates');\n  }\n\n  async getGeneratedDocuments(params = {}) {\n    return this.get('/documents', params);\n  }\n\n  async downloadDocument(documentId) {\n    const response = await fetch(`${this.baseURL}/documents/${documentId}/download`, {\n      headers: this.getHeaders()\n    });\n    \n    if (!response.ok) {\n      throw new Error('Erreur lors du téléchargement');\n    }\n    \n    return response.blob();\n  }\n\n  // === BIBLIOTHÈQUE DE CONTENU ===\n\n  async getContentLibrary(params = {}) {\n    return this.get('/content', params);\n  }\n\n  async getContentItem(contentId) {\n    return this.get(`/content/${contentId}`);\n  }\n\n  async searchContent(query, filters = {}) {\n    return this.get('/content/search', { query, ...filters });\n  }\n\n  async uploadContent(file, metadata) {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('metadata', JSON.stringify(metadata));\n    \n    return this.request('/content/upload', {\n      method: 'POST',\n      body: formData,\n      headers: { 'Authorization': `Bearer ${this.token}` }\n    });\n  }\n\n  // === VISIOCONFÉRENCE ===\n\n  async createConference(conferenceData) {\n    return this.post('/video-conference/create', conferenceData);\n  }\n\n  async createInstantConference(subject) {\n    return this.post('/video-conference/instant', { subject });\n  }\n\n  async joinConference(roomId) {\n    return this.post(`/video-conference/join/${roomId}`);\n  }\n\n  async leaveConference(roomId) {\n    return this.post(`/video-conference/leave/${roomId}`);\n  }\n\n  async endConference(roomId) {\n    return this.post(`/video-conference/end/${roomId}`);\n  }\n\n  async getUserRooms(includeHistory = false) {\n    return this.get('/video-conference/rooms', { include_history: includeHistory });\n  }\n\n  async getRoomInfo(roomId) {\n    return this.get(`/video-conference/room/${roomId}`);\n  }\n\n  async getActiveConferences() {\n    return this.get('/video-conference/active');\n  }\n\n  async getConferenceStatistics() {\n    return this.get('/video-conference/statistics');\n  }\n\n  // === NOTIFICATIONS ===\n\n  async getNotifications(params = {}) {\n    return this.get('/websocket/notifications', params);\n  }\n\n  async markNotificationRead(notificationId) {\n    return this.post(`/websocket/notifications/${notificationId}/read`);\n  }\n\n  async markAllNotificationsRead() {\n    return this.post('/websocket/notifications/mark-all-read');\n  }\n\n  async sendNotification(notificationData) {\n    return this.post('/websocket/send-notification', notificationData);\n  }\n\n  // === GAMIFICATION ===\n\n  async getAchievements(studentId) {\n    return this.get(`/gamification/achievements/${studentId}`);\n  }\n\n  async unlockAchievement(studentId, achievementId) {\n    return this.post(`/gamification/unlock/${studentId}/${achievementId}`);\n  }\n\n  async getLeaderboard(params = {}) {\n    return this.get('/gamification/leaderboard', params);\n  }\n\n  async getStudentStats(studentId) {\n    return this.get(`/gamification/stats/${studentId}`);\n  }\n\n  // === FORMULES ET TARIFS ===\n\n  async getFormulas() {\n    return this.get('/formulas');\n  }\n\n  async subscribeToFormula(formulaId, studentId) {\n    return this.post('/formulas/subscribe', {\n      formula_id: formulaId,\n      student_id: studentId\n    });\n  }\n\n  async getSubscriptions(studentId) {\n    return this.get(`/formulas/subscriptions/${studentId}`);\n  }\n\n  // === ENSEIGNANTS ===\n\n  async getTeachers() {\n    return this.get('/teachers');\n  }\n\n  async getTeacher(teacherId) {\n    return this.get(`/teachers/${teacherId}`);\n  }\n\n  async getTeacherAvailability(teacherId) {\n    return this.get(`/teachers/${teacherId}/availability`);\n  }\n\n  async bookSession(teacherId, sessionData) {\n    return this.post(`/teachers/${teacherId}/book`, sessionData);\n  }\n\n  // === RAPPORTS ===\n\n  async getStudentReport(studentId, period = 'week') {\n    return this.get(`/reports/student/${studentId}`, { period });\n  }\n\n  async getParentReport(parentId, period = 'week') {\n    return this.get(`/reports/parent/${parentId}`, { period });\n  }\n\n  async getTeacherReport(teacherId, period = 'week') {\n    return this.get(`/reports/teacher/${teacherId}`, { period });\n  }\n\n  async generateCustomReport(reportConfig) {\n    return this.post('/reports/custom', reportConfig);\n  }\n\n  // === PAIEMENTS ===\n\n  async getPaymentMethods() {\n    return this.get('/payments/methods');\n  }\n\n  async processPayment(paymentData) {\n    return this.post('/payments/process', paymentData);\n  }\n\n  async getPaymentHistory(params = {}) {\n    return this.get('/payments/history', params);\n  }\n\n  async getInvoices(params = {}) {\n    return this.get('/payments/invoices', params);\n  }\n\n  // === SUPPORT ===\n\n  async createSupportTicket(ticketData) {\n    return this.post('/support/tickets', ticketData);\n  }\n\n  async getSupportTickets() {\n    return this.get('/support/tickets');\n  }\n\n  async updateSupportTicket(ticketId, updateData) {\n    return this.put(`/support/tickets/${ticketId}`, updateData);\n  }\n\n  async getFAQ() {\n    return this.get('/support/faq');\n  }\n\n  // === STATISTIQUES ===\n\n  async getDashboardStats(userType, userId) {\n    return this.get(`/stats/dashboard/${userType}/${userId}`);\n  }\n\n  async getUsageStats(params = {}) {\n    return this.get('/stats/usage', params);\n  }\n\n  async getPerformanceStats(studentId, subject = null) {\n    return this.get(`/stats/performance/${studentId}`, { subject });\n  }\n\n  // === UTILITAIRES ===\n\n  async uploadFile(file, category = 'general') {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('category', category);\n    \n    return this.request('/upload', {\n      method: 'POST',\n      body: formData,\n      headers: { 'Authorization': `Bearer ${this.token}` }\n    });\n  }\n\n  async healthCheck() {\n    return this.get('/health', {}, { auth: false });\n  }\n\n  async getSystemInfo() {\n    return this.get('/info', {}, { auth: false });\n  }\n}\n\n// Instance singleton\nconst apiService = new ApiService();\n\nexport default apiService;\n\n","/**\n * Service WebSocket pour les notifications en temps réel\n */\n\nclass WebSocketService {\n  constructor() {\n    this.ws = null;\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectInterval = 1000;\n    this.listeners = new Map();\n    this.isConnected = false;\n    this.userId = null;\n    this.userRole = null;\n    this.heartbeatInterval = null;\n  }\n\n  // Connexion WebSocket\n  connect(userId, userRole, token) {\n    this.userId = userId;\n    this.userRole = userRole;\n    \n    const wsUrl = process.env.NODE_ENV === 'production'\n      ? `wss://your-production-domain.com/ws`\n      : `ws://localhost:5000/ws`;\n    \n    try {\n      this.ws = new WebSocket(`${wsUrl}?token=${token}&user_id=${userId}&role=${userRole}`);\n      \n      this.ws.onopen = this.onOpen.bind(this);\n      this.ws.onmessage = this.onMessage.bind(this);\n      this.ws.onclose = this.onClose.bind(this);\n      this.ws.onerror = this.onError.bind(this);\n      \n    } catch (error) {\n      console.error('Erreur lors de la connexion WebSocket:', error);\n      this.scheduleReconnect();\n    }\n  }\n\n  // Événements WebSocket\n  onOpen(event) {\n    console.log('WebSocket connecté');\n    this.isConnected = true;\n    this.reconnectAttempts = 0;\n    \n    // Démarrer le heartbeat\n    this.startHeartbeat();\n    \n    // Notifier les listeners\n    this.emit('connected', { userId: this.userId, userRole: this.userRole });\n  }\n\n  onMessage(event) {\n    try {\n      const data = JSON.parse(event.data);\n      \n      // Gérer les différents types de messages\n      switch (data.type) {\n        case 'notification':\n          this.handleNotification(data.data);\n          break;\n        case 'progress_update':\n          this.handleProgressUpdate(data.data);\n          break;\n        case 'achievement_unlocked':\n          this.handleAchievementUnlocked(data.data);\n          break;\n        case 'teacher_message':\n          this.handleTeacherMessage(data.data);\n          break;\n        case 'conference_invitation':\n          this.handleConferenceInvitation(data.data);\n          break;\n        case 'system_alert':\n          this.handleSystemAlert(data.data);\n          break;\n        case 'heartbeat':\n          this.handleHeartbeat(data.data);\n          break;\n        case 'broadcast_notification':\n          this.handleBroadcastNotification(data.data);\n          break;\n        default:\n          console.log('Message WebSocket non géré:', data);\n      }\n      \n      // Émettre l'événement générique\n      this.emit('message', data);\n      \n    } catch (error) {\n      console.error('Erreur lors du parsing du message WebSocket:', error);\n    }\n  }\n\n  onClose(event) {\n    console.log('WebSocket fermé:', event.code, event.reason);\n    this.isConnected = false;\n    this.stopHeartbeat();\n    \n    // Notifier les listeners\n    this.emit('disconnected', { code: event.code, reason: event.reason });\n    \n    // Tentative de reconnexion si ce n'est pas une fermeture volontaire\n    if (event.code !== 1000) {\n      this.scheduleReconnect();\n    }\n  }\n\n  onError(error) {\n    console.error('Erreur WebSocket:', error);\n    this.emit('error', error);\n  }\n\n  // Gestion des différents types de messages\n  handleNotification(notification) {\n    console.log('Nouvelle notification:', notification);\n    \n    // Afficher une notification native si possible\n    if ('Notification' in window && Notification.permission === 'granted') {\n      new Notification(notification.title, {\n        body: notification.message,\n        icon: '/favicon.ico',\n        tag: notification.id\n      });\n    }\n    \n    // Émettre l'événement pour les composants\n    this.emit('notification', notification);\n  }\n\n  handleProgressUpdate(progressData) {\n    console.log('Mise à jour de progression:', progressData);\n    this.emit('progress_update', progressData);\n  }\n\n  handleAchievementUnlocked(achievement) {\n    console.log('Nouveau succès débloqué:', achievement);\n    \n    // Notification spéciale pour les succès\n    if ('Notification' in window && Notification.permission === 'granted') {\n      new Notification('🏆 Nouveau succès débloqué !', {\n        body: achievement.name,\n        icon: '/favicon.ico',\n        tag: `achievement_${achievement.id}`\n      });\n    }\n    \n    this.emit('achievement_unlocked', achievement);\n  }\n\n  handleTeacherMessage(message) {\n    console.log('Message d\\'enseignant:', message);\n    this.emit('teacher_message', message);\n  }\n\n  handleConferenceInvitation(invitation) {\n    console.log('Invitation à une conférence:', invitation);\n    this.emit('conference_invitation', invitation);\n  }\n\n  handleSystemAlert(alert) {\n    console.log('Alerte système:', alert);\n    this.emit('system_alert', alert);\n  }\n\n  handleHeartbeat(data) {\n    // Répondre au heartbeat\n    this.send({\n      type: 'heartbeat_response',\n      timestamp: Date.now()\n    });\n  }\n\n  handleBroadcastNotification(notification) {\n    console.log('Notification diffusée:', notification);\n    this.emit('broadcast_notification', notification);\n  }\n\n  // Gestion du heartbeat\n  startHeartbeat() {\n    this.heartbeatInterval = setInterval(() => {\n      if (this.isConnected) {\n        this.send({\n          type: 'heartbeat',\n          timestamp: Date.now()\n        });\n      }\n    }, 30000); // Toutes les 30 secondes\n  }\n\n  stopHeartbeat() {\n    if (this.heartbeatInterval) {\n      clearInterval(this.heartbeatInterval);\n      this.heartbeatInterval = null;\n    }\n  }\n\n  // Reconnexion automatique\n  scheduleReconnect() {\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      const delay = this.reconnectInterval * Math.pow(2, this.reconnectAttempts - 1);\n      \n      console.log(`Tentative de reconnexion ${this.reconnectAttempts}/${this.maxReconnectAttempts} dans ${delay}ms`);\n      \n      setTimeout(() => {\n        if (this.userId && this.userRole) {\n          const token = localStorage.getItem('auth_token');\n          if (token) {\n            this.connect(this.userId, this.userRole, token);\n          }\n        }\n      }, delay);\n    } else {\n      console.error('Nombre maximum de tentatives de reconnexion atteint');\n      this.emit('max_reconnect_attempts_reached');\n    }\n  }\n\n  // Envoi de messages\n  send(data) {\n    if (this.isConnected && this.ws) {\n      try {\n        this.ws.send(JSON.stringify(data));\n        return true;\n      } catch (error) {\n        console.error('Erreur lors de l\\'envoi du message:', error);\n        return false;\n      }\n    } else {\n      console.warn('WebSocket non connecté, impossible d\\'envoyer le message');\n      return false;\n    }\n  }\n\n  // Envoi de notifications\n  sendNotification(recipientId, title, message, type = 'info', data = {}) {\n    return this.send({\n      type: 'send_notification',\n      data: {\n        recipient_id: recipientId,\n        title,\n        message,\n        notification_type: type,\n        data\n      }\n    });\n  }\n\n  // Marquer une notification comme lue\n  markNotificationRead(notificationId) {\n    return this.send({\n      type: 'mark_notification_read',\n      data: {\n        notification_id: notificationId\n      }\n    });\n  }\n\n  // Rejoindre une salle (pour les notifications de groupe)\n  joinRoom(roomId) {\n    return this.send({\n      type: 'join_room',\n      data: {\n        room_id: roomId\n      }\n    });\n  }\n\n  // Quitter une salle\n  leaveRoom(roomId) {\n    return this.send({\n      type: 'leave_room',\n      data: {\n        room_id: roomId\n      }\n    });\n  }\n\n  // Gestion des événements\n  on(event, callback) {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, []);\n    }\n    this.listeners.get(event).push(callback);\n  }\n\n  off(event, callback) {\n    if (this.listeners.has(event)) {\n      const callbacks = this.listeners.get(event);\n      const index = callbacks.indexOf(callback);\n      if (index > -1) {\n        callbacks.splice(index, 1);\n      }\n    }\n  }\n\n  emit(event, data) {\n    if (this.listeners.has(event)) {\n      this.listeners.get(event).forEach(callback => {\n        try {\n          callback(data);\n        } catch (error) {\n          console.error(`Erreur dans le callback de l'événement ${event}:`, error);\n        }\n      });\n    }\n  }\n\n  // Déconnexion\n  disconnect() {\n    this.stopHeartbeat();\n    \n    if (this.ws) {\n      this.ws.close(1000, 'Déconnexion volontaire');\n      this.ws = null;\n    }\n    \n    this.isConnected = false;\n    this.userId = null;\n    this.userRole = null;\n    this.reconnectAttempts = 0;\n  }\n\n  // Statut de connexion\n  getConnectionStatus() {\n    return {\n      isConnected: this.isConnected,\n      userId: this.userId,\n      userRole: this.userRole,\n      reconnectAttempts: this.reconnectAttempts\n    };\n  }\n\n  // Demander la permission pour les notifications natives\n  async requestNotificationPermission() {\n    if ('Notification' in window) {\n      const permission = await Notification.requestPermission();\n      return permission === 'granted';\n    }\n    return false;\n  }\n\n  // Vérifier si les notifications sont supportées\n  isNotificationSupported() {\n    return 'Notification' in window;\n  }\n\n  // Vérifier si les notifications sont autorisées\n  isNotificationPermissionGranted() {\n    return 'Notification' in window && Notification.permission === 'granted';\n  }\n}\n\n// Instance singleton\nconst webSocketService = new WebSocketService();\n\nexport default webSocketService;\n\n// Hook React pour utiliser le WebSocket\nexport function useWebSocket() {\n  const [isConnected, setIsConnected] = React.useState(webSocketService.isConnected);\n  const [notifications, setNotifications] = React.useState([]);\n\n  React.useEffect(() => {\n    const handleConnected = () => setIsConnected(true);\n    const handleDisconnected = () => setIsConnected(false);\n    const handleNotification = (notification) => {\n      setNotifications(prev => [notification, ...prev].slice(0, 50)); // Garder les 50 dernières\n    };\n\n    webSocketService.on('connected', handleConnected);\n    webSocketService.on('disconnected', handleDisconnected);\n    webSocketService.on('notification', handleNotification);\n\n    return () => {\n      webSocketService.off('connected', handleConnected);\n      webSocketService.off('disconnected', handleDisconnected);\n      webSocketService.off('notification', handleNotification);\n    };\n  }, []);\n\n  return {\n    isConnected,\n    notifications,\n    send: webSocketService.send.bind(webSocketService),\n    sendNotification: webSocketService.sendNotification.bind(webSocketService),\n    markNotificationRead: webSocketService.markNotificationRead.bind(webSocketService),\n    on: webSocketService.on.bind(webSocketService),\n    off: webSocketService.off.bind(webSocketService)\n  };\n}\n\n","import { clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n\nexport function formatDate(date) {\n  return new Intl.DateTimeFormat(\"fr-FR\", {\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n  }).format(new Date(date));\n}\n\nexport function formatTime(date) {\n  return new Intl.DateTimeFormat(\"fr-FR\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  }).format(new Date(date));\n}\n\nexport function formatDateTime(date) {\n  return new Intl.DateTimeFormat(\"fr-FR\", {\n    day: \"numeric\",\n    month: \"short\",\n    year: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  }).format(new Date(date));\n}\n\nexport function formatDuration(seconds) {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  \n  if (hours > 0) {\n    return `${hours}h ${minutes}min`;\n  }\n  return `${minutes}min`;\n}\n\nexport function formatFileSize(bytes) {\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  if (bytes === 0) return '0 Bytes';\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\n  return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + ' ' + sizes[i];\n}\n\nexport function generateId() {\n  return Math.random().toString(36).substr(2, 9);\n}\n\nexport function debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\nexport function throttle(func, limit) {\n  let inThrottle;\n  return function() {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n}\n\nexport function validateEmail(email) {\n  const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return re.test(email);\n}\n\nexport function validatePhone(phone) {\n  const re = /^[\\+]?[1-9][\\d]{0,15}$/;\n  return re.test(phone.replace(/\\s/g, ''));\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .trim()\n    .replace(/\\s+/g, '-')\n    .replace(/[^\\w\\-]+/g, '')\n    .replace(/\\-\\-+/g, '-');\n}\n\nexport function capitalize(text) {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n}\n\nexport function truncate(text, length = 100) {\n  if (text.length <= length) return text;\n  return text.substr(0, length) + '...';\n}\n\nexport function getInitials(name) {\n  return name\n    .split(' ')\n    .map(word => word.charAt(0))\n    .join('')\n    .toUpperCase()\n    .slice(0, 2);\n}\n\nexport function getRandomColor() {\n  const colors = [\n    'bg-red-500',\n    'bg-blue-500',\n    'bg-green-500',\n    'bg-yellow-500',\n    'bg-purple-500',\n    'bg-pink-500',\n    'bg-indigo-500',\n    'bg-orange-500'\n  ];\n  return colors[Math.floor(Math.random() * colors.length)];\n}\n\nexport function calculateProgress(completed, total) {\n  if (total === 0) return 0;\n  return Math.round((completed / total) * 100);\n}\n\nexport function getGradeColor(grade) {\n  if (grade >= 16) return 'text-green-600';\n  if (grade >= 14) return 'text-blue-600';\n  if (grade >= 12) return 'text-yellow-600';\n  if (grade >= 10) return 'text-orange-600';\n  return 'text-red-600';\n}\n\nexport function getProgressColor(progress) {\n  if (progress >= 80) return 'bg-green-500';\n  if (progress >= 60) return 'bg-blue-500';\n  if (progress >= 40) return 'bg-yellow-500';\n  return 'bg-red-500';\n}\n\nexport function sortByDate(array, dateField, ascending = false) {\n  return array.sort((a, b) => {\n    const dateA = new Date(a[dateField]);\n    const dateB = new Date(b[dateField]);\n    return ascending ? dateA - dateB : dateB - dateA;\n  });\n}\n\nexport function groupBy(array, key) {\n  return array.reduce((groups, item) => {\n    const group = item[key];\n    if (!groups[group]) {\n      groups[group] = [];\n    }\n    groups[group].push(item);\n    return groups;\n  }, {});\n}\n\nexport function filterBySearch(array, searchTerm, fields) {\n  if (!searchTerm) return array;\n  \n  const lowercaseSearch = searchTerm.toLowerCase();\n  \n  return array.filter(item => {\n    return fields.some(field => {\n      const value = item[field];\n      if (typeof value === 'string') {\n        return value.toLowerCase().includes(lowercaseSearch);\n      }\n      return false;\n    });\n  });\n}\n\nexport function downloadFile(data, filename, type = 'application/json') {\n  const blob = new Blob([data], { type });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  window.URL.revokeObjectURL(url);\n}\n\nexport function copyToClipboard(text) {\n  if (navigator.clipboard) {\n    return navigator.clipboard.writeText(text);\n  } else {\n    // Fallback pour les navigateurs plus anciens\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    document.body.appendChild(textArea);\n    textArea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textArea);\n    return Promise.resolve();\n  }\n}\n\nexport function isValidUrl(string) {\n  try {\n    new URL(string);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n\nexport function getTimeAgo(date) {\n  const now = new Date();\n  const diffInSeconds = Math.floor((now - new Date(date)) / 1000);\n  \n  const intervals = {\n    année: 31536000,\n    mois: 2592000,\n    semaine: 604800,\n    jour: 86400,\n    heure: 3600,\n    minute: 60\n  };\n  \n  for (const [unit, seconds] of Object.entries(intervals)) {\n    const interval = Math.floor(diffInSeconds / seconds);\n    if (interval >= 1) {\n      return `il y a ${interval} ${unit}${interval > 1 ? 's' : ''}`;\n    }\n  }\n  \n  return 'à l\\'instant';\n}\n\nexport function parseJwt(token) {\n  try {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    return JSON.parse(jsonPayload);\n  } catch (error) {\n    return null;\n  }\n}\n\nexport function isTokenExpired(token) {\n  const decoded = parseJwt(token);\n  if (!decoded || !decoded.exp) return true;\n  \n  const currentTime = Date.now() / 1000;\n  return decoded.exp < currentTime;\n}\n\nexport function formatCurrency(amount, currency = 'TND') {\n  return new Intl.NumberFormat('fr-TN', {\n    style: 'currency',\n    currency: currency,\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2\n  }).format(amount);\n}\n\nexport function formatNumber(number) {\n  return new Intl.NumberFormat('fr-FR').format(number);\n}\n\nexport function formatPercentage(value, decimals = 1) {\n  return `${value.toFixed(decimals)}%`;\n}\n\n","import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport apiService from '../services/api';\nimport webSocketService from '../services/websocket';\nimport { parseJwt, isTokenExpired } from '../lib/utils';\n\n// État initial\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: true,\n  error: null\n};\n\n// Actions\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  SET_USER: 'SET_USER',\n  SET_LOADING: 'SET_LOADING',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  UPDATE_PROFILE: 'UPDATE_PROFILE'\n};\n\n// Reducer\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    \n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    \n    case AUTH_ACTIONS.LOGIN_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload.error\n      };\n    \n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...initialState,\n        isLoading: false\n      };\n    \n    case AUTH_ACTIONS.SET_USER:\n      return {\n        ...state,\n        user: action.payload.user,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    \n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload.isLoading\n      };\n    \n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    \n    case AUTH_ACTIONS.UPDATE_PROFILE:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload.updates\n        }\n      };\n    \n    default:\n      return state;\n  }\n}\n\n// Contexte\nconst AuthContext = createContext();\n\n// Provider\nexport function AuthProvider({ children }) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Vérifier le token au chargement\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  // Configurer la reconnexion automatique du WebSocket\n  useEffect(() => {\n    if (state.isAuthenticated && state.user && state.token) {\n      // Connecter le WebSocket\n      webSocketService.connect(state.user.id, state.user.role, state.token);\n      \n      // Gérer la déconnexion automatique en cas d'erreur d'auth\n      const handleAuthError = () => {\n        console.log('Erreur d\\'authentification WebSocket, déconnexion...');\n        logout();\n      };\n      \n      webSocketService.on('auth_error', handleAuthError);\n      \n      return () => {\n        webSocketService.off('auth_error', handleAuthError);\n      };\n    } else {\n      // Déconnecter le WebSocket\n      webSocketService.disconnect();\n    }\n  }, [state.isAuthenticated, state.user, state.token]);\n\n  // Vérifier le statut d'authentification\n  async function checkAuthStatus() {\n    dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: { isLoading: true } });\n    \n    try {\n      const token = apiService.getToken();\n      \n      if (!token) {\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: { isLoading: false } });\n        return;\n      }\n\n      // Vérifier si le token est expiré\n      if (isTokenExpired(token)) {\n        console.log('Token expiré, tentative de rafraîchissement...');\n        try {\n          const refreshResponse = await apiService.refreshToken();\n          if (refreshResponse.success) {\n            const userData = parseJwt(refreshResponse.token);\n            dispatch({\n              type: AUTH_ACTIONS.LOGIN_SUCCESS,\n              payload: {\n                user: userData,\n                token: refreshResponse.token\n              }\n            });\n            return;\n          }\n        } catch (refreshError) {\n          console.log('Échec du rafraîchissement du token');\n        }\n        \n        // Si le rafraîchissement échoue, déconnecter\n        apiService.clearToken();\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: { isLoading: false } });\n        return;\n      }\n\n      // Récupérer les informations utilisateur\n      const userResponse = await apiService.getCurrentUser();\n      if (userResponse.success) {\n        dispatch({\n          type: AUTH_ACTIONS.SET_USER,\n          payload: { user: userResponse.user }\n        });\n      } else {\n        throw new Error('Impossible de récupérer les informations utilisateur');\n      }\n      \n    } catch (error) {\n      console.error('Erreur lors de la vérification de l\\'authentification:', error);\n      apiService.clearToken();\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: { error: error.message }\n      });\n    }\n  }\n\n  // Connexion\n  async function login(email, password) {\n    dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n    \n    try {\n      const response = await apiService.login(email, password);\n      \n      if (response.success) {\n        const userData = parseJwt(response.token);\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: {\n            user: userData,\n            token: response.token\n          }\n        });\n        return { success: true };\n      } else {\n        throw new Error(response.error || 'Erreur de connexion');\n      }\n    } catch (error) {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: { error: error.message }\n      });\n      return { success: false, error: error.message };\n    }\n  }\n\n  // Inscription\n  async function register(userData) {\n    dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n    \n    try {\n      const response = await apiService.register(userData);\n      \n      if (response.success) {\n        // Connexion automatique après inscription\n        return await login(userData.email, userData.password);\n      } else {\n        throw new Error(response.error || 'Erreur lors de l\\'inscription');\n      }\n    } catch (error) {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: { error: error.message }\n      });\n      return { success: false, error: error.message };\n    }\n  }\n\n  // Déconnexion\n  async function logout() {\n    try {\n      await apiService.logout();\n    } catch (error) {\n      console.error('Erreur lors de la déconnexion:', error);\n    } finally {\n      // Déconnecter le WebSocket\n      webSocketService.disconnect();\n      \n      // Nettoyer l'état\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\n    }\n  }\n\n  // Mise à jour du profil\n  async function updateProfile(updates) {\n    try {\n      const response = await apiService.updateProfile(updates);\n      \n      if (response.success) {\n        dispatch({\n          type: AUTH_ACTIONS.UPDATE_PROFILE,\n          payload: { updates: response.user }\n        });\n        return { success: true };\n      } else {\n        throw new Error(response.error || 'Erreur lors de la mise à jour');\n      }\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  }\n\n  // Upload d'avatar\n  async function uploadAvatar(file) {\n    try {\n      const response = await apiService.uploadAvatar(file);\n      \n      if (response.success) {\n        dispatch({\n          type: AUTH_ACTIONS.UPDATE_PROFILE,\n          payload: { updates: { avatar_url: response.avatar_url } }\n        });\n        return { success: true, avatar_url: response.avatar_url };\n      } else {\n        throw new Error(response.error || 'Erreur lors de l\\'upload');\n      }\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  }\n\n  // Effacer les erreurs\n  function clearError() {\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n  }\n\n  // Vérifier les permissions\n  function hasPermission(permission) {\n    if (!state.user) return false;\n    \n    const userPermissions = state.user.permissions || [];\n    return userPermissions.includes(permission);\n  }\n\n  // Vérifier le rôle\n  function hasRole(role) {\n    if (!state.user) return false;\n    \n    if (Array.isArray(role)) {\n      return role.includes(state.user.role);\n    }\n    \n    return state.user.role === role;\n  }\n\n  // Vérifier si l'utilisateur est un enseignant\n  function isTeacher() {\n    return hasRole('teacher');\n  }\n\n  // Vérifier si l'utilisateur est un élève\n  function isStudent() {\n    return hasRole('student');\n  }\n\n  // Vérifier si l'utilisateur est un parent\n  function isParent() {\n    return hasRole('parent');\n  }\n\n  // Vérifier si l'utilisateur est un admin\n  function isAdmin() {\n    return hasRole('admin');\n  }\n\n  // Obtenir les informations de l'utilisateur connecté\n  function getCurrentUser() {\n    return state.user;\n  }\n\n  // Obtenir le token\n  function getToken() {\n    return state.token;\n  }\n\n  // Vérifier si l'utilisateur est connecté\n  function isAuthenticated() {\n    return state.isAuthenticated;\n  }\n\n  // Valeurs du contexte\n  const value = {\n    // État\n    user: state.user,\n    token: state.token,\n    isAuthenticated: state.isAuthenticated,\n    isLoading: state.isLoading,\n    error: state.error,\n    \n    // Actions\n    login,\n    register,\n    logout,\n    updateProfile,\n    uploadAvatar,\n    clearError,\n    checkAuthStatus,\n    \n    // Utilitaires\n    hasPermission,\n    hasRole,\n    isTeacher,\n    isStudent,\n    isParent,\n    isAdmin,\n    getCurrentUser,\n    getToken\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\n// Hook pour utiliser le contexte\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  \n  if (!context) {\n    throw new Error('useAuth doit être utilisé dans un AuthProvider');\n  }\n  \n  return context;\n}\n\n// HOC pour protéger les routes\nexport function withAuth(Component, requiredRoles = []) {\n  return function AuthenticatedComponent(props) {\n    const { isAuthenticated, isLoading, hasRole } = useAuth();\n    \n    if (isLoading) {\n      return (\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n        </div>\n      );\n    }\n    \n    if (!isAuthenticated) {\n      // Rediriger vers la page de connexion\n      window.location.href = '/login';\n      return null;\n    }\n    \n    if (requiredRoles.length > 0 && !hasRole(requiredRoles)) {\n      return (\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <div className=\"text-center\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n              Accès non autorisé\n            </h2>\n            <p className=\"text-gray-600\">\n              Vous n'avez pas les permissions nécessaires pour accéder à cette page.\n            </p>\n          </div>\n        </div>\n      );\n    }\n    \n    return <Component {...props} />;\n  };\n}\n\nexport default AuthContext;\n\n","import React from 'react'\n\nconst Button = React.forwardRef(({ \n  className, \n  variant = \"default\", \n  size = \"default\", \n  asChild = false, \n  ...props \n}, ref) => {\n  const baseClasses = \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\"\n  \n  const variants = {\n    default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n    destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n    outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n    secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n    ghost: \"hover:bg-accent hover:text-accent-foreground\",\n    link: \"text-primary underline-offset-4 hover:underline\",\n  }\n  \n  const sizes = {\n    default: \"h-10 px-4 py-2\",\n    sm: \"h-9 rounded-md px-3\",\n    lg: \"h-11 rounded-md px-8\",\n    icon: \"h-10 w-10\",\n  }\n  \n  const variantClass = variants[variant] || variants.default\n  const sizeClass = sizes[size] || sizes.default\n  \n  return (\n    <button\n      className={`${baseClasses} ${variantClass} ${sizeClass} ${className || ''}`}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nButton.displayName = \"Button\"\n\nexport { Button }\n\n","import React from 'react';\nimport { cn } from '../../lib/utils';\n\nconst Input = React.forwardRef(({ className, type, ...props }, ref) => {\n  return (\n    <input\n      type={type}\n      className={cn(\n        \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\n\nInput.displayName = \"Input\";\n\nexport { Input };\n\n","import React from 'react'\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={`rounded-lg border bg-card text-card-foreground shadow-sm ${className || ''}`}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={`flex flex-col space-y-1.5 p-6 ${className || ''}`} {...props} />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={`text-2xl font-semibold leading-none tracking-tight ${className || ''}`}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={`text-sm text-muted-foreground ${className || ''}`}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={`p-6 pt-0 ${className || ''}`} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={`flex items-center p-6 pt-0 ${className || ''}`} {...props} />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n\n","import React from 'react'\n\nconst Logo = ({ \n  size = 'default', \n  variant = 'full', \n  className = '',\n  showSlogan = true,\n  animated = false \n}) => {\n  const sizes = {\n    small: { height: 32, maxWidth: 120 },\n    default: { height: 48, maxWidth: 180 },\n    large: { height: 64, maxWidth: 240 },\n    icon: { height: 40, maxWidth: 40 }\n  };\n\n  const currentSize = sizes[size] || sizes.default;\n\n  return (\n    <img \n      src=\"/logo_nexus-reussite.png\" \n      alt=\"Nexus Réussite - Plateforme Éducative\"\n      className={`nexus-logo ${animated ? 'animate-pulse' : ''} ${className}`}\n      style={{\n        height: `${currentSize.height}px`,\n        maxWidth: `${currentSize.maxWidth}px`,\n        width: 'auto',\n        objectFit: 'contain'\n      }}\n    />\n  );\n};\n\n// Composant Logo compact pour les headers\nexport const LogoCompact = ({ className = '', animated = false }) => (\n  <div className={`flex items-center space-x-3 ${className}`}>\n    <Logo size=\"small\" animated={animated} />\n  </div>\n);\n\n// Composant Logo pour les footers\nexport const LogoFooter = ({ className = '' }) => (\n  <div className={`flex flex-col items-start space-y-2 ${className}`}>\n    <Logo size=\"small\" />\n    <p className=\"text-xs text-muted-foreground max-w-xs\">\n      Plateforme d'excellence pour les élèves du système français en Tunisie\n    </p>\n  </div>\n);\n\n// Composant Logo animé pour les chargements\nexport const LogoLoader = ({ className = '' }) => (\n  <div className={`flex flex-col items-center space-y-4 ${className}`}>\n    <Logo size=\"default\" animated={true} />\n    <div className=\"flex space-x-1\">\n      <div className=\"w-2 h-2 bg-red-600 rounded-full animate-bounce\"></div>\n      <div className=\"w-2 h-2 bg-red-600 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n      <div className=\"w-2 h-2 bg-red-600 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n    </div>\n  </div>\n);\n\n// Composant Logo pour les emails et documents\nexport const LogoDocument = ({ className = '' }) => (\n  <div className={`flex items-center space-x-4 ${className}`}>\n    <Logo size=\"small\" />\n    <div className=\"h-8 w-px bg-gray-300\"></div>\n    <div className=\"text-xs text-gray-600\">\n      <div className=\"font-semibold\">Centre Urbain Nord</div>\n      <div>Immeuble VENUS, Apt. C13</div>\n      <div>1082 – Tunis</div>\n    </div>\n  </div>\n);\n\nexport default Logo;\n\n","import React, { useState } from 'react';\nimport { Eye, EyeOff, Mail, Lock, AlertCircle } from 'lucide-react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Button } from '../ui/button';\nimport { Input } from '../ui/input';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';\nimport Logo from '../Logo';\n\nexport default function LoginForm({ onSwitchToRegister }) {\n  const { login, isLoading, error, clearError } = useAuth();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [formErrors, setFormErrors] = useState({});\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Effacer les erreurs lors de la saisie\n    if (formErrors[name]) {\n      setFormErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n    \n    if (error) {\n      clearError();\n    }\n  };\n\n  const validateForm = () => {\n    const errors = {};\n    \n    if (!formData.email) {\n      errors.email = 'L\\'email est requis';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      errors.email = 'Format d\\'email invalide';\n    }\n    \n    if (!formData.password) {\n      errors.password = 'Le mot de passe est requis';\n    } else if (formData.password.length < 6) {\n      errors.password = 'Le mot de passe doit contenir au moins 6 caractères';\n    }\n    \n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n    \n    const result = await login(formData.email, formData.password);\n    \n    if (result.success) {\n      // Redirection gérée par le contexte d'authentification\n      console.log('Connexion réussie');\n    }\n  };\n\n  const handleDemoLogin = async (role) => {\n    const demoAccounts = {\n      student: { email: 'sarah@demo.nexusreussite.tn', password: 'demo123' },\n      parent: { email: 'parent.sarah@demo.nexusreussite.tn', password: 'demo123' },\n      teacher: { email: 'prof.dubois@demo.nexusreussite.tn', password: 'demo123' },\n      admin: { email: 'admin@demo.nexusreussite.tn', password: 'demo123' }\n    };\n    \n    const account = demoAccounts[role];\n    if (account) {\n      setFormData(account);\n      await login(account.email, account.password);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        {/* Logo et titre */}\n        <div className=\"text-center\">\n          <div className=\"flex justify-center mb-6\">\n            <Logo className=\"h-16 w-auto\" />\n          </div>\n          <h2 className=\"text-3xl font-bold text-gray-900\">\n            Connexion à votre espace\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            Accédez à votre tableau de bord personnalisé\n          </p>\n        </div>\n\n        <Card className=\"shadow-xl\">\n          <CardHeader className=\"space-y-1\">\n            <CardTitle className=\"text-2xl text-center\">Se connecter</CardTitle>\n            <CardDescription className=\"text-center\">\n              Entrez vos identifiants pour accéder à votre compte\n            </CardDescription>\n          </CardHeader>\n          \n          <CardContent className=\"space-y-4\">\n            {/* Erreur générale */}\n            {error && (\n              <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n                <div className=\"flex\">\n                  <AlertCircle className=\"h-5 w-5 text-red-400\" />\n                  <div className=\"ml-3\">\n                    <p className=\"text-sm text-red-800\">{error}</p>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              {/* Email */}\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Adresse email\n                </label>\n                <div className=\"relative\">\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <Mail className=\"h-5 w-5 text-gray-400\" />\n                  </div>\n                  <Input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    className={`pl-10 ${formErrors.email ? 'border-red-300' : ''}`}\n                    placeholder=\"votre@email.com\"\n                  />\n                </div>\n                {formErrors.email && (\n                  <p className=\"mt-1 text-sm text-red-600\">{formErrors.email}</p>\n                )}\n              </div>\n\n              {/* Mot de passe */}\n              <div>\n                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Mot de passe\n                </label>\n                <div className=\"relative\">\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <Lock className=\"h-5 w-5 text-gray-400\" />\n                  </div>\n                  <Input\n                    id=\"password\"\n                    name=\"password\"\n                    type={showPassword ? 'text' : 'password'}\n                    autoComplete=\"current-password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                    className={`pl-10 pr-10 ${formErrors.password ? 'border-red-300' : ''}`}\n                    placeholder=\"••••••••\"\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? (\n                      <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                    ) : (\n                      <Eye className=\"h-5 w-5 text-gray-400\" />\n                    )}\n                  </button>\n                </div>\n                {formErrors.password && (\n                  <p className=\"mt-1 text-sm text-red-600\">{formErrors.password}</p>\n                )}\n              </div>\n\n              {/* Options */}\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <input\n                    id=\"remember-me\"\n                    name=\"remember-me\"\n                    type=\"checkbox\"\n                    className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                  />\n                  <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\n                    Se souvenir de moi\n                  </label>\n                </div>\n\n                <div className=\"text-sm\">\n                  <a href=\"#\" className=\"font-medium text-blue-600 hover:text-blue-500\">\n                    Mot de passe oublié ?\n                  </a>\n                </div>\n              </div>\n\n              {/* Bouton de connexion */}\n              <Button\n                type=\"submit\"\n                className=\"w-full\"\n                disabled={isLoading}\n              >\n                {isLoading ? (\n                  <div className=\"flex items-center\">\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                    Connexion en cours...\n                  </div>\n                ) : (\n                  'Se connecter'\n                )}\n              </Button>\n            </form>\n\n            {/* Comptes de démonstration */}\n            <div className=\"mt-6\">\n              <div className=\"relative\">\n                <div className=\"absolute inset-0 flex items-center\">\n                  <div className=\"w-full border-t border-gray-300\" />\n                </div>\n                <div className=\"relative flex justify-center text-sm\">\n                  <span className=\"px-2 bg-white text-gray-500\">Comptes de démonstration</span>\n                </div>\n              </div>\n\n              <div className=\"mt-4 grid grid-cols-2 gap-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handleDemoLogin('student')}\n                  disabled={isLoading}\n                >\n                  Élève\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handleDemoLogin('parent')}\n                  disabled={isLoading}\n                >\n                  Parent\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handleDemoLogin('teacher')}\n                  disabled={isLoading}\n                >\n                  Enseignant\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handleDemoLogin('admin')}\n                  disabled={isLoading}\n                >\n                  Admin\n                </Button>\n              </div>\n            </div>\n\n            {/* Lien vers l'inscription */}\n            <div className=\"text-center\">\n              <p className=\"text-sm text-gray-600\">\n                Pas encore de compte ?{' '}\n                <button\n                  type=\"button\"\n                  onClick={onSwitchToRegister}\n                  className=\"font-medium text-blue-600 hover:text-blue-500\"\n                >\n                  Créer un compte\n                </button>\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Informations supplémentaires */}\n        <div className=\"text-center\">\n          <p className=\"text-xs text-gray-500\">\n            En vous connectant, vous acceptez nos{' '}\n            <a href=\"#\" className=\"text-blue-600 hover:text-blue-500\">\n              Conditions d'utilisation\n            </a>{' '}\n            et notre{' '}\n            <a href=\"#\" className=\"text-blue-600 hover:text-blue-500\">\n              Politique de confidentialité\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { ChevronDown, Check } from 'lucide-react';\nimport { cn } from '../../lib/utils';\n\nconst Select = React.forwardRef(({ className, children, ...props }, ref) => {\n  return (\n    <select\n      className={cn(\n        \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    >\n      {children}\n    </select>\n  );\n});\n\nSelect.displayName = \"Select\";\n\nconst SelectContent = React.forwardRef(({ className, children, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n});\n\nSelectContent.displayName = \"SelectContent\";\n\nconst SelectItem = React.forwardRef(({ className, children, ...props }, ref) => {\n  return (\n    <option\n      ref={ref}\n      className={cn(\n        \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </option>\n  );\n});\n\nSelectItem.displayName = \"SelectItem\";\n\nconst SelectTrigger = React.forwardRef(({ className, children, ...props }, ref) => {\n  return (\n    <button\n      ref={ref}\n      className={cn(\n        \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </button>\n  );\n});\n\nSelectTrigger.displayName = \"SelectTrigger\";\n\nconst SelectValue = React.forwardRef(({ className, ...props }, ref) => {\n  return (\n    <span\n      ref={ref}\n      className={cn(\"block truncate\", className)}\n      {...props}\n    />\n  );\n});\n\nSelectValue.displayName = \"SelectValue\";\n\nexport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n};\n\n","import React, { useState } from 'react';\nimport { Eye, EyeOff, Mail, Lock, User, Phone, AlertCircle, CheckCircle } from 'lucide-react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Button } from '../ui/button';\nimport { Input } from '../ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';\nimport Logo from '../Logo';\n\nexport default function RegisterForm({ onSwitchToLogin }) {\n  const { register, isLoading, error, clearError } = useAuth();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    password: '',\n    confirmPassword: '',\n    role: 'student',\n    grade: '',\n    parentEmail: '',\n    acceptTerms: false\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [formErrors, setFormErrors] = useState({});\n  const [passwordStrength, setPasswordStrength] = useState(0);\n\n  const grades = [\n    { value: 'premiere', label: 'Première' },\n    { value: 'terminale', label: 'Terminale' }\n  ];\n\n  const roles = [\n    { value: 'student', label: 'Élève' },\n    { value: 'parent', label: 'Parent' },\n    { value: 'teacher', label: 'Enseignant' }\n  ];\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    const newValue = type === 'checkbox' ? checked : value;\n    \n    setFormData(prev => ({\n      ...prev,\n      [name]: newValue\n    }));\n    \n    // Calculer la force du mot de passe\n    if (name === 'password') {\n      calculatePasswordStrength(value);\n    }\n    \n    // Effacer les erreurs lors de la saisie\n    if (formErrors[name]) {\n      setFormErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n    \n    if (error) {\n      clearError();\n    }\n  };\n\n  const handleSelectChange = (name, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    if (formErrors[name]) {\n      setFormErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  const calculatePasswordStrength = (password) => {\n    let strength = 0;\n    \n    if (password.length >= 8) strength += 1;\n    if (/[a-z]/.test(password)) strength += 1;\n    if (/[A-Z]/.test(password)) strength += 1;\n    if (/[0-9]/.test(password)) strength += 1;\n    if (/[^A-Za-z0-9]/.test(password)) strength += 1;\n    \n    setPasswordStrength(strength);\n  };\n\n  const getPasswordStrengthColor = () => {\n    if (passwordStrength <= 2) return 'bg-red-500';\n    if (passwordStrength <= 3) return 'bg-yellow-500';\n    if (passwordStrength <= 4) return 'bg-blue-500';\n    return 'bg-green-500';\n  };\n\n  const getPasswordStrengthText = () => {\n    if (passwordStrength <= 2) return 'Faible';\n    if (passwordStrength <= 3) return 'Moyen';\n    if (passwordStrength <= 4) return 'Fort';\n    return 'Très fort';\n  };\n\n  const validateForm = () => {\n    const errors = {};\n    \n    if (!formData.firstName.trim()) {\n      errors.firstName = 'Le prénom est requis';\n    }\n    \n    if (!formData.lastName.trim()) {\n      errors.lastName = 'Le nom est requis';\n    }\n    \n    if (!formData.email) {\n      errors.email = 'L\\'email est requis';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      errors.email = 'Format d\\'email invalide';\n    }\n    \n    if (!formData.phone) {\n      errors.phone = 'Le numéro de téléphone est requis';\n    } else if (!/^[\\+]?[1-9][\\d]{0,15}$/.test(formData.phone.replace(/\\s/g, ''))) {\n      errors.phone = 'Format de téléphone invalide';\n    }\n    \n    if (!formData.password) {\n      errors.password = 'Le mot de passe est requis';\n    } else if (formData.password.length < 8) {\n      errors.password = 'Le mot de passe doit contenir au moins 8 caractères';\n    } else if (passwordStrength < 3) {\n      errors.password = 'Le mot de passe n\\'est pas assez fort';\n    }\n    \n    if (!formData.confirmPassword) {\n      errors.confirmPassword = 'La confirmation du mot de passe est requise';\n    } else if (formData.password !== formData.confirmPassword) {\n      errors.confirmPassword = 'Les mots de passe ne correspondent pas';\n    }\n    \n    if (formData.role === 'student' && !formData.grade) {\n      errors.grade = 'Le niveau scolaire est requis pour les élèves';\n    }\n    \n    if (formData.role === 'student' && !formData.parentEmail) {\n      errors.parentEmail = 'L\\'email du parent est requis pour les élèves';\n    } else if (formData.parentEmail && !/\\S+@\\S+\\.\\S+/.test(formData.parentEmail)) {\n      errors.parentEmail = 'Format d\\'email parent invalide';\n    }\n    \n    if (!formData.acceptTerms) {\n      errors.acceptTerms = 'Vous devez accepter les conditions d\\'utilisation';\n    }\n    \n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n    \n    const userData = {\n      first_name: formData.firstName,\n      last_name: formData.lastName,\n      email: formData.email,\n      phone: formData.phone,\n      password: formData.password,\n      role: formData.role,\n      grade: formData.grade,\n      parent_email: formData.parentEmail\n    };\n    \n    const result = await register(userData);\n    \n    if (result.success) {\n      console.log('Inscription réussie');\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        {/* Logo et titre */}\n        <div className=\"text-center\">\n          <div className=\"flex justify-center mb-6\">\n            <Logo className=\"h-16 w-auto\" />\n          </div>\n          <h2 className=\"text-3xl font-bold text-gray-900\">\n            Créer votre compte\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            Rejoignez Nexus Réussite et commencez votre parcours d'excellence\n          </p>\n        </div>\n\n        <Card className=\"shadow-xl\">\n          <CardHeader className=\"space-y-1\">\n            <CardTitle className=\"text-2xl text-center\">Inscription</CardTitle>\n            <CardDescription className=\"text-center\">\n              Remplissez le formulaire pour créer votre compte\n            </CardDescription>\n          </CardHeader>\n          \n          <CardContent className=\"space-y-4\">\n            {/* Erreur générale */}\n            {error && (\n              <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n                <div className=\"flex\">\n                  <AlertCircle className=\"h-5 w-5 text-red-400\" />\n                  <div className=\"ml-3\">\n                    <p className=\"text-sm text-red-800\">{error}</p>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              {/* Type de compte */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Type de compte\n                </label>\n                <Select value={formData.role} onValueChange={(value) => handleSelectChange('role', value)}>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Sélectionnez votre rôle\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {roles.map((role) => (\n                      <SelectItem key={role.value} value={role.value}>\n                        {role.label}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n                {formErrors.role && (\n                  <p className=\"mt-1 text-sm text-red-600\">{formErrors.role}</p>\n                )}\n              </div>\n\n              {/* Nom et prénom */}\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Prénom\n                  </label>\n                  <div className=\"relative\">\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <User className=\"h-5 w-5 text-gray-400\" />\n                    </div>\n                    <Input\n                      id=\"firstName\"\n                      name=\"firstName\"\n                      type=\"text\"\n                      value={formData.firstName}\n                      onChange={handleChange}\n                      className={`pl-10 ${formErrors.firstName ? 'border-red-300' : ''}`}\n                      placeholder=\"Prénom\"\n                    />\n                  </div>\n                  {formErrors.firstName && (\n                    <p className=\"mt-1 text-sm text-red-600\">{formErrors.firstName}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Nom\n                  </label>\n                  <Input\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    type=\"text\"\n                    value={formData.lastName}\n                    onChange={handleChange}\n                    className={formErrors.lastName ? 'border-red-300' : ''}\n                    placeholder=\"Nom\"\n                  />\n                  {formErrors.lastName && (\n                    <p className=\"mt-1 text-sm text-red-600\">{formErrors.lastName}</p>\n                  )}\n                </div>\n              </div>\n\n              {/* Email */}\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Adresse email\n                </label>\n                <div className=\"relative\">\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <Mail className=\"h-5 w-5 text-gray-400\" />\n                  </div>\n                  <Input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    className={`pl-10 ${formErrors.email ? 'border-red-300' : ''}`}\n                    placeholder=\"votre@email.com\"\n                  />\n                </div>\n                {formErrors.email && (\n                  <p className=\"mt-1 text-sm text-red-600\">{formErrors.email}</p>\n                )}\n              </div>\n\n              {/* Téléphone */}\n              <div>\n                <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Numéro de téléphone\n                </label>\n                <div className=\"relative\">\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <Phone className=\"h-5 w-5 text-gray-400\" />\n                  </div>\n                  <Input\n                    id=\"phone\"\n                    name=\"phone\"\n                    type=\"tel\"\n                    value={formData.phone}\n                    onChange={handleChange}\n                    className={`pl-10 ${formErrors.phone ? 'border-red-300' : ''}`}\n                    placeholder=\"+216 XX XXX XXX\"\n                  />\n                </div>\n                {formErrors.phone && (\n                  <p className=\"mt-1 text-sm text-red-600\">{formErrors.phone}</p>\n                )}\n              </div>\n\n              {/* Niveau scolaire (pour les élèves) */}\n              {formData.role === 'student' && (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Niveau scolaire\n                  </label>\n                  <Select value={formData.grade} onValueChange={(value) => handleSelectChange('grade', value)}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Sélectionnez votre niveau\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {grades.map((grade) => (\n                        <SelectItem key={grade.value} value={grade.value}>\n                          {grade.label}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                  {formErrors.grade && (\n                    <p className=\"mt-1 text-sm text-red-600\">{formErrors.grade}</p>\n                  )}\n                </div>\n              )}\n\n              {/* Email du parent (pour les élèves) */}\n              {formData.role === 'student' && (\n                <div>\n                  <label htmlFor=\"parentEmail\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Email du parent/tuteur\n                  </label>\n                  <div className=\"relative\">\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                      <Mail className=\"h-5 w-5 text-gray-400\" />\n                    </div>\n                    <Input\n                      id=\"parentEmail\"\n                      name=\"parentEmail\"\n                      type=\"email\"\n                      value={formData.parentEmail}\n                      onChange={handleChange}\n                      className={`pl-10 ${formErrors.parentEmail ? 'border-red-300' : ''}`}\n                      placeholder=\"parent@email.com\"\n                    />\n                  </div>\n                  {formErrors.parentEmail && (\n                    <p className=\"mt-1 text-sm text-red-600\">{formErrors.parentEmail}</p>\n                  )}\n                </div>\n              )}\n\n              {/* Mot de passe */}\n              <div>\n                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Mot de passe\n                </label>\n                <div className=\"relative\">\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <Lock className=\"h-5 w-5 text-gray-400\" />\n                  </div>\n                  <Input\n                    id=\"password\"\n                    name=\"password\"\n                    type={showPassword ? 'text' : 'password'}\n                    value={formData.password}\n                    onChange={handleChange}\n                    className={`pl-10 pr-10 ${formErrors.password ? 'border-red-300' : ''}`}\n                    placeholder=\"••••••••\"\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? (\n                      <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                    ) : (\n                      <Eye className=\"h-5 w-5 text-gray-400\" />\n                    )}\n                  </button>\n                </div>\n                \n                {/* Indicateur de force du mot de passe */}\n                {formData.password && (\n                  <div className=\"mt-2\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"flex-1 bg-gray-200 rounded-full h-2\">\n                        <div\n                          className={`h-2 rounded-full transition-all duration-300 ${getPasswordStrengthColor()}`}\n                          style={{ width: `${(passwordStrength / 5) * 100}%` }}\n                        ></div>\n                      </div>\n                      <span className=\"text-xs text-gray-600\">{getPasswordStrengthText()}</span>\n                    </div>\n                  </div>\n                )}\n                \n                {formErrors.password && (\n                  <p className=\"mt-1 text-sm text-red-600\">{formErrors.password}</p>\n                )}\n              </div>\n\n              {/* Confirmation du mot de passe */}\n              <div>\n                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Confirmer le mot de passe\n                </label>\n                <div className=\"relative\">\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <Lock className=\"h-5 w-5 text-gray-400\" />\n                  </div>\n                  <Input\n                    id=\"confirmPassword\"\n                    name=\"confirmPassword\"\n                    type={showConfirmPassword ? 'text' : 'password'}\n                    value={formData.confirmPassword}\n                    onChange={handleChange}\n                    className={`pl-10 pr-10 ${formErrors.confirmPassword ? 'border-red-300' : ''}`}\n                    placeholder=\"••••••••\"\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                  >\n                    {showConfirmPassword ? (\n                      <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                    ) : (\n                      <Eye className=\"h-5 w-5 text-gray-400\" />\n                    )}\n                  </button>\n                </div>\n                \n                {/* Indicateur de correspondance */}\n                {formData.confirmPassword && (\n                  <div className=\"mt-1 flex items-center\">\n                    {formData.password === formData.confirmPassword ? (\n                      <div className=\"flex items-center text-green-600\">\n                        <CheckCircle className=\"h-4 w-4 mr-1\" />\n                        <span className=\"text-xs\">Les mots de passe correspondent</span>\n                      </div>\n                    ) : (\n                      <div className=\"flex items-center text-red-600\">\n                        <AlertCircle className=\"h-4 w-4 mr-1\" />\n                        <span className=\"text-xs\">Les mots de passe ne correspondent pas</span>\n                      </div>\n                    )}\n                  </div>\n                )}\n                \n                {formErrors.confirmPassword && (\n                  <p className=\"mt-1 text-sm text-red-600\">{formErrors.confirmPassword}</p>\n                )}\n              </div>\n\n              {/* Conditions d'utilisation */}\n              <div className=\"flex items-start\">\n                <div className=\"flex items-center h-5\">\n                  <input\n                    id=\"acceptTerms\"\n                    name=\"acceptTerms\"\n                    type=\"checkbox\"\n                    checked={formData.acceptTerms}\n                    onChange={handleChange}\n                    className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                  />\n                </div>\n                <div className=\"ml-3 text-sm\">\n                  <label htmlFor=\"acceptTerms\" className=\"text-gray-700\">\n                    J'accepte les{' '}\n                    <a href=\"#\" className=\"text-blue-600 hover:text-blue-500\">\n                      Conditions d'utilisation\n                    </a>{' '}\n                    et la{' '}\n                    <a href=\"#\" className=\"text-blue-600 hover:text-blue-500\">\n                      Politique de confidentialité\n                    </a>\n                  </label>\n                </div>\n              </div>\n              {formErrors.acceptTerms && (\n                <p className=\"text-sm text-red-600\">{formErrors.acceptTerms}</p>\n              )}\n\n              {/* Bouton d'inscription */}\n              <Button\n                type=\"submit\"\n                className=\"w-full\"\n                disabled={isLoading}\n              >\n                {isLoading ? (\n                  <div className=\"flex items-center\">\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                    Création du compte...\n                  </div>\n                ) : (\n                  'Créer mon compte'\n                )}\n              </Button>\n            </form>\n\n            {/* Lien vers la connexion */}\n            <div className=\"text-center\">\n              <p className=\"text-sm text-gray-600\">\n                Déjà un compte ?{' '}\n                <button\n                  type=\"button\"\n                  onClick={onSwitchToLogin}\n                  className=\"font-medium text-blue-600 hover:text-blue-500\"\n                >\n                  Se connecter\n                </button>\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\n","import React, { useState } from 'react';\nimport LoginForm from './LoginForm';\nimport RegisterForm from './RegisterForm';\n\nexport default function AuthPage() {\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchToRegister = () => setIsLogin(false);\n  const switchToLogin = () => setIsLogin(true);\n\n  return (\n    <>\n      {isLogin ? (\n        <LoginForm onSwitchToRegister={switchToRegister} />\n      ) : (\n        <RegisterForm onSwitchToLogin={switchToLogin} />\n      )}\n    </>\n  );\n}\n\n","import React from 'react'\n\nconst Badge = React.forwardRef(({ className, variant = \"default\", ...props }, ref) => {\n  const baseClasses = \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\n  \n  const variants = {\n    default: \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n    secondary: \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n    destructive: \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n    outline: \"text-foreground\",\n  }\n  \n  const variantClass = variants[variant] || variants.default\n  \n  return (\n    <div\n      ref={ref}\n      className={`${baseClasses} ${variantClass} ${className || ''}`}\n      {...props}\n    />\n  )\n})\nBadge.displayName = \"Badge\"\n\nexport { Badge }\n\n","import React from 'react'\n\nconst Tabs = ({ value, onValueChange, className, children, ...props }) => {\n  return (\n    <div className={className} {...props}>\n      {React.Children.map(children, child => \n        React.cloneElement(child, { value, onValueChange })\n      )}\n    </div>\n  )\n}\n\nconst TabsList = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={`inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground ${className || ''}`}\n    {...props}\n  />\n))\nTabsList.displayName = \"TabsList\"\n\nconst TabsTrigger = React.forwardRef(({ className, value, onValueChange, children, ...props }, ref) => {\n  const handleClick = () => {\n    if (onValueChange) {\n      onValueChange(value)\n    }\n  }\n\n  return (\n    <button\n      ref={ref}\n      className={`inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm ${className || ''}`}\n      onClick={handleClick}\n      {...props}\n    >\n      {children}\n    </button>\n  )\n})\nTabsTrigger.displayName = \"TabsTrigger\"\n\nconst TabsContent = ({ className, value, children, ...props }) => {\n  const currentValue = props.value || value\n  const targetValue = props.targetValue || value\n  \n  if (currentValue !== targetValue) {\n    return null\n  }\n\n  return (\n    <div\n      className={`mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 ${className || ''}`}\n      {...props}\n    >\n      {children}\n    </div>\n  )\n}\nTabsContent.displayName = \"TabsContent\"\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n\n","import React, { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button.jsx'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card.jsx'\nimport { Badge } from '@/components/ui/badge.jsx'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs.jsx'\nimport Logo from './Logo'\nimport { \n  BookOpen, \n  Brain, \n  Trophy, \n  Star, \n  Clock, \n  Target, \n  TrendingUp,\n  MessageCircle,\n  Calendar,\n  FileText,\n  Award,\n  Zap,\n  Users,\n  GraduationCap,\n  BarChart3,\n  CheckCircle,\n  ArrowRight,\n  Play,\n  MapPin,\n  Phone,\n  Mail,\n  Globe,\n  Facebook,\n  Instagram,\n  Youtube,\n  Linkedin,\n  Code2,\n  Presentation,\n  Calculator,\n  Atom,\n  PenTool,\n  Lightbulb,\n  Shield,\n  Sparkles,\n  Rocket,\n  Heart,\n  ChevronRight,\n  Quote,\n  Eye,\n  Monitor,\n  Coffee,\n  Navigation,\n  Car,\n  Menu,\n  X\n} from 'lucide-react'\n\nconst LandingPage = ({ onLogin }) => {\n  const [activeTab, setActiveTab] = useState('individuel');\n  const [currentTestimonial, setCurrentTestimonial] = useState(0);\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  const testimonials = [\n    {\n      name: 'Sarah M.',\n      grade: 'Terminale S - Mention TB',\n      avatar: 'S',\n      text: 'ARIA m\\'a aidée à comprendre mes points faibles en maths. Les cours avec M. Dubois et les exercices personnalisés m\\'ont permis de passer de 12 à 18 de moyenne !',\n      rating: 5\n    },\n    {\n      name: 'Mme Benali',\n      role: 'Mère d\\'élève',\n      avatar: 'M',\n      text: 'L\\'interface parent est fantastique ! Je peux suivre les progrès de mon fils en temps réel. Les rapports hebdomadaires sont très détaillés et rassurants.',\n      rating: 5\n    },\n    {\n      name: 'Ahmed K.',\n      grade: 'Terminale NSI - Admis Polytechnique',\n      avatar: 'A',\n      text: 'Les cours de NSI avec des profs diplômés DIU font toute la différence. J\\'ai pu intégrer Polytechnique grâce à leur préparation d\\'excellence !',\n      rating: 5\n    }\n  ];\n\n  const teachers = [\n    {\n      id: 'dubois',\n      name: 'M. Dubois',\n      subject: 'Mathématiques',\n      credentials: 'Agrégé de Mathématiques',\n      experience: '15 ans d\\'expérience AEFE',\n      specialties: ['Spécialiste Terminale S'],\n      rating: 4.9,\n      avatar: 'MD',\n      badge: 'Expert',\n      description: 'Expert en préparation aux concours d\\'ingénieurs et spécialiste des mathématiques avancées. Accompagne les élèves vers l\\'excellence avec une pédagogie adaptée.'\n    },\n    {\n      id: 'martin',\n      name: 'Mme Martin',\n      subject: 'NSI',\n      credentials: 'Diplômée DIU NSI',\n      experience: 'Expert Python & Algorithmique',\n      specialties: ['Préparation Grand Oral'],\n      rating: 4.8,\n      avatar: 'MM',\n      badge: 'DIU NSI',\n      description: 'Spécialisée en NSI avec une approche pratique et moderne. Accompagne les élèves dans leurs projets et les prépare aux études supérieures en informatique.'\n    },\n    {\n      id: 'rousseau',\n      name: 'Dr. Rousseau',\n      subject: 'Français & Grand Oral',\n      credentials: 'Expert en éloquence',\n      experience: 'Spécialiste Parcoursup',\n      specialties: ['Coach en développement personnel'],\n      rating: 5.0,\n      avatar: 'DR',\n      badge: 'Grand Oral',\n      description: 'Docteur en Sciences de l\\'Éducation, spécialisé dans l\\'orientation et la préparation au Grand Oral. Accompagne les élèves dans leur projet d\\'avenir.'\n    }\n  ];\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTestimonial((prev) => (prev + 1) % testimonials.length);\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const scrollToSection = (sectionId) => {\n    document.getElementById(sectionId)?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Header */}\n      <header className=\"fixed top-0 left-0 right-0 z-50 bg-white/95 header-blur border-b border-gray-200/50 shadow-sm\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex items-center justify-between h-16\">\n            {/* Logo */}\n            <div className=\"flex items-center\">\n              <Logo size=\"small\" className=\"h-10\" />\n            </div>\n            \n            {/* Navigation */}\n            <nav className=\"hidden md:flex items-center space-x-8\">\n              <a href=\"#formations\" className=\"nav-link text-gray-700 hover:text-blue-600 font-medium transition-colors\">\n                Formations\n              </a>\n              <a href=\"#professeurs\" className=\"nav-link text-gray-700 hover:text-blue-600 font-medium transition-colors\">\n                Professeurs\n              </a>\n              <a href=\"#temoignages\" className=\"nav-link text-gray-700 hover:text-blue-600 font-medium transition-colors\">\n                Témoignages\n              </a>\n              <a href=\"#contact\" className=\"nav-link text-gray-700 hover:text-blue-600 font-medium transition-colors\">\n                Contact\n              </a>\n            </nav>\n            \n            {/* Actions Desktop */}\n            <div className=\"hidden md:flex items-center space-x-4\">\n              <Button variant=\"outline\" size=\"sm\" onClick={() => window.location.href = '/auth'}>\n                Connexion\n              </Button>\n              <Button size=\"sm\" onClick={() => window.location.href = '/auth'}>\n                S'inscrire\n              </Button>\n            </div>\n            \n            {/* Menu Hamburger Mobile */}\n            <div className=\"md:hidden\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n              >\n                {mobileMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n              </Button>\n            </div>\n          </div>\n        </div>\n        \n        {/* Menu Mobile */}\n        {mobileMenuOpen && (\n          <div className=\"md:hidden border-t border-gray-200 bg-white mobile-menu-enter\">\n            <div className=\"px-4 py-4 space-y-4\">\n              <nav className=\"flex flex-col space-y-4\">\n                <a href=\"#formations\" className=\"text-gray-700 hover:text-blue-600 font-medium transition-colors\">\n                  Formations\n                </a>\n                <a href=\"#professeurs\" className=\"text-gray-700 hover:text-blue-600 font-medium transition-colors\">\n                  Professeurs\n                </a>\n                <a href=\"#temoignages\" className=\"text-gray-700 hover:text-blue-600 font-medium transition-colors\">\n                  Témoignages\n                </a>\n                <a href=\"#contact\" className=\"text-gray-700 hover:text-blue-600 font-medium transition-colors\">\n                  Contact\n                </a>\n              </nav>\n              <div className=\"flex flex-col space-y-2 pt-4 border-t border-gray-200\">\n                <Button variant=\"outline\" onClick={() => window.location.href = '/auth'}>\n                  Connexion\n                </Button>\n                <Button onClick={() => window.location.href = '/auth'}>\n                  S'inscrire\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n      </header>\n\n      {/* Hero Section */}\n      <section className=\"relative overflow-hidden bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 dark:from-gray-900 dark:via-blue-900 dark:to-indigo-900 pt-32 pb-20 lg:pt-40 lg:pb-32\">\n        <div className=\"absolute inset-0 bg-grid-pattern opacity-5\"></div>\n        <div className=\"container mx-auto px-4 relative\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            {/* Badges */}\n            <div className=\"flex flex-wrap justify-center gap-3 mb-8\">\n              <Badge className=\"nexus-badge-info flex items-center space-x-2\">\n                <Award className=\"w-4 h-4\" />\n                <span>Professeurs Certifiés AEFE</span>\n              </Badge>\n              <Badge className=\"nexus-badge-success flex items-center space-x-2\">\n                <Code2 className=\"w-4 h-4\" />\n                <span>Experts DIU NSI</span>\n              </Badge>\n              <Badge className=\"nexus-badge-warning flex items-center space-x-2\">\n                <Presentation className=\"w-4 h-4\" />\n                <span>Spécialistes Grand Oral</span>\n              </Badge>\n            </div>\n\n            {/* Titre principal */}\n            <h1 className=\"text-4xl lg:text-6xl font-bold mb-6\">\n              <span className=\"nexus-gradient-text\">Le meilleur des deux mondes</span>\n              <br />\n              <span className=\"text-foreground\">pour votre réussite</span>\n            </h1>\n\n            {/* Sous-titre */}\n            <p className=\"text-xl lg:text-2xl text-muted-foreground mb-8 max-w-3xl mx-auto\">\n              Accompagnement présentiel + plateforme intelligente 24/7\n            </p>\n            <p className=\"text-lg text-muted-foreground mb-12\">\n              Coaching, soutien et excellence pour les élèves de Première et Terminale du système français en Tunisie.\n            </p>\n\n            {/* CTA Buttons */}\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-16\">\n              <Button \n                size=\"lg\" \n                className=\"nexus-button-primary text-lg px-8 py-4\"\n                onClick={() => scrollToSection('offres')}\n              >\n                <CheckCircle className=\"w-5 h-5 mr-2\" />\n                Bilan de Positionnement Gratuit\n              </Button>\n              <Button \n                variant=\"outline\" \n                size=\"lg\" \n                className=\"text-lg px-8 py-4\"\n                onClick={() => onLogin('student')}\n              >\n                <Play className=\"w-5 h-5 mr-2\" />\n                Découvrir ARIA\n              </Button>\n            </div>\n\n            {/* Métriques */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 max-w-2xl mx-auto\">\n              <div className=\"text-center\">\n                <div className=\"flex items-center justify-center mb-2\">\n                  <TrendingUp className=\"w-6 h-6 text-green-500 mr-2\" />\n                  <span className=\"text-3xl font-bold text-primary\">87%</span>\n                </div>\n                <p className=\"text-sm text-muted-foreground\">Progression moyenne</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"flex items-center justify-center mb-2\">\n                  <Target className=\"w-6 h-6 text-blue-500 mr-2\" />\n                  <span className=\"text-3xl font-bold text-primary\">94%</span>\n                </div>\n                <p className=\"text-sm text-muted-foreground\">Confiance ARIA</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"flex items-center justify-center mb-2\">\n                  <Brain className=\"w-6 h-6 text-purple-500 mr-2\" />\n                  <span className=\"text-3xl font-bold text-primary\">24/7</span>\n                </div>\n                <p className=\"text-sm text-muted-foreground\">IA disponible</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"flex items-center justify-center mb-2\">\n                  <MessageCircle className=\"w-6 h-6 text-orange-500 mr-2\" />\n                  <span className=\"text-3xl font-bold text-primary\">100%</span>\n                </div>\n                <p className=\"text-sm text-muted-foreground\">Suivi personnalisé</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Notre Approche */}\n      <section id=\"approche\" className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">Notre Approche Hybride Révolutionnaire</h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Nexus associe technologie et humain pour un suivi adapté. Chaque élève dispose d'un cockpit personnel, de cours sur mesure, et d'un coach dédié.\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 mb-16\">\n            <Card className=\"nexus-card text-center p-8\">\n              <div className=\"w-16 h-16 nexus-gradient rounded-full flex items-center justify-center mx-auto mb-6\">\n                <Users className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-bold mb-4\">Accompagnement Présentiel</h3>\n              <p className=\"text-muted-foreground mb-6\">\n                Cours en face-à-face avec nos professeurs certifiés et agrégés. \n                Interaction humaine, motivation et suivi personnalisé.\n              </p>\n            </Card>\n\n            <Card className=\"nexus-card text-center p-8\">\n              <div className=\"w-16 h-16 nexus-gradient rounded-full flex items-center justify-center mx-auto mb-6\">\n                <Brain className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-bold mb-4\">Plateforme Intelligente 24/7</h3>\n              <p className=\"text-muted-foreground mb-6\">\n                IA ARIA disponible en permanence, ressources documentaires, \n                exercices adaptatifs et suivi de progression en temps réel.\n              </p>\n            </Card>\n\n            <Card className=\"nexus-card text-center p-8\">\n              <div className=\"w-16 h-16 nexus-gradient rounded-full flex items-center justify-center mx-auto mb-6\">\n                <Target className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-bold mb-4\">Personnalisation Maximale</h3>\n              <p className=\"text-muted-foreground mb-6\">\n                Diagnostic offert au départ, gamification, progression visible et \n                bilans réguliers pour un accompagnement sur mesure.\n              </p>\n            </Card>\n          </div>\n\n          {/* Nos Engagements */}\n          <div className=\"bg-muted rounded-2xl p-8\">\n            <h3 className=\"text-2xl font-bold text-center mb-8\">Nos Engagements</h3>\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <div className=\"flex items-center space-x-3\">\n                <CheckCircle className=\"w-6 h-6 text-green-500 flex-shrink-0\" />\n                <span className=\"font-medium\">Personnalisation totale du parcours</span>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <CheckCircle className=\"w-6 h-6 text-green-500 flex-shrink-0\" />\n                <span className=\"font-medium\">Excellence pédagogique garantie</span>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <CheckCircle className=\"w-6 h-6 text-green-500 flex-shrink-0\" />\n                <span className=\"font-medium\">Résultats mesurables et transparents</span>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <CheckCircle className=\"w-6 h-6 text-green-500 flex-shrink-0\" />\n                <span className=\"font-medium\">Préparation études supérieures</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Nos Matières */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">Nos Matières d'Excellence</h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Spécialisation dans les matières clés du baccalauréat français avec une approche moderne et efficace.\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <Card className=\"nexus-card p-6 hover:shadow-lg transition-shadow\">\n              <div className=\"flex items-center space-x-4 mb-4\">\n                <div className=\"w-12 h-12 bg-blue-100 dark:bg-blue-900/20 rounded-lg flex items-center justify-center\">\n                  <Calculator className=\"w-6 h-6 text-blue-600\" />\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-bold\">Mathématiques Terminale</h3>\n                  <p className=\"text-sm text-muted-foreground\">Renforcement et approfondissement</p>\n                </div>\n              </div>\n              <p className=\"text-muted-foreground mb-4\">\n                Renforcement et approfondissement, méthodologie BAC. Maîtrise des fonctions, probabilités et géométrie.\n              </p>\n              <Button variant=\"outline\" size=\"sm\" className=\"w-full\">\n                <Calendar className=\"w-4 h-4 mr-2\" />\n                Prendre un rendez-vous\n              </Button>\n            </Card>\n\n            <Card className=\"nexus-card p-6 hover:shadow-lg transition-shadow\">\n              <div className=\"flex items-center space-x-4 mb-4\">\n                <div className=\"w-12 h-12 bg-purple-100 dark:bg-purple-900/20 rounded-lg flex items-center justify-center\">\n                  <Code2 className=\"w-6 h-6 text-purple-600\" />\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-bold\">NSI Spécialisée</h3>\n                  <p className=\"text-sm text-muted-foreground\">Cours DIU validés</p>\n                </div>\n              </div>\n              <p className=\"text-muted-foreground mb-4\">\n                Cours DIU validés, Grand Oral, projets Python. Enseignants diplômés DIU avec expertise approfondie.\n              </p>\n              <Button variant=\"outline\" size=\"sm\" className=\"w-full\">\n                <Play className=\"w-4 h-4 mr-2\" />\n                Voir les prochaines sessions\n              </Button>\n            </Card>\n\n            <Card className=\"nexus-card p-6 hover:shadow-lg transition-shadow\">\n              <div className=\"flex items-center space-x-4 mb-4\">\n                <div className=\"w-12 h-12 bg-green-100 dark:bg-green-900/20 rounded-lg flex items-center justify-center\">\n                  <Atom className=\"w-6 h-6 text-green-600\" />\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-bold\">Physique-Chimie</h3>\n                  <p className=\"text-sm text-muted-foreground\">Explication concrète</p>\n                </div>\n              </div>\n              <p className=\"text-muted-foreground mb-4\">\n                Explication concrète, annales corrigées. Mécanique, thermodynamique et chimie organique.\n              </p>\n              <Button variant=\"outline\" size=\"sm\" className=\"w-full\">\n                <BookOpen className=\"w-4 h-4 mr-2\" />\n                S'inscrire à un atelier\n              </Button>\n            </Card>\n\n            <Card className=\"nexus-card p-6 hover:shadow-lg transition-shadow\">\n              <div className=\"flex items-center space-x-4 mb-4\">\n                <div className=\"w-12 h-12 bg-red-100 dark:bg-red-900/20 rounded-lg flex items-center justify-center\">\n                  <PenTool className=\"w-6 h-6 text-red-600\" />\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-bold\">Français & Grand Oral</h3>\n                  <p className=\"text-sm text-muted-foreground\">Préparation ciblée</p>\n                </div>\n              </div>\n              <p className=\"text-muted-foreground mb-4\">\n                Préparation ciblée, argumentation et éloquence. Dissertation, commentaire et expression orale.\n              </p>\n              <Button variant=\"outline\" size=\"sm\" className=\"w-full\">\n                <MessageCircle className=\"w-4 h-4 mr-2\" />\n                Prendre un rendez-vous\n              </Button>\n            </Card>\n\n            <Card className=\"nexus-card p-6 hover:shadow-lg transition-shadow\">\n              <div className=\"flex items-center space-x-4 mb-4\">\n                <div className=\"w-12 h-12 bg-orange-100 dark:bg-orange-900/20 rounded-lg flex items-center justify-center\">\n                  <Lightbulb className=\"w-6 h-6 text-orange-600\" />\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-bold\">Coaching Scolaire</h3>\n                  <p className=\"text-sm text-muted-foreground\">Planification et confiance</p>\n                </div>\n              </div>\n              <p className=\"text-muted-foreground mb-4\">\n                Planification, confiance, orientation Parcoursup. Méthodologie de travail et gestion du stress.\n              </p>\n              <Button variant=\"outline\" size=\"sm\" className=\"w-full\">\n                <Users className=\"w-4 h-4 mr-2\" />\n                Parler à notre coach\n              </Button>\n            </Card>\n\n            <Card className=\"nexus-card p-6 hover:shadow-lg transition-shadow bg-primary text-primary-foreground\">\n              <div className=\"flex items-center space-x-4 mb-4\">\n                <div className=\"w-12 h-12 bg-white/20 rounded-lg flex items-center justify-center\">\n                  <Sparkles className=\"w-6 h-6 text-white\" />\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-bold text-white\">Autres Matières</h3>\n                  <p className=\"text-sm text-white/80\">Histoire-Géo, SES, Philosophie...</p>\n                </div>\n              </div>\n              <p className=\"text-white/90 mb-4\">\n                Histoire-Géo, SES, Philosophie... Nous adaptons notre offre à vos besoins spécifiques.\n              </p>\n              <Button variant=\"secondary\" size=\"sm\" className=\"w-full\">\n                <Phone className=\"w-4 h-4 mr-2\" />\n                Demander un devis\n              </Button>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Nos Formules & Offres */}\n      <section id=\"offres\" className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">Nos Formules & Offres</h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Des parcours adaptés à chaque profil : accompagnement individuel, mini-groupes, stages intensifs. \n              Choisissez la formule qui correspond à vos ambitions et votre rythme d'apprentissage.\n            </p>\n          </div>\n\n          <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-4 mb-12\">\n              <TabsTrigger value=\"individuel\" className=\"flex items-center space-x-2\">\n                <Users className=\"w-4 h-4\" />\n                <span>Individuel</span>\n              </TabsTrigger>\n              <TabsTrigger value=\"mini-groupe\" className=\"flex items-center space-x-2\">\n                <Users className=\"w-4 h-4\" />\n                <span>Mini-Groupe</span>\n              </TabsTrigger>\n              <TabsTrigger value=\"specialites\" className=\"flex items-center space-x-2\">\n                <Star className=\"w-4 h-4\" />\n                <span>Spécialités</span>\n              </TabsTrigger>\n              <TabsTrigger value=\"stages\" className=\"flex items-center space-x-2\">\n                <Calendar className=\"w-4 h-4\" />\n                <span>Stages</span>\n              </TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"individuel\">\n              <div className=\"grid md:grid-cols-3 gap-8\">\n                <Card className=\"nexus-card p-6\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <div className=\"w-12 h-12 bg-blue-100 dark:bg-blue-900/20 rounded-lg flex items-center justify-center\">\n                      <Trophy className=\"w-6 h-6 text-blue-600\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-bold\">Coaching Premium</h3>\n                      <p className=\"text-sm text-muted-foreground\">Suivi individualisé toutes matières</p>\n                    </div>\n                  </div>\n                  <div className=\"text-center mb-6\">\n                    <div className=\"text-3xl font-bold text-primary mb-2\">320<span className=\"text-lg\">DT/mois</span></div>\n                  </div>\n                  <ul className=\"space-y-3 mb-6\">\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">4 heures de cours individuels/mois</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Accès complet à la plateforme ARIA</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Reporting détaillé parents</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Coach dédié toutes matières</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Suivi personnalisé continu</span>\n                    </li>\n                  </ul>\n                  <Button className=\"w-full nexus-button-primary\">\n                    Choisir cette formule\n                  </Button>\n                </Card>\n\n                <Card className=\"nexus-card p-6 border-2 border-primary relative\">\n                  <Badge className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 bg-primary text-primary-foreground\">\n                    Recommandé\n                  </Badge>\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <div className=\"w-12 h-12 bg-purple-100 dark:bg-purple-900/20 rounded-lg flex items-center justify-center\">\n                      <GraduationCap className=\"w-6 h-6 text-purple-600\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-bold\">Excellence Bac</h3>\n                      <p className=\"text-sm text-muted-foreground\">Préparation Bac intensifiée</p>\n                    </div>\n                  </div>\n                  <div className=\"text-center mb-6\">\n                    <div className=\"text-3xl font-bold text-primary mb-2\">420<span className=\"text-lg\">DT/mois</span></div>\n                  </div>\n                  <ul className=\"space-y-3 mb-6\">\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">6 heures de cours intensifs/mois</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Fiche objectifs personnalisée</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Simulations d'examens</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Préparation spécifique Bac</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Suivi intensif progression</span>\n                    </li>\n                  </ul>\n                  <Button className=\"w-full nexus-button-primary\">\n                    Choisir cette formule\n                  </Button>\n                </Card>\n\n                <Card className=\"nexus-card p-6\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <div className=\"w-12 h-12 bg-green-100 dark:bg-green-900/20 rounded-lg flex items-center justify-center\">\n                      <Rocket className=\"w-6 h-6 text-green-600\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-bold\">Coaching Parcoursup</h3>\n                      <p className=\"text-sm text-muted-foreground\">Aide dossier et orientation</p>\n                    </div>\n                  </div>\n                  <div className=\"text-center mb-6\">\n                    <div className=\"text-3xl font-bold text-primary mb-2\">390<span className=\"text-lg\">DT/forfait</span></div>\n                  </div>\n                  <ul className=\"space-y-3 mb-6\">\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">3 séances de coaching</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Relecture projets motivés</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Support documentation</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Préparation entretiens</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Stratégie orientation</span>\n                    </li>\n                  </ul>\n                  <Button variant=\"outline\" className=\"w-full\">\n                    Je veux en savoir plus\n                  </Button>\n                </Card>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"mini-groupe\">\n              <div className=\"grid md:grid-cols-2 gap-8 max-w-4xl mx-auto\">\n                <Card className=\"nexus-card p-6\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <div className=\"w-12 h-12 bg-blue-100 dark:bg-blue-900/20 rounded-lg flex items-center justify-center\">\n                      <Users className=\"w-6 h-6 text-blue-600\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-bold\">Groupe Réussite</h3>\n                      <p className=\"text-sm text-muted-foreground\">Séances hebdo en présentiel</p>\n                    </div>\n                  </div>\n                  <div className=\"text-center mb-6\">\n                    <div className=\"text-3xl font-bold text-primary mb-2\">180<span className=\"text-lg\">DT/mois</span></div>\n                  </div>\n                  <ul className=\"space-y-3 mb-6\">\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">2h/semaine + module en ligne</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Groupes homogènes (3-5 élèves)</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Comptes rendus individuels</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Dynamique de groupe stimulante</span>\n                    </li>\n                  </ul>\n                  <Button className=\"w-full nexus-button-primary\">\n                    Choisir cette formule\n                  </Button>\n                </Card>\n\n                <Card className=\"nexus-card p-6\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <div className=\"w-12 h-12 bg-purple-100 dark:bg-purple-900/20 rounded-lg flex items-center justify-center\">\n                      <BookOpen className=\"w-6 h-6 text-purple-600\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-bold\">Combo Révision</h3>\n                      <p className=\"text-sm text-muted-foreground\">2 matières / semaine</p>\n                    </div>\n                  </div>\n                  <div className=\"text-center mb-6\">\n                    <div className=\"text-3xl font-bold text-primary mb-2\">290<span className=\"text-lg\">DT/mois</span></div>\n                  </div>\n                  <ul className=\"space-y-3 mb-6\">\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">4h/semaine + plateforme</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">2 matières dans la même plage</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Optimisation du temps</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Suivi croisé des matières</span>\n                    </li>\n                  </ul>\n                  <Button className=\"w-full nexus-button-primary\">\n                    Choisir cette formule\n                  </Button>\n                </Card>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"specialites\">\n              <div className=\"grid md:grid-cols-2 gap-8 max-w-4xl mx-auto\">\n                <Card className=\"nexus-card p-6\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <div className=\"w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg flex items-center justify-center\">\n                      <Code2 className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-bold\">Duo Sciences</h3>\n                      <p className=\"text-sm text-muted-foreground\">Maths & NSI en mode hybride</p>\n                    </div>\n                  </div>\n                  <div className=\"text-center mb-6\">\n                    <div className=\"text-3xl font-bold text-primary mb-2\">400<span className=\"text-lg\">DT/mois</span></div>\n                  </div>\n                  <ul className=\"space-y-3 mb-6\">\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">6h/mois + exercices corrigés</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Focus Bac & CPGE</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Visio bilan mensuel</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Préparation concours</span>\n                    </li>\n                  </ul>\n                  <Button className=\"w-full nexus-button-primary\">\n                    Choisir cette formule\n                  </Button>\n                </Card>\n\n                <Card className=\"nexus-card p-6\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <div className=\"w-12 h-12 bg-gradient-to-r from-red-500 to-orange-500 rounded-lg flex items-center justify-center\">\n                      <Presentation className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-bold\">Orateur Nexus</h3>\n                      <p className=\"text-sm text-muted-foreground\">Grand Oral complet</p>\n                    </div>\n                  </div>\n                  <div className=\"text-center mb-6\">\n                    <div className=\"text-3xl font-bold text-primary mb-2\">390<span className=\"text-lg\">DT/forfait</span></div>\n                  </div>\n                  <ul className=\"space-y-3 mb-6\">\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">6h : contenu + structuration</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Simulation filmée</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">De la définition à l'entraînement</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Coaching éloquence</span>\n                    </li>\n                  </ul>\n                  <Button className=\"w-full nexus-button-primary\">\n                    Je veux en savoir plus\n                  </Button>\n                </Card>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"stages\">\n              <div className=\"grid md:grid-cols-3 gap-8\">\n                <Card className=\"nexus-card p-6\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <div className=\"w-12 h-12 bg-orange-100 dark:bg-orange-900/20 rounded-lg flex items-center justify-center\">\n                      <Calendar className=\"w-6 h-6 text-orange-600\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-bold\">Stage Août Bac</h3>\n                      <p className=\"text-sm text-muted-foreground\">1 semaine avant-rentrée</p>\n                    </div>\n                  </div>\n                  <div className=\"text-center mb-6\">\n                    <div className=\"text-3xl font-bold text-primary mb-2\">290<span className=\"text-lg\">DT/stage</span></div>\n                  </div>\n                  <ul className=\"space-y-3 mb-6\">\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">10h + support papier/PDF</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Par niveau/matière</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Préparation intensive</span>\n                    </li>\n                  </ul>\n                  <Button variant=\"outline\" className=\"w-full\">\n                    M'inscrire au prochain stage\n                  </Button>\n                </Card>\n\n                <Card className=\"nexus-card p-6\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <div className=\"w-12 h-12 bg-blue-100 dark:bg-blue-900/20 rounded-lg flex items-center justify-center\">\n                      <BookOpen className=\"w-6 h-6 text-blue-600\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-bold\">Stage Vacances</h3>\n                      <p className=\"text-sm text-muted-foreground\">Toussaint, hiver, printemps</p>\n                    </div>\n                  </div>\n                  <div className=\"text-center mb-6\">\n                    <div className=\"text-3xl font-bold text-primary mb-2\">200<span className=\"text-lg\">DT/stage</span></div>\n                  </div>\n                  <ul className=\"space-y-3 mb-6\">\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">6h / matière</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Quiz fin de stage</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Révisions ciblées</span>\n                    </li>\n                  </ul>\n                  <Button variant=\"outline\" className=\"w-full\">\n                    M'inscrire au prochain stage\n                  </Button>\n                </Card>\n\n                <Card className=\"nexus-card p-6\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <div className=\"w-12 h-12 bg-purple-100 dark:bg-purple-900/20 rounded-lg flex items-center justify-center\">\n                      <Code2 className=\"w-6 h-6 text-purple-600\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-bold\">Python Express</h3>\n                      <p className=\"text-sm text-muted-foreground\">Programmation NSI en 5 jours</p>\n                    </div>\n                  </div>\n                  <div className=\"text-center mb-6\">\n                    <div className=\"text-3xl font-bold text-primary mb-2\">240<span className=\"text-lg\">DT/semaine</span></div>\n                  </div>\n                  <ul className=\"space-y-3 mb-6\">\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Algorithmes, boucles, fonctions</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">POO (Programmation Orientée Objet)</span>\n                    </li>\n                    <li className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm\">Du débutant à l'autonomie</span>\n                    </li>\n                  </ul>\n                  <Button variant=\"outline\" className=\"w-full\">\n                    M'inscrire au prochain stage\n                  </Button>\n                </Card>\n              </div>\n            </TabsContent>\n          </Tabs>\n\n          <div className=\"text-center mt-12\">\n            <Button size=\"lg\" className=\"nexus-button-primary\">\n              <Phone className=\"w-5 h-5 mr-2\" />\n              Planifier un appel diagnostic gratuit\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Témoignages */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">Ils Nous Font Confiance</h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Découvrez les témoignages de nos élèves et de leurs parents qui ont choisi Nexus Réussite.\n            </p>\n          </div>\n\n          <div className=\"max-w-4xl mx-auto\">\n            <Card className=\"nexus-card p-8 text-center\">\n              <div className=\"flex justify-center mb-6\">\n                <div className=\"w-16 h-16 nexus-avatar bg-primary text-primary-foreground text-xl\">\n                  {testimonials[currentTestimonial].avatar}\n                </div>\n              </div>\n              \n              <div className=\"flex justify-center mb-4\">\n                {[...Array(testimonials[currentTestimonial].rating)].map((_, i) => (\n                  <Star key={i} className=\"w-5 h-5 text-yellow-400 fill-current\" />\n                ))}\n              </div>\n              \n              <blockquote className=\"text-lg text-muted-foreground mb-6 italic\">\n                <Quote className=\"w-6 h-6 text-muted-foreground/50 inline mr-2\" />\n                {testimonials[currentTestimonial].text}\n                <Quote className=\"w-6 h-6 text-muted-foreground/50 inline ml-2 rotate-180\" />\n              </blockquote>\n              \n              <div>\n                <p className=\"font-semibold text-foreground\">{testimonials[currentTestimonial].name}</p>\n                <p className=\"text-sm text-muted-foreground\">\n                  {testimonials[currentTestimonial].grade || testimonials[currentTestimonial].role}\n                </p>\n              </div>\n            </Card>\n\n            <div className=\"flex justify-center space-x-2 mt-8\">\n              {testimonials.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => setCurrentTestimonial(index)}\n                  className={`w-3 h-3 rounded-full transition-colors ${\n                    index === currentTestimonial ? 'bg-primary' : 'bg-muted-foreground/30'\n                  }`}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Nos Enseignants */}\n      <section id=\"enseignants\" className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">Nos Enseignants d'Exception</h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Découvrez nos professeurs certifiés et agrégés, experts du système français AEFE et spécialisés dans l'accompagnement vers l'excellence.\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {teachers.map((teacher) => (\n              <Card key={teacher.id} className=\"nexus-card p-6 text-center hover:shadow-lg transition-shadow\">\n                <div className=\"relative mb-6\">\n                  <div className={`w-20 h-20 nexus-avatar mx-auto text-xl ${\n                    teacher.id === 'dubois' ? 'bg-blue-500 text-white' :\n                    teacher.id === 'martin' ? 'bg-green-500 text-white' :\n                    'bg-red-500 text-white'\n                  }`}>\n                    {teacher.avatar}\n                  </div>\n                  <Badge className={`absolute -top-2 -right-2 ${\n                    teacher.badge === 'Expert' ? 'nexus-badge-success' :\n                    teacher.badge === 'DIU NSI' ? 'nexus-badge-info' :\n                    'nexus-badge-warning'\n                  }`}>\n                    <Award className=\"w-3 h-3 mr-1\" />\n                    {teacher.badge}\n                  </Badge>\n                </div>\n\n                <h3 className=\"text-xl font-bold mb-2\">{teacher.name}</h3>\n                <p className=\"text-primary font-medium mb-2\">{teacher.title}</p>\n                \n                <div className=\"space-y-2 mb-4\">\n                  <div className=\"flex items-center justify-center space-x-2 text-sm text-muted-foreground\">\n                    <GraduationCap className=\"w-4 h-4\" />\n                    <span>{teacher.credentials}</span>\n                  </div>\n                  <div className=\"flex items-center justify-center space-x-2 text-sm text-muted-foreground\">\n                    <Clock className=\"w-4 h-4\" />\n                    <span>{teacher.experience}</span>\n                  </div>\n                  {teacher.specialties.map((specialty, index) => (\n                    <div key={index} className=\"flex items-center justify-center space-x-2 text-sm text-muted-foreground\">\n                      <Star className=\"w-4 h-4\" />\n                      <span>{specialty}</span>\n                    </div>\n                  ))}\n                </div>\n\n                <p className=\"text-sm text-muted-foreground mb-4 text-left\">\n                  {teacher.description}\n                </p>\n\n                <div className=\"flex items-center justify-center space-x-1 mb-4\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star \n                      key={i} \n                      className={`w-4 h-4 ${\n                        i < Math.floor(teacher.rating) \n                          ? 'text-yellow-400 fill-current' \n                          : 'text-gray-300'\n                      }`} \n                    />\n                  ))}\n                  <span className=\"text-sm text-muted-foreground ml-2\">({teacher.rating}/5)</span>\n                </div>\n\n                <Button variant=\"outline\" className=\"w-full\">\n                  <Eye className=\"w-4 h-4 mr-2\" />\n                  Voir le profil →\n                </Button>\n              </Card>\n            ))}\n          </div>\n\n          <div className=\"text-center mt-12\">\n            <Button size=\"lg\" className=\"nexus-button-primary\">\n              <Users className=\"w-5 h-5 mr-2\" />\n              Découvrir tous nos enseignants\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Notre Centre */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">Notre Centre Nexus</h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Situé au cœur de Tunis, notre centre Nexus est un lieu moderne et équipé pour accueillir vos cours présentiels en toute sérénité.\n            </p>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h3 className=\"text-2xl font-bold mb-8\">Nos Espaces</h3>\n              \n              <div className=\"space-y-6\">\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-12 h-12 bg-blue-100 dark:bg-blue-900/20 rounded-lg flex items-center justify-center flex-shrink-0\">\n                    <Monitor className=\"w-6 h-6 text-blue-600\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold mb-2\">Salles de cours équipées</h4>\n                    <p className=\"text-muted-foreground\">Tableaux interactifs, connexion haut débit, climatisation</p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-12 h-12 bg-green-100 dark:bg-green-900/20 rounded-lg flex items-center justify-center flex-shrink-0\">\n                    <Coffee className=\"w-6 h-6 text-green-600\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold mb-2\">Espace détente</h4>\n                    <p className=\"text-muted-foreground\">Zone de pause pour les élèves et les parents</p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-12 h-12 bg-purple-100 dark:bg-purple-900/20 rounded-lg flex items-center justify-center flex-shrink-0\">\n                    <BookOpen className=\"w-6 h-6 text-purple-600\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold mb-2\">Bibliothèque de ressources</h4>\n                    <p className=\"text-muted-foreground\">Manuels, annales et supports pédagogiques</p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"mt-8 p-6 bg-card rounded-lg border\">\n                <h4 className=\"font-semibold mb-4\">Informations Pratiques</h4>\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center space-x-3\">\n                    <MapPin className=\"w-5 h-5 text-muted-foreground\" />\n                    <div>\n                      <p className=\"font-medium\">Centre Urbain Nord</p>\n                      <p className=\"text-sm text-muted-foreground\">Immeuble VENUS, Apt. C13</p>\n                      <p className=\"text-sm text-muted-foreground\">1082 – Tunis</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <Clock className=\"w-5 h-5 text-muted-foreground\" />\n                    <span>Lun-Sam : 8h00-20h00 | Dim : 9h00-17h00</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <Car className=\"w-5 h-5 text-muted-foreground\" />\n                    <span>Parking disponible | Accès métro ligne 1</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <Shield className=\"w-5 h-5 text-muted-foreground\" />\n                    <span>Protocole sanitaire strict | Accès sécurisé</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"space-y-6\">\n              <div className=\"bg-muted rounded-lg p-8 text-center\">\n                <MapPin className=\"w-16 h-16 text-muted-foreground mx-auto mb-4\" />\n                <p className=\"text-muted-foreground mb-4\">Carte Google Maps</p>\n                <p className=\"text-sm text-muted-foreground\">Centre Nexus Réussite</p>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <Button className=\"nexus-button-primary\">\n                  <Navigation className=\"w-4 h-4 mr-2\" />\n                  Obtenir l'itinéraire\n                </Button>\n                <Button variant=\"outline\">\n                  <Calendar className=\"w-4 h-4 mr-2\" />\n                  Planifier une visite\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Final */}\n      <section className=\"py-20 bg-primary text-primary-foreground\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-3xl lg:text-4xl font-bold mb-6\">\n            Prêt à Transformer Votre Réussite ?\n          </h2>\n          <p className=\"text-xl mb-8 max-w-2xl mx-auto opacity-90\">\n            Rejoignez les centaines d'élèves qui ont choisi Nexus Réussite pour atteindre l'excellence.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-12\">\n            <Button \n              size=\"lg\" \n              variant=\"secondary\"\n              className=\"text-lg px-8 py-4\"\n              onClick={() => onLogin('student')}\n            >\n              <CheckCircle className=\"w-5 h-5 mr-2\" />\n              Demander un bilan gratuit\n            </Button>\n            <Button \n              size=\"lg\" \n              variant=\"outline\"\n              className=\"text-lg px-8 py-4 border-white text-white hover:bg-white hover:text-primary\"\n              onClick={() => onLogin('parent')}\n            >\n              <MessageCircle className=\"w-5 h-5 mr-2\" />\n              Parler à notre assistante pédagogique\n            </Button>\n          </div>\n\n          <div className=\"flex justify-center space-x-8 text-sm opacity-75\">\n            <span>✓ Sans engagement</span>\n            <span>✓ Réponse sous 24h</span>\n            <span>✓ Bilan personnalisé</span>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer id=\"contact\" className=\"bg-gray-900 text-white py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid md:grid-cols-4 gap-8\">\n            {/* Logo et description */}\n            <div className=\"md:col-span-2\">\n              <div className=\"flex items-center space-x-3 mb-6\">\n                <div className=\"w-12 h-12 nexus-gradient rounded-lg flex items-center justify-center\">\n                  <span className=\"text-white font-bold text-xl\">N</span>\n                </div>\n                <div>\n                  <h3 className=\"text-xl font-bold\">Nexus Réussite</h3>\n                  <p className=\"text-sm text-gray-400\">Formation d'Excellence</p>\n                </div>\n              </div>\n              <p className=\"text-gray-300 mb-6 max-w-md\">\n                Accompagnement présentiel et plateforme intelligente pour la réussite des élèves du système français en Tunisie.\n              </p>\n              <div className=\"flex space-x-4\">\n                <a href=\"#\" className=\"w-10 h-10 bg-gray-800 rounded-lg flex items-center justify-center hover:bg-gray-700 transition-colors\">\n                  <Facebook className=\"w-5 h-5\" />\n                </a>\n                <a href=\"#\" className=\"w-10 h-10 bg-gray-800 rounded-lg flex items-center justify-center hover:bg-gray-700 transition-colors\">\n                  <Instagram className=\"w-5 h-5\" />\n                </a>\n                <a href=\"#\" className=\"w-10 h-10 bg-gray-800 rounded-lg flex items-center justify-center hover:bg-gray-700 transition-colors\">\n                  <Youtube className=\"w-5 h-5\" />\n                </a>\n                <a href=\"#\" className=\"w-10 h-10 bg-gray-800 rounded-lg flex items-center justify-center hover:bg-gray-700 transition-colors\">\n                  <Linkedin className=\"w-5 h-5\" />\n                </a>\n              </div>\n            </div>\n\n            {/* Liens rapides */}\n            <div>\n              <h4 className=\"font-semibold mb-4\">Liens Rapides</h4>\n              <ul className=\"space-y-2 text-gray-300\">\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">À propos de Nexus</a></li>\n                <li><a href=\"#offres\" className=\"hover:text-white transition-colors\">Nos Offres</a></li>\n                <li><a href=\"#enseignants\" className=\"hover:text-white transition-colors\">Nos Enseignants</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Notre Pédagogie</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">FAQ</a></li>\n              </ul>\n            </div>\n\n            {/* Contact */}\n            <div>\n              <h4 className=\"font-semibold mb-4\">Contact</h4>\n              <div className=\"space-y-3 text-gray-300\">\n                <div className=\"flex items-center space-x-3\">\n                  <MapPin className=\"w-5 h-5 flex-shrink-0\" />\n                  <div>\n                    <p>Centre Urbain Nord</p>\n                    <p>Immeuble VENUS, Apt. C13</p>\n                    <p>1082 – Tunis</p>\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <Phone className=\"w-5 h-5 flex-shrink-0\" />\n                  <span>+216 XX XXX XXX</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <Mail className=\"w-5 h-5 flex-shrink-0\" />\n                  <span>contact@nexus-reussite.tn</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <Globe className=\"w-5 h-5 flex-shrink-0\" />\n                  <span>www.nexus-reussite.tn</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"border-t border-gray-800 mt-12 pt-8 text-center text-gray-400\">\n            <p>&copy; 2025 Nexus Réussite. Tous droits réservés.</p>\n            <div className=\"flex justify-center space-x-6 mt-4 text-sm\">\n              <a href=\"#\" className=\"hover:text-white transition-colors\">Mentions légales</a>\n              <a href=\"#\" className=\"hover:text-white transition-colors\">Politique de confidentialité</a>\n              <a href=\"#\" className=\"hover:text-white transition-colors\">CGV</a>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default LandingPage;\n\n","import React from 'react'\n\nconst Progress = React.forwardRef(({ className, value, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={`relative h-4 w-full overflow-hidden rounded-full bg-secondary ${className || ''}`}\n    {...props}\n  >\n    <div\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </div>\n))\nProgress.displayName = \"Progress\"\n\nexport { Progress }\n\n","import React, { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card.jsx'\nimport { Button } from '@/components/ui/button.jsx'\nimport { Badge } from '@/components/ui/badge.jsx'\nimport { Progress } from '@/components/ui/progress.jsx'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs.jsx'\nimport { \n  BookOpen, \n  Brain, \n  Trophy, \n  Star, \n  Clock, \n  Target, \n  TrendingUp,\n  MessageCircle,\n  Calendar,\n  FileText,\n  Award,\n  Zap,\n  Users,\n  GraduationCap,\n  BarChart3,\n  CheckCircle,\n  AlertCircle,\n  Play,\n  Pause,\n  RotateCcw,\n  Eye,\n  Download,\n  Share2,\n  Heart,\n  Bookmark,\n  ChevronRight,\n  Plus,\n  Filter,\n  Search,\n  Bell,\n  Settings,\n  User,\n  Home,\n  Flame,\n  Sparkles\n} from 'lucide-react'\n\nconst StudentDashboard = ({ student, documents, onShowARIA, addNotification }) => {\n  const [activeTab, setActiveTab] = useState('overview');\n  const [selectedSubject, setSelectedSubject] = useState('all');\n  const [studyTimer, setStudyTimer] = useState({ active: false, time: 0 });\n\n  useEffect(() => {\n    let interval;\n    if (studyTimer.active) {\n      interval = setInterval(() => {\n        setStudyTimer(prev => ({ ...prev, time: prev.time + 1 }));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [studyTimer.active]);\n\n  const formatTime = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const toggleTimer = () => {\n    setStudyTimer(prev => ({ ...prev, active: !prev.active }));\n    if (!studyTimer.active) {\n      addNotification({\n        type: 'info',\n        title: 'Session d\\'étude démarrée',\n        message: 'Bon travail ! ARIA suit votre progression.'\n      });\n    }\n  };\n\n  const resetTimer = () => {\n    setStudyTimer({ active: false, time: 0 });\n  };\n\n  const getProgressColor = (progress) => {\n    if (progress >= 80) return 'bg-green-500';\n    if (progress >= 60) return 'bg-yellow-500';\n    return 'bg-red-500';\n  };\n\n  const getSubjectIcon = (subject) => {\n    switch (subject.toLowerCase()) {\n      case 'mathématiques':\n      case 'maths':\n        return '📐';\n      case 'nsi':\n        return '💻';\n      case 'physique':\n        return '⚛️';\n      case 'français':\n        return '📚';\n      default:\n        return '📖';\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      {/* Header avec informations élève */}\n      <div className=\"mb-8\">\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between mb-6\">\n          <div className=\"flex items-center space-x-4 mb-4 md:mb-0\">\n            <div className=\"w-16 h-16 nexus-avatar bg-primary text-primary-foreground text-xl\">\n              {student?.avatar || 'E'}\n            </div>\n            <div>\n              <h1 className=\"text-2xl font-bold\">Bonjour {student?.name || 'Élève'} !</h1>\n              <p className=\"text-muted-foreground\">{student?.grade} - {student?.school}</p>\n              <div className=\"flex items-center space-x-4 mt-2\">\n                <Badge className=\"nexus-badge-info\">\n                  <Flame className=\"w-3 h-3 mr-1\" />\n                  Série de {student?.streak || 0} jours\n                </Badge>\n                <Badge className=\"nexus-badge-success\">\n                  <Trophy className=\"w-3 h-3 mr-1\" />\n                  Niveau {student?.level || 1}\n                </Badge>\n                <Badge className=\"nexus-badge-warning\">\n                  <Zap className=\"w-3 h-3 mr-1\" />\n                  {student?.xp || 0} XP\n                </Badge>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-4\">\n            {/* Chronomètre d'étude */}\n            <Card className=\"nexus-card p-4\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-mono font-bold text-primary mb-2\">\n                  {formatTime(studyTimer.time)}\n                </div>\n                <div className=\"flex space-x-2\">\n                  <Button\n                    size=\"sm\"\n                    onClick={toggleTimer}\n                    className={studyTimer.active ? 'bg-red-500 hover:bg-red-600' : 'bg-green-500 hover:bg-green-600'}\n                  >\n                    {studyTimer.active ? <Pause className=\"w-4 h-4\" /> : <Play className=\"w-4 h-4\" />}\n                  </Button>\n                  <Button size=\"sm\" variant=\"outline\" onClick={resetTimer}>\n                    <RotateCcw className=\"w-4 h-4\" />\n                  </Button>\n                </div>\n              </div>\n            </Card>\n\n            <Button onClick={onShowARIA} className=\"nexus-button-primary\">\n              <Brain className=\"w-4 h-4 mr-2\" />\n              Parler à ARIA\n            </Button>\n          </div>\n        </div>\n\n        {/* Prochaine session */}\n        {student?.nextSession && (\n          <Card className=\"nexus-card p-4 bg-blue-50 dark:bg-blue-900/20 border-blue-200\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"w-12 h-12 bg-blue-100 dark:bg-blue-800 rounded-lg flex items-center justify-center\">\n                  <Calendar className=\"w-6 h-6 text-blue-600\" />\n                </div>\n                <div>\n                  <h3 className=\"font-semibold text-blue-900 dark:text-blue-100\">Prochaine session</h3>\n                  <p className=\"text-blue-700 dark:text-blue-300\">\n                    {student.nextSession.subject} avec {student.nextSession.teacher}\n                  </p>\n                  <p className=\"text-sm text-blue-600 dark:text-blue-400\">\n                    {student.nextSession.date} à {student.nextSession.time}\n                  </p>\n                </div>\n              </div>\n              <Button variant=\"outline\" size=\"sm\" className=\"border-blue-300 text-blue-700 hover:bg-blue-100\">\n                <Eye className=\"w-4 h-4 mr-2\" />\n                Voir détails\n              </Button>\n            </div>\n          </Card>\n        )}\n      </div>\n\n      {/* Onglets principaux */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-5 mb-8\">\n          <TabsTrigger value=\"overview\" className=\"flex items-center space-x-2\">\n            <Home className=\"w-4 h-4\" />\n            <span>Vue d'ensemble</span>\n          </TabsTrigger>\n          <TabsTrigger value=\"progress\" className=\"flex items-center space-x-2\">\n            <BarChart3 className=\"w-4 h-4\" />\n            <span>Progression</span>\n          </TabsTrigger>\n          <TabsTrigger value=\"documents\" className=\"flex items-center space-x-2\">\n            <FileText className=\"w-4 h-4\" />\n            <span>Documents</span>\n          </TabsTrigger>\n          <TabsTrigger value=\"badges\" className=\"flex items-center space-x-2\">\n            <Trophy className=\"w-4 h-4\" />\n            <span>Badges</span>\n          </TabsTrigger>\n          <TabsTrigger value=\"planning\" className=\"flex items-center space-x-2\">\n            <Calendar className=\"w-4 h-4\" />\n            <span>Planning</span>\n          </TabsTrigger>\n        </TabsList>\n\n        {/* Vue d'ensemble */}\n        <TabsContent value=\"overview\">\n          <div className=\"grid lg:grid-cols-3 gap-6\">\n            {/* Colonne principale */}\n            <div className=\"lg:col-span-2 space-y-6\">\n              {/* Métriques rapides */}\n              <div className=\"grid md:grid-cols-3 gap-4\">\n                <Card className=\"nexus-metric-card\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-12 h-12 bg-green-100 dark:bg-green-900/20 rounded-lg flex items-center justify-center\">\n                      <TrendingUp className=\"w-6 h-6 text-green-600\" />\n                    </div>\n                    <div>\n                      <div className=\"nexus-metric-value text-green-600\">{student?.progress?.overall || 0}%</div>\n                      <div className=\"nexus-metric-label\">Progression globale</div>\n                    </div>\n                  </div>\n                </Card>\n\n                <Card className=\"nexus-metric-card\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-12 h-12 bg-blue-100 dark:bg-blue-900/20 rounded-lg flex items-center justify-center\">\n                      <Target className=\"w-6 h-6 text-blue-600\" />\n                    </div>\n                    <div>\n                      <div className=\"nexus-metric-value text-blue-600\">{documents?.length || 0}</div>\n                      <div className=\"nexus-metric-label\">Documents actifs</div>\n                    </div>\n                  </div>\n                </Card>\n\n                <Card className=\"nexus-metric-card\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-12 h-12 bg-purple-100 dark:bg-purple-900/20 rounded-lg flex items-center justify-center\">\n                      <Flame className=\"w-6 h-6 text-purple-600\" />\n                    </div>\n                    <div>\n                      <div className=\"nexus-metric-value text-purple-600\">{student?.streak || 0}</div>\n                      <div className=\"nexus-metric-label\">Jours consécutifs</div>\n                    </div>\n                  </div>\n                </Card>\n              </div>\n\n              {/* Progression par matière */}\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <BarChart3 className=\"w-5 h-5\" />\n                    <span>Progression par Matière</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {student?.subjects?.map((subject, index) => {\n                      const progress = student.progress?.[subject.toLowerCase()] || 0;\n                      return (\n                        <div key={index} className=\"space-y-2\">\n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center space-x-2\">\n                              <span className=\"text-lg\">{getSubjectIcon(subject)}</span>\n                              <span className=\"font-medium\">{subject}</span>\n                            </div>\n                            <span className=\"text-sm font-semibold\">{progress}%</span>\n                          </div>\n                          <div className=\"nexus-progress-bar\">\n                            <div \n                              className={`nexus-progress-fill ${getProgressColor(progress)}`}\n                              style={{ width: `${progress}%` }}\n                            ></div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Activités récentes */}\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Clock className=\"w-5 h-5\" />\n                    <span>Activités Récentes</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {student?.recentActivities?.map((activity, index) => (\n                      <div key={index} className=\"flex items-start space-x-4 p-3 rounded-lg bg-muted/50\">\n                        <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${\n                          activity.type === 'achievement' ? 'bg-green-100 dark:bg-green-900/20' :\n                          activity.type === 'message' ? 'bg-blue-100 dark:bg-blue-900/20' :\n                          'bg-gray-100 dark:bg-gray-900/20'\n                        }`}>\n                          {activity.type === 'achievement' ? (\n                            <Trophy className=\"w-5 h-5 text-green-600\" />\n                          ) : activity.type === 'message' ? (\n                            <MessageCircle className=\"w-5 h-5 text-blue-600\" />\n                          ) : (\n                            <Bell className=\"w-5 h-5 text-gray-600\" />\n                          )}\n                        </div>\n                        <div className=\"flex-1\">\n                          <h4 className=\"font-medium\">{activity.message}</h4>\n                          <p className=\"text-sm text-muted-foreground\">{activity.detail}</p>\n                          <p className=\"text-xs text-muted-foreground mt-1\">\n                            {activity.date} à {activity.time}\n                          </p>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Sidebar */}\n            <div className=\"space-y-6\">\n              {/* Profil d'apprentissage ARIA */}\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Brain className=\"w-5 h-5 text-purple-600\" />\n                    <span>Profil ARIA</span>\n                  </CardTitle>\n                  <CardDescription>\n                    Votre style d'apprentissage analysé par l'IA\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {Object.entries(student?.learningStyle || {}).map(([style, percentage]) => (\n                      <div key={style} className=\"space-y-2\">\n                        <div className=\"flex justify-between text-sm\">\n                          <span className=\"capitalize\">{style === 'readingWriting' ? 'Lecture/Écriture' : style}</span>\n                          <span className=\"font-semibold\">{percentage}%</span>\n                        </div>\n                        <div className=\"nexus-progress-bar\">\n                          <div \n                            className={`nexus-progress-fill ${getProgressColor(percentage)}`}\n                            style={{ width: `${percentage}%` }}\n                          ></div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  <Button \n                    variant=\"outline\" \n                    size=\"sm\" \n                    className=\"w-full mt-4\"\n                    onClick={onShowARIA}\n                  >\n                    <Brain className=\"w-4 h-4 mr-2\" />\n                    Optimiser avec ARIA\n                  </Button>\n                </CardContent>\n              </Card>\n\n              {/* Badges récents */}\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Trophy className=\"w-5 h-5 text-yellow-600\" />\n                    <span>Badges Récents</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    {student?.badges?.slice(0, 4).map((badge, index) => (\n                      <div key={index} className=\"text-center p-3 rounded-lg bg-muted/50\">\n                        <div className=\"w-12 h-12 bg-yellow-100 dark:bg-yellow-900/20 rounded-full flex items-center justify-center mx-auto mb-2\">\n                          <Award className=\"w-6 h-6 text-yellow-600\" />\n                        </div>\n                        <p className=\"text-xs font-medium\">{badge}</p>\n                      </div>\n                    ))}\n                  </div>\n                  <Button variant=\"outline\" size=\"sm\" className=\"w-full mt-4\">\n                    <Eye className=\"w-4 h-4 mr-2\" />\n                    Voir tous les badges\n                  </Button>\n                </CardContent>\n              </Card>\n\n              {/* Actions rapides */}\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle>Actions Rapides</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  <Button variant=\"outline\" size=\"sm\" className=\"w-full justify-start\">\n                    <Plus className=\"w-4 h-4 mr-2\" />\n                    Nouveau document\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" className=\"w-full justify-start\">\n                    <Calendar className=\"w-4 h-4 mr-2\" />\n                    Planifier session\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" className=\"w-full justify-start\">\n                    <MessageCircle className=\"w-4 h-4 mr-2\" />\n                    Contacter prof\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" className=\"w-full justify-start\">\n                    <Settings className=\"w-4 h-4 mr-2\" />\n                    Paramètres\n                  </Button>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </TabsContent>\n\n        {/* Progression détaillée */}\n        <TabsContent value=\"progress\">\n          <div className=\"space-y-6\">\n            <Card className=\"nexus-card\">\n              <CardHeader>\n                <CardTitle>Analyse Détaillée de Progression</CardTitle>\n                <CardDescription>\n                  Évolution de vos performances sur les 30 derniers jours\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"h-64 bg-muted/30 rounded-lg flex items-center justify-center\">\n                  <div className=\"text-center\">\n                    <BarChart3 className=\"w-16 h-16 text-muted-foreground mx-auto mb-4\" />\n                    <p className=\"text-muted-foreground\">Graphique de progression</p>\n                    <p className=\"text-sm text-muted-foreground\">Données des 30 derniers jours</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle>Objectifs du Mois</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between p-3 rounded-lg bg-green-50 dark:bg-green-900/20\">\n                      <div className=\"flex items-center space-x-3\">\n                        <CheckCircle className=\"w-5 h-5 text-green-600\" />\n                        <span className=\"font-medium\">Maîtriser les fonctions exponentielles</span>\n                      </div>\n                      <Badge className=\"nexus-badge-success\">Terminé</Badge>\n                    </div>\n                    <div className=\"flex items-center justify-between p-3 rounded-lg bg-blue-50 dark:bg-blue-900/20\">\n                      <div className=\"flex items-center space-x-3\">\n                        <Target className=\"w-5 h-5 text-blue-600\" />\n                        <span className=\"font-medium\">Projet NSI - Algorithmes de tri</span>\n                      </div>\n                      <Badge className=\"nexus-badge-info\">En cours</Badge>\n                    </div>\n                    <div className=\"flex items-center justify-between p-3 rounded-lg bg-yellow-50 dark:bg-yellow-900/20\">\n                      <div className=\"flex items-center space-x-3\">\n                        <Clock className=\"w-5 h-5 text-yellow-600\" />\n                        <span className=\"font-medium\">Préparation Grand Oral</span>\n                      </div>\n                      <Badge className=\"nexus-badge-warning\">À venir</Badge>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle>Recommandations ARIA</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"p-3 rounded-lg bg-purple-50 dark:bg-purple-900/20\">\n                      <div className=\"flex items-start space-x-3\">\n                        <Brain className=\"w-5 h-5 text-purple-600 mt-0.5\" />\n                        <div>\n                          <h4 className=\"font-medium text-purple-900 dark:text-purple-100\">\n                            Optimisation d'apprentissage\n                          </h4>\n                          <p className=\"text-sm text-purple-700 dark:text-purple-300\">\n                            Votre style visuel dominant suggère d'utiliser plus de schémas en mathématiques.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"p-3 rounded-lg bg-blue-50 dark:bg-blue-900/20\">\n                      <div className=\"flex items-start space-x-3\">\n                        <Sparkles className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n                        <div>\n                          <h4 className=\"font-medium text-blue-900 dark:text-blue-100\">\n                            Moment optimal\n                          </h4>\n                          <p className=\"text-sm text-blue-700 dark:text-blue-300\">\n                            Vos meilleures performances sont entre 14h et 16h. Planifiez les matières difficiles à ce moment.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <Button \n                    variant=\"outline\" \n                    size=\"sm\" \n                    className=\"w-full mt-4\"\n                    onClick={onShowARIA}\n                  >\n                    <Brain className=\"w-4 h-4 mr-2\" />\n                    Plus de conseils ARIA\n                  </Button>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </TabsContent>\n\n        {/* Documents */}\n        <TabsContent value=\"documents\">\n          <div className=\"space-y-6\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n              <div>\n                <h2 className=\"text-2xl font-bold\">Mes Documents</h2>\n                <p className=\"text-muted-foreground\">Cours, exercices et évaluations personnalisés</p>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Button variant=\"outline\" size=\"sm\">\n                  <Filter className=\"w-4 h-4 mr-2\" />\n                  Filtrer\n                </Button>\n                <Button size=\"sm\" className=\"nexus-button-primary\">\n                  <Plus className=\"w-4 h-4 mr-2\" />\n                  Nouveau document\n                </Button>\n              </div>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {documents?.map((doc) => (\n                <Card key={doc.id} className=\"nexus-card hover:shadow-lg transition-shadow\">\n                  <CardHeader>\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex-1\">\n                        <CardTitle className=\"text-lg\">{doc.title}</CardTitle>\n                        <CardDescription>{doc.subject}</CardDescription>\n                      </div>\n                      <Badge className={\n                        doc.status === 'completed' ? 'nexus-badge-success' :\n                        doc.status === 'in_progress' ? 'nexus-badge-info' :\n                        'nexus-badge-warning'\n                      }>\n                        {doc.status === 'completed' ? 'Terminé' :\n                         doc.status === 'in_progress' ? 'En cours' :\n                         'À faire'}\n                      </Badge>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center justify-between text-sm\">\n                        <span className=\"text-muted-foreground\">Progression</span>\n                        <span className=\"font-semibold\">{doc.progress}%</span>\n                      </div>\n                      <div className=\"nexus-progress-bar\">\n                        <div \n                          className={`nexus-progress-fill ${getProgressColor(doc.progress)}`}\n                          style={{ width: `${doc.progress}%` }}\n                        ></div>\n                      </div>\n                      \n                      <div className=\"flex items-center justify-between text-sm text-muted-foreground\">\n                        <div className=\"flex items-center space-x-1\">\n                          <Clock className=\"w-4 h-4\" />\n                          <span>{doc.duration} min</span>\n                        </div>\n                        <div className=\"flex items-center space-x-1\">\n                          <Target className=\"w-4 h-4\" />\n                          <span>Niveau {doc.difficulty}/5</span>\n                        </div>\n                      </div>\n\n                      <div className=\"flex space-x-2\">\n                        <Button size=\"sm\" className=\"flex-1\">\n                          <Play className=\"w-4 h-4 mr-2\" />\n                          {doc.status === 'completed' ? 'Revoir' : 'Continuer'}\n                        </Button>\n                        <Button size=\"sm\" variant=\"outline\">\n                          <Download className=\"w-4 h-4\" />\n                        </Button>\n                        <Button size=\"sm\" variant=\"outline\">\n                          <Share2 className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </TabsContent>\n\n        {/* Badges et gamification */}\n        <TabsContent value=\"badges\">\n          <div className=\"space-y-6\">\n            <div className=\"text-center\">\n              <h2 className=\"text-2xl font-bold mb-2\">Mes Badges et Récompenses</h2>\n              <p className=\"text-muted-foreground\">Célébrez vos accomplissements et votre progression</p>\n            </div>\n\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              <Card className=\"nexus-card text-center p-6\">\n                <div className=\"w-20 h-20 bg-yellow-100 dark:bg-yellow-900/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Trophy className=\"w-10 h-10 text-yellow-600\" />\n                </div>\n                <h3 className=\"text-xl font-bold mb-2\">Niveau {student?.level || 1}</h3>\n                <p className=\"text-muted-foreground mb-4\">{student?.xp || 0} XP</p>\n                <div className=\"nexus-progress-bar mb-2\">\n                  <div \n                    className=\"nexus-progress-fill bg-yellow-500\"\n                    style={{ width: `${((student?.xp || 0) % 1000) / 10}%` }}\n                  ></div>\n                </div>\n                <p className=\"text-sm text-muted-foreground\">\n                  {1000 - ((student?.xp || 0) % 1000)} XP pour le niveau suivant\n                </p>\n              </Card>\n\n              <Card className=\"nexus-card text-center p-6\">\n                <div className=\"w-20 h-20 bg-red-100 dark:bg-red-900/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Flame className=\"w-10 h-10 text-red-600\" />\n                </div>\n                <h3 className=\"text-xl font-bold mb-2\">Série Active</h3>\n                <p className=\"text-muted-foreground mb-4\">{student?.streak || 0} jours consécutifs</p>\n                <p className=\"text-sm text-muted-foreground\">\n                  Continuez votre série en étudiant aujourd'hui !\n                </p>\n              </Card>\n\n              <Card className=\"nexus-card text-center p-6\">\n                <div className=\"w-20 h-20 bg-blue-100 dark:bg-blue-900/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Star className=\"w-10 h-10 text-blue-600\" />\n                </div>\n                <h3 className=\"text-xl font-bold mb-2\">Badges Obtenus</h3>\n                <p className=\"text-muted-foreground mb-4\">{student?.badges?.length || 0} badges</p>\n                <p className=\"text-sm text-muted-foreground\">\n                  Explorez de nouveaux défis pour plus de badges !\n                </p>\n              </Card>\n            </div>\n\n            <Card className=\"nexus-card\">\n              <CardHeader>\n                <CardTitle>Collection de Badges</CardTitle>\n                <CardDescription>Vos accomplissements et réussites</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid md:grid-cols-4 gap-4\">\n                  {student?.badges?.map((badge, index) => (\n                    <div key={index} className=\"text-center p-4 rounded-lg bg-muted/50 hover:bg-muted transition-colors\">\n                      <div className=\"w-16 h-16 bg-gradient-to-br from-yellow-400 to-orange-500 rounded-full flex items-center justify-center mx-auto mb-3\">\n                        <Award className=\"w-8 h-8 text-white\" />\n                      </div>\n                      <h4 className=\"font-semibold mb-1\">{badge}</h4>\n                      <p className=\"text-xs text-muted-foreground\">Obtenu récemment</p>\n                    </div>\n                  ))}\n                  \n                  {/* Badges à débloquer */}\n                  <div className=\"text-center p-4 rounded-lg border-2 border-dashed border-muted-foreground/30\">\n                    <div className=\"w-16 h-16 bg-muted rounded-full flex items-center justify-center mx-auto mb-3\">\n                      <Plus className=\"w-8 h-8 text-muted-foreground\" />\n                    </div>\n                    <h4 className=\"font-semibold mb-1 text-muted-foreground\">Prochain Badge</h4>\n                    <p className=\"text-xs text-muted-foreground\">Complétez 5 exercices</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        {/* Planning */}\n        <TabsContent value=\"planning\">\n          <div className=\"space-y-6\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n              <div>\n                <h2 className=\"text-2xl font-bold\">Mon Planning</h2>\n                <p className=\"text-muted-foreground\">Sessions programmées et disponibilités</p>\n              </div>\n              <Button size=\"sm\" className=\"nexus-button-primary\">\n                <Plus className=\"w-4 h-4 mr-2\" />\n                Nouvelle session\n              </Button>\n            </div>\n\n            <div className=\"grid lg:grid-cols-3 gap-6\">\n              <div className=\"lg:col-span-2\">\n                <Card className=\"nexus-card\">\n                  <CardHeader>\n                    <CardTitle>Calendrier de la Semaine</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"h-96 bg-muted/30 rounded-lg flex items-center justify-center\">\n                      <div className=\"text-center\">\n                        <Calendar className=\"w-16 h-16 text-muted-foreground mx-auto mb-4\" />\n                        <p className=\"text-muted-foreground\">Vue calendrier</p>\n                        <p className=\"text-sm text-muted-foreground\">Sessions et événements de la semaine</p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n\n              <div className=\"space-y-6\">\n                <Card className=\"nexus-card\">\n                  <CardHeader>\n                    <CardTitle>Prochaines Sessions</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      {student?.nextSession && (\n                        <div className=\"p-3 rounded-lg bg-blue-50 dark:bg-blue-900/20\">\n                          <div className=\"flex items-center space-x-3\">\n                            <div className=\"w-10 h-10 bg-blue-100 dark:bg-blue-800 rounded-lg flex items-center justify-center\">\n                              <BookOpen className=\"w-5 h-5 text-blue-600\" />\n                            </div>\n                            <div className=\"flex-1\">\n                              <h4 className=\"font-medium\">{student.nextSession.subject}</h4>\n                              <p className=\"text-sm text-muted-foreground\">{student.nextSession.teacher}</p>\n                              <p className=\"text-xs text-muted-foreground\">\n                                {student.nextSession.date} à {student.nextSession.time}\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                      \n                      <div className=\"text-center py-8\">\n                        <Calendar className=\"w-12 h-12 text-muted-foreground mx-auto mb-3\" />\n                        <p className=\"text-muted-foreground\">Aucune autre session programmée</p>\n                        <Button variant=\"outline\" size=\"sm\" className=\"mt-3\">\n                          <Plus className=\"w-4 h-4 mr-2\" />\n                          Planifier une session\n                        </Button>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"nexus-card\">\n                  <CardHeader>\n                    <CardTitle>Disponibilités</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-sm\">Lundi</span>\n                        <Badge variant=\"outline\">14h-18h</Badge>\n                      </div>\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-sm\">Mercredi</span>\n                        <Badge variant=\"outline\">16h-20h</Badge>\n                      </div>\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-sm\">Samedi</span>\n                        <Badge variant=\"outline\">9h-12h</Badge>\n                      </div>\n                    </div>\n                    <Button variant=\"outline\" size=\"sm\" className=\"w-full mt-4\">\n                      <Settings className=\"w-4 h-4 mr-2\" />\n                      Modifier disponibilités\n                    </Button>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default StudentDashboard;\n\n","import React, { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card.jsx'\nimport { Button } from '@/components/ui/button.jsx'\nimport { Badge } from '@/components/ui/badge.jsx'\nimport { Progress } from '@/components/ui/progress.jsx'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs.jsx'\nimport { \n  User, \n  BookOpen, \n  Brain, \n  Trophy, \n  Star, \n  Clock, \n  Target, \n  TrendingUp,\n  MessageCircle,\n  Calendar,\n  FileText,\n  Award,\n  Zap,\n  Users,\n  GraduationCap,\n  BarChart3,\n  CheckCircle,\n  AlertCircle,\n  Info,\n  Eye,\n  Download,\n  Share2,\n  Heart,\n  Bookmark,\n  ChevronRight,\n  Plus,\n  Filter,\n  Search,\n  Bell,\n  Settings,\n  Home,\n  Flame,\n  Sparkles,\n  Phone,\n  Mail,\n  Video,\n  Send,\n  Edit,\n  Trash2,\n  ChevronDown,\n  ExternalLink,\n  PieChart,\n  Activity,\n  Briefcase,\n  UserCheck\n} from 'lucide-react'\n\nconst ParentDashboard = ({ student, students, onSelectStudent, teachers, documents, addNotification }) => {\n  const [activeTab, setActiveTab] = useState('overview');\n  const [selectedPeriod, setSelectedPeriod] = useState('month');\n  const [showMessageModal, setShowMessageModal] = useState(false);\n  const [selectedTeacher, setSelectedTeacher] = useState(null);\n\n  const getProgressColor = (progress) => {\n    if (progress >= 80) return 'text-green-600 bg-green-100 dark:bg-green-900/20';\n    if (progress >= 60) return 'text-yellow-600 bg-yellow-100 dark:bg-yellow-900/20';\n    return 'text-red-600 bg-red-100 dark:bg-red-900/20';\n  };\n\n  const getSubjectIcon = (subject) => {\n    switch (subject.toLowerCase()) {\n      case 'mathématiques':\n      case 'maths':\n        return '📐';\n      case 'nsi':\n        return '💻';\n      case 'physique':\n        return '⚛️';\n      case 'français':\n        return '📚';\n      default:\n        return '📖';\n    }\n  };\n\n  const weeklyReports = [\n    {\n      week: 'Semaine du 15-21 Juillet',\n      subjects: [\n        {\n          name: 'Mathématiques',\n          teacher: 'M. Dubois',\n          hours: 2,\n          topics: ['Fonctions exponentielles', 'Limites'],\n          progress: 85,\n          grade: 16,\n          comment: 'Excellente progression sur les fonctions exponentielles. Sarah maîtrise bien les concepts et applique correctement les méthodes.',\n          homework: 'Exercices 45-50 p.127, Révision chapitre 8',\n          nextGoals: 'Approfondir les limites et dérivées'\n        },\n        {\n          name: 'NSI',\n          teacher: 'Mme Martin',\n          hours: 2,\n          topics: ['Algorithmes de tri', 'Complexité'],\n          progress: 78,\n          grade: 15,\n          comment: 'Bonne compréhension des algorithmes. Travail à poursuivre sur l\\'analyse de complexité.',\n          homework: 'Projet tri fusion à terminer',\n          nextGoals: 'Structures de données avancées'\n        },\n        {\n          name: 'Physique',\n          teacher: 'Dr. Rousseau',\n          hours: 1.5,\n          topics: ['Optique géométrique', 'Lentilles'],\n          progress: 72,\n          grade: 14,\n          comment: 'Notions comprises mais application pratique à renforcer avec plus d\\'exercices.',\n          homework: 'TP lentilles convergentes',\n          nextGoals: 'Maîtriser les constructions géométriques'\n        }\n      ],\n      globalComment: 'Semaine très productive. Sarah montre une excellente motivation et des progrès constants. L\\'IA ARIA l\\'aide efficacement dans ses révisions personnalisées.',\n      ariaInsights: 'ARIA a identifié que Sarah apprend mieux avec des supports visuels. Recommandation : privilégier les schémas et diagrammes.',\n      nextWeekFocus: 'Préparation intensive pour le contrôle de mathématiques du 28 juillet'\n    }\n  ];\n\n  const messages = [\n    {\n      id: 1,\n      from: 'M. Dubois',\n      subject: 'Mathématiques',\n      title: 'Excellent travail cette semaine',\n      message: 'Sarah a fait d\\'excellents progrès sur les fonctions exponentielles. Je recommande de continuer sur cette lancée avec les exercices supplémentaires que j\\'ai préparés.',\n      date: '2025-07-22',\n      time: '14:30',\n      read: false,\n      priority: 'normal'\n    },\n    {\n      id: 2,\n      from: 'Mme Martin',\n      subject: 'NSI',\n      title: 'Projet à finaliser',\n      message: 'Le projet sur les algorithmes de tri avance bien. Sarah peut me contacter si elle a des questions sur la partie complexité.',\n      date: '2025-07-21',\n      time: '16:45',\n      read: true,\n      priority: 'normal'\n    },\n    {\n      id: 3,\n      from: 'Équipe Nexus',\n      subject: 'Général',\n      title: 'Nouvelle fonctionnalité ARIA disponible',\n      message: 'ARIA peut maintenant générer des exercices personnalisés basés sur le profil d\\'apprentissage de Sarah. Découvrez cette fonctionnalité dans l\\'onglet Documents.',\n      date: '2025-07-20',\n      time: '10:00',\n      read: true,\n      priority: 'info'\n    }\n  ];\n\n  const upcomingSessions = [\n    {\n      date: '2025-07-23',\n      time: '14:00',\n      subject: 'Mathématiques',\n      teacher: 'M. Dubois',\n      type: 'Cours individuel',\n      topic: 'Révision fonctions + Contrôle blanc',\n      location: 'Centre Nexus - Salle 2',\n      duration: '1h30'\n    },\n    {\n      date: '2025-07-24',\n      time: '16:00',\n      subject: 'NSI',\n      teacher: 'Mme Martin',\n      type: 'Cours individuel',\n      topic: 'Structures de données - Listes chaînées',\n      location: 'Centre Nexus - Salle Info',\n      duration: '2h'\n    },\n    {\n      date: '2025-07-26',\n      time: '10:00',\n      subject: 'Physique',\n      teacher: 'Dr. Rousseau',\n      type: 'Mini-groupe (4 élèves)',\n      topic: 'TP Optique - Manipulation lentilles',\n      location: 'Centre Nexus - Labo',\n      duration: '2h'\n    }\n  ];\n\n  const sendMessage = (teacherId, message) => {\n    addNotification({\n      type: 'success',\n      title: 'Message envoyé',\n      message: `Votre message a été envoyé à ${teachers.find(t => t.id === teacherId)?.name}`\n    });\n    setShowMessageModal(false);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      {/* Header avec sélection d'élève */}\n      <div className=\"mb-8\">\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between mb-6\">\n          <div className=\"flex items-center space-x-4 mb-4 md:mb-0\">\n            <div className=\"w-16 h-16 nexus-avatar bg-primary text-primary-foreground text-xl\">\n              {student?.avatar || 'E'}\n            </div>\n            <div>\n              <h1 className=\"text-2xl font-bold\">Suivi de {student?.name || 'votre enfant'}</h1>\n              <p className=\"text-muted-foreground\">{student?.grade} - {student?.school}</p>\n              <div className=\"flex items-center space-x-4 mt-2\">\n                <Badge className=\"nexus-badge-info\">\n                  <TrendingUp className=\"w-3 h-3 mr-1\" />\n                  {student?.progress?.overall || 0}% de progression\n                </Badge>\n                <Badge className=\"nexus-badge-success\">\n                  <Trophy className=\"w-3 h-3 mr-1\" />\n                  Niveau {student?.level || 1}\n                </Badge>\n                <Badge className=\"nexus-badge-warning\">\n                  <Flame className=\"w-3 h-3 mr-1\" />\n                  {student?.streak || 0} jours actifs\n                </Badge>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-4\">\n            {/* Sélecteur d'élève si plusieurs enfants */}\n            {students?.length > 1 && (\n              <select \n                className=\"nexus-input\"\n                value={student?.id || ''}\n                onChange={(e) => onSelectStudent(students.find(s => s.id === e.target.value))}\n              >\n                {students.map(s => (\n                  <option key={s.id} value={s.id}>{s.name}</option>\n                ))}\n              </select>\n            )}\n\n            <Button \n              variant=\"outline\"\n              onClick={() => setShowMessageModal(true)}\n            >\n              <MessageCircle className=\"w-4 h-4 mr-2\" />\n              Contacter un prof\n            </Button>\n\n            <Button className=\"nexus-button-primary\">\n              <Calendar className=\"w-4 h-4 mr-2\" />\n              Planifier RDV\n            </Button>\n          </div>\n        </div>\n\n        {/* Alerte si besoin d'attention */}\n        <Card className=\"nexus-card border-orange-200 bg-orange-50 dark:bg-orange-900/20\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-3\">\n              <AlertCircle className=\"w-5 h-5 text-orange-600\" />\n              <div>\n                <h3 className=\"font-semibold text-orange-900 dark:text-orange-100\">\n                  Contrôle de mathématiques prévu\n                </h3>\n                <p className=\"text-orange-700 dark:text-orange-300\">\n                  Contrôle sur les fonctions exponentielles le 28 juillet. Sarah est bien préparée selon M. Dubois.\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Onglets principaux */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-4 mb-8\">\n          <TabsTrigger value=\"overview\" className=\"flex items-center space-x-2\">\n            <BarChart3 className=\"w-4 h-4\" />\n            <span>Vue d'ensemble</span>\n          </TabsTrigger>\n          <TabsTrigger value=\"profile\" className=\"flex items-center space-x-2\">\n            <User className=\"w-4 h-4\" />\n            <span>Profil Élève</span>\n          </TabsTrigger>\n          <TabsTrigger value=\"reports\" className=\"flex items-center space-x-2\">\n            <FileText className=\"w-4 h-4\" />\n            <span>Rapports</span>\n          </TabsTrigger>\n          <TabsTrigger value=\"communication\" className=\"flex items-center space-x-2\">\n            <MessageCircle className=\"w-4 h-4\" />\n            <span>Communication</span>\n          </TabsTrigger>\n        </TabsList>\n\n        {/* Vue d'ensemble */}\n        <TabsContent value=\"overview\">\n          <div className=\"grid lg:grid-cols-3 gap-6\">\n            {/* Colonne principale */}\n            <div className=\"lg:col-span-2 space-y-6\">\n              {/* Métriques principales */}\n              <div className=\"grid md:grid-cols-4 gap-4\">\n                <Card className=\"nexus-metric-card\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-12 h-12 bg-green-100 dark:bg-green-900/20 rounded-lg flex items-center justify-center\">\n                      <TrendingUp className=\"w-6 h-6 text-green-600\" />\n                    </div>\n                    <div>\n                      <div className=\"nexus-metric-value text-green-600\">{student?.progress?.overall || 0}%</div>\n                      <div className=\"nexus-metric-label\">Progression</div>\n                    </div>\n                  </div>\n                </Card>\n\n                <Card className=\"nexus-metric-card\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-12 h-12 bg-blue-100 dark:bg-blue-900/20 rounded-lg flex items-center justify-center\">\n                      <Clock className=\"w-6 h-6 text-blue-600\" />\n                    </div>\n                    <div>\n                      <div className=\"nexus-metric-value text-blue-600\">12h</div>\n                      <div className=\"nexus-metric-label\">Ce mois</div>\n                    </div>\n                  </div>\n                </Card>\n\n                <Card className=\"nexus-metric-card\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-12 h-12 bg-purple-100 dark:bg-purple-900/20 rounded-lg flex items-center justify-center\">\n                      <Brain className=\"w-6 h-6 text-purple-600\" />\n                    </div>\n                    <div>\n                      <div className=\"nexus-metric-value text-purple-600\">94%</div>\n                      <div className=\"nexus-metric-label\">Confiance ARIA</div>\n                    </div>\n                  </div>\n                </Card>\n\n                <Card className=\"nexus-metric-card\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-12 h-12 bg-yellow-100 dark:bg-yellow-900/20 rounded-lg flex items-center justify-center\">\n                      <Target className=\"w-6 h-6 text-yellow-600\" />\n                    </div>\n                    <div>\n                      <div className=\"nexus-metric-value text-yellow-600\">3/4</div>\n                      <div className=\"nexus-metric-label\">Objectifs</div>\n                    </div>\n                  </div>\n                </Card>\n              </div>\n\n              {/* Progression par matière */}\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <BarChart3 className=\"w-5 h-5\" />\n                    <span>Progression par Matière</span>\n                  </CardTitle>\n                  <CardDescription>Évolution des performances sur le mois</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-6\">\n                    {student?.subjects?.map((subject, index) => {\n                      const progress = student.progress?.[subject.toLowerCase()] || 0;\n                      const teacher = teachers?.find(t => t.subject.toLowerCase().includes(subject.toLowerCase()));\n                      return (\n                        <div key={index} className=\"space-y-3\">\n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center space-x-3\">\n                              <span className=\"text-lg\">{getSubjectIcon(subject)}</span>\n                              <div>\n                                <span className=\"font-medium\">{subject}</span>\n                                <p className=\"text-sm text-muted-foreground\">{teacher?.name}</p>\n                              </div>\n                            </div>\n                            <div className=\"text-right\">\n                              <span className=\"text-lg font-semibold\">{progress}%</span>\n                              <p className=\"text-sm text-muted-foreground\">Moyenne: 15.2/20</p>\n                            </div>\n                          </div>\n                          <div className=\"nexus-progress-bar\">\n                            <div \n                              className={`nexus-progress-fill ${\n                                progress >= 80 ? 'bg-green-500' :\n                                progress >= 60 ? 'bg-yellow-500' :\n                                'bg-red-500'\n                              }`}\n                              style={{ width: `${progress}%` }}\n                            ></div>\n                          </div>\n                          <div className=\"flex items-center justify-between text-sm text-muted-foreground\">\n                            <span>Dernière évaluation: 16/20</span>\n                            <span>Tendance: ↗️ +2 points</span>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Prochaines sessions */}\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Calendar className=\"w-5 h-5\" />\n                    <span>Prochaines Sessions</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {upcomingSessions.map((session, index) => (\n                      <div key={index} className=\"flex items-center space-x-4 p-4 rounded-lg bg-muted/50\">\n                        <div className=\"w-12 h-12 bg-blue-100 dark:bg-blue-900/20 rounded-lg flex items-center justify-center\">\n                          <BookOpen className=\"w-6 h-6 text-blue-600\" />\n                        </div>\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center justify-between mb-1\">\n                            <h4 className=\"font-semibold\">{session.subject}</h4>\n                            <Badge variant=\"outline\">{session.type}</Badge>\n                          </div>\n                          <p className=\"text-sm text-muted-foreground mb-1\">{session.topic}</p>\n                          <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\n                            <span className=\"flex items-center space-x-1\">\n                              <Calendar className=\"w-3 h-3\" />\n                              <span>{session.date}</span>\n                            </span>\n                            <span className=\"flex items-center space-x-1\">\n                              <Clock className=\"w-3 h-3\" />\n                              <span>{session.time} ({session.duration})</span>\n                            </span>\n                            <span className=\"flex items-center space-x-1\">\n                              <Users className=\"w-3 h-3\" />\n                              <span>{session.teacher}</span>\n                            </span>\n                          </div>\n                        </div>\n                        <Button variant=\"outline\" size=\"sm\">\n                          <Eye className=\"w-4 h-4 mr-2\" />\n                          Détails\n                        </Button>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Sidebar */}\n            <div className=\"space-y-6\">\n              {/* Profil d'apprentissage ARIA */}\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Brain className=\"w-5 h-5 text-purple-600\" />\n                    <span>Analyse ARIA</span>\n                  </CardTitle>\n                  <CardDescription>\n                    Profil d'apprentissage de votre enfant\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"p-3 rounded-lg bg-purple-50 dark:bg-purple-900/20\">\n                      <h4 className=\"font-medium text-purple-900 dark:text-purple-100 mb-2\">\n                        Style dominant: Visuel (85%)\n                      </h4>\n                      <p className=\"text-sm text-purple-700 dark:text-purple-300\">\n                        Votre enfant apprend mieux avec des schémas, graphiques et supports visuels.\n                      </p>\n                    </div>\n                    \n                    <div className=\"space-y-3\">\n                      {Object.entries(student?.learningStyle || {}).map(([style, percentage]) => (\n                        <div key={style} className=\"space-y-2\">\n                          <div className=\"flex justify-between text-sm\">\n                            <span className=\"capitalize\">\n                              {style === 'readingWriting' ? 'Lecture/Écriture' : \n                               style === 'visual' ? 'Visuel' :\n                               style === 'auditory' ? 'Auditif' :\n                               style === 'kinesthetic' ? 'Kinesthésique' : style}\n                            </span>\n                            <span className=\"font-semibold\">{percentage}%</span>\n                          </div>\n                          <div className=\"nexus-progress-bar\">\n                            <div \n                              className={`nexus-progress-fill ${\n                                percentage >= 80 ? 'bg-green-500' :\n                                percentage >= 60 ? 'bg-yellow-500' :\n                                'bg-red-500'\n                              }`}\n                              style={{ width: `${percentage}%` }}\n                            ></div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n\n                    <div className=\"p-3 rounded-lg bg-blue-50 dark:bg-blue-900/20\">\n                      <h4 className=\"font-medium text-blue-900 dark:text-blue-100 mb-2\">\n                        Recommandation ARIA\n                      </h4>\n                      <p className=\"text-sm text-blue-700 dark:text-blue-300\">\n                        Privilégier les exercices avec diagrammes et schémas. Éviter les longs textes.\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Messages non lus */}\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      <MessageCircle className=\"w-5 h-5\" />\n                      <span>Messages</span>\n                    </div>\n                    <Badge className=\"nexus-badge-info\">\n                      {messages.filter(m => !m.read).length} nouveaux\n                    </Badge>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    {messages.slice(0, 3).map((message) => (\n                      <div key={message.id} className={`p-3 rounded-lg border ${\n                        !message.read ? 'bg-blue-50 dark:bg-blue-900/20 border-blue-200' : 'bg-muted/50'\n                      }`}>\n                        <div className=\"flex items-start justify-between mb-2\">\n                          <div>\n                            <h4 className=\"font-medium text-sm\">{message.from}</h4>\n                            <p className=\"text-xs text-muted-foreground\">{message.subject}</p>\n                          </div>\n                          {!message.read && (\n                            <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n                          )}\n                        </div>\n                        <p className=\"text-sm\">{message.title}</p>\n                        <p className=\"text-xs text-muted-foreground mt-1\">\n                          {message.date} à {message.time}\n                        </p>\n                      </div>\n                    ))}\n                  </div>\n                  <Button variant=\"outline\" size=\"sm\" className=\"w-full mt-4\">\n                    <Eye className=\"w-4 h-4 mr-2\" />\n                    Voir tous les messages\n                  </Button>\n                </CardContent>\n              </Card>\n\n              {/* Actions rapides */}\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle>Actions Rapides</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  <Button variant=\"outline\" size=\"sm\" className=\"w-full justify-start\">\n                    <Calendar className=\"w-4 h-4 mr-2\" />\n                    Planifier RDV parent-prof\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" className=\"w-full justify-start\">\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Télécharger bulletin\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" className=\"w-full justify-start\">\n                    <MessageCircle className=\"w-4 h-4 mr-2\" />\n                    Envoyer un message\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" className=\"w-full justify-start\">\n                    <Settings className=\"w-4 h-4 mr-2\" />\n                    Paramètres compte\n                  </Button>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </TabsContent>\n\n        {/* Profil Élève */}\n        <TabsContent value=\"profile\">\n          <div className=\"grid lg:grid-cols-2 gap-6\">\n            <div className=\"space-y-6\">\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle>Informations Générales</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className=\"w-20 h-20 nexus-avatar bg-primary text-primary-foreground text-2xl\">\n                        {student?.avatar}\n                      </div>\n                      <div>\n                        <h3 className=\"text-xl font-bold\">{student?.name}</h3>\n                        <p className=\"text-muted-foreground\">{student?.grade}</p>\n                        <p className=\"text-sm text-muted-foreground\">{student?.school}</p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-2 gap-4 pt-4 border-t\">\n                      <div>\n                        <p className=\"text-sm text-muted-foreground\">Profil</p>\n                        <p className=\"font-medium capitalize\">{student?.profile}</p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-muted-foreground\">Niveau</p>\n                        <p className=\"font-medium\">Niveau {student?.level}</p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-muted-foreground\">XP Total</p>\n                        <p className=\"font-medium\">{student?.xp} points</p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-muted-foreground\">Série active</p>\n                        <p className=\"font-medium\">{student?.streak} jours</p>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle>Style d'Apprentissage</CardTitle>\n                  <CardDescription>Analyse détaillée par ARIA</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {Object.entries(student?.learningStyle || {}).map(([style, percentage]) => (\n                      <div key={style} className=\"space-y-2\">\n                        <div className=\"flex justify-between\">\n                          <span className=\"font-medium capitalize\">\n                            {style === 'readingWriting' ? 'Lecture/Écriture' : \n                             style === 'visual' ? 'Visuel' :\n                             style === 'auditory' ? 'Auditif' :\n                             style === 'kinesthetic' ? 'Kinesthésique' : style}\n                          </span>\n                          <span className=\"font-semibold\">{percentage}%</span>\n                        </div>\n                        <div className=\"nexus-progress-bar\">\n                          <div \n                            className={`nexus-progress-fill ${\n                              percentage >= 80 ? 'bg-green-500' :\n                              percentage >= 60 ? 'bg-yellow-500' :\n                              'bg-red-500'\n                            }`}\n                            style={{ width: `${percentage}%` }}\n                          ></div>\n                        </div>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {style === 'visual' && percentage >= 80 && 'Privilégier schémas, graphiques et supports visuels'}\n                          {style === 'auditory' && percentage >= 80 && 'Favoriser explications orales et discussions'}\n                          {style === 'kinesthetic' && percentage >= 80 && 'Encourager manipulation et expérimentation'}\n                          {style === 'readingWriting' && percentage >= 80 && 'Utiliser textes, listes et prise de notes'}\n                        </p>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            <div className=\"space-y-6\">\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle>Recommandations ARIA</CardTitle>\n                  <CardDescription>Conseils personnalisés pour optimiser l'apprentissage</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"p-4 rounded-lg bg-purple-50 dark:bg-purple-900/20\">\n                      <div className=\"flex items-start space-x-3\">\n                        <Brain className=\"w-5 h-5 text-purple-600 mt-0.5\" />\n                        <div>\n                          <h4 className=\"font-medium text-purple-900 dark:text-purple-100\">\n                            Optimisation d'apprentissage\n                          </h4>\n                          <p className=\"text-sm text-purple-700 dark:text-purple-300 mt-1\">\n                            Le style visuel dominant de {student?.name} suggère d'utiliser plus de diagrammes et schémas, \n                            particulièrement en mathématiques et sciences.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"p-4 rounded-lg bg-blue-50 dark:bg-blue-900/20\">\n                      <div className=\"flex items-start space-x-3\">\n                        <Clock className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n                        <div>\n                          <h4 className=\"font-medium text-blue-900 dark:text-blue-100\">\n                            Moment optimal d'étude\n                          </h4>\n                          <p className=\"text-sm text-blue-700 dark:text-blue-300 mt-1\">\n                            Les meilleures performances sont observées entre 14h et 16h. \n                            Planifiez les matières les plus difficiles à ce moment.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"p-4 rounded-lg bg-green-50 dark:bg-green-900/20\">\n                      <div className=\"flex items-start space-x-3\">\n                        <Target className=\"w-5 h-5 text-green-600 mt-0.5\" />\n                        <div>\n                          <h4 className=\"font-medium text-green-900 dark:text-green-100\">\n                            Points forts à exploiter\n                          </h4>\n                          <p className=\"text-sm text-green-700 dark:text-green-300 mt-1\">\n                            Excellente capacité d'analyse en mathématiques. \n                            Encourager l'approfondissement vers les mathématiques supérieures.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"p-4 rounded-lg bg-yellow-50 dark:bg-yellow-900/20\">\n                      <div className=\"flex items-start space-x-3\">\n                        <AlertCircle className=\"w-5 h-5 text-yellow-600 mt-0.5\" />\n                        <div>\n                          <h4 className=\"font-medium text-yellow-900 dark:text-yellow-100\">\n                            Points d'attention\n                          </h4>\n                          <p className=\"text-sm text-yellow-700 dark:text-yellow-300 mt-1\">\n                            La physique nécessite plus de pratique. \n                            Recommandation : augmenter les exercices d'application.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle>Badges et Réalisations</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-3 gap-3\">\n                    {student?.badges?.map((badge, index) => (\n                      <div key={index} className=\"text-center p-3 rounded-lg bg-muted/50\">\n                        <div className=\"w-12 h-12 bg-yellow-100 dark:bg-yellow-900/20 rounded-full flex items-center justify-center mx-auto mb-2\">\n                          <Award className=\"w-6 h-6 text-yellow-600\" />\n                        </div>\n                        <p className=\"text-xs font-medium\">{badge}</p>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </TabsContent>\n\n        {/* Rapports */}\n        <TabsContent value=\"reports\">\n          <div className=\"space-y-6\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n              <div>\n                <h2 className=\"text-2xl font-bold\">Rapports Hebdomadaires</h2>\n                <p className=\"text-muted-foreground\">Suivi détaillé des progrès et commentaires des enseignants</p>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <select className=\"nexus-input\">\n                  <option value=\"week\">Cette semaine</option>\n                  <option value=\"month\">Ce mois</option>\n                  <option value=\"term\">Ce trimestre</option>\n                </select>\n                <Button variant=\"outline\" size=\"sm\">\n                  <Download className=\"w-4 h-4 mr-2\" />\n                  Exporter PDF\n                </Button>\n              </div>\n            </div>\n\n            {weeklyReports.map((report, reportIndex) => (\n              <Card key={reportIndex} className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center justify-between\">\n                    <span>{report.week}</span>\n                    <Badge className=\"nexus-badge-success\">Rapport complet</Badge>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-6\">\n                    {/* Résumé global */}\n                    <div className=\"p-4 rounded-lg bg-blue-50 dark:bg-blue-900/20\">\n                      <h4 className=\"font-semibold text-blue-900 dark:text-blue-100 mb-2\">\n                        Commentaire Global\n                      </h4>\n                      <p className=\"text-blue-700 dark:text-blue-300\">{report.globalComment}</p>\n                    </div>\n\n                    {/* Insights ARIA */}\n                    <div className=\"p-4 rounded-lg bg-purple-50 dark:bg-purple-900/20\">\n                      <h4 className=\"font-semibold text-purple-900 dark:text-purple-100 mb-2 flex items-center space-x-2\">\n                        <Brain className=\"w-4 h-4\" />\n                        <span>Analyse ARIA</span>\n                      </h4>\n                      <p className=\"text-purple-700 dark:text-purple-300\">{report.ariaInsights}</p>\n                    </div>\n\n                    {/* Détail par matière */}\n                    <div className=\"space-y-4\">\n                      <h4 className=\"font-semibold\">Détail par Matière</h4>\n                      {report.subjects.map((subject, subjectIndex) => (\n                        <Card key={subjectIndex} className=\"nexus-card\">\n                          <CardContent className=\"p-4\">\n                            <div className=\"flex items-center justify-between mb-4\">\n                              <div className=\"flex items-center space-x-3\">\n                                <span className=\"text-lg\">{getSubjectIcon(subject.name)}</span>\n                                <div>\n                                  <h5 className=\"font-semibold\">{subject.name}</h5>\n                                  <p className=\"text-sm text-muted-foreground\">{subject.teacher}</p>\n                                </div>\n                              </div>\n                              <div className=\"text-right\">\n                                <div className=\"text-2xl font-bold text-primary\">{subject.grade}/20</div>\n                                <div className=\"text-sm text-muted-foreground\">{subject.hours}h de cours</div>\n                              </div>\n                            </div>\n\n                            <div className=\"space-y-3\">\n                              <div>\n                                <p className=\"text-sm font-medium mb-1\">Notions abordées:</p>\n                                <div className=\"flex flex-wrap gap-2\">\n                                  {subject.topics.map((topic, topicIndex) => (\n                                    <Badge key={topicIndex} variant=\"outline\">{topic}</Badge>\n                                  ))}\n                                </div>\n                              </div>\n\n                              <div>\n                                <div className=\"flex justify-between text-sm mb-1\">\n                                  <span>Progression</span>\n                                  <span>{subject.progress}%</span>\n                                </div>\n                                <div className=\"nexus-progress-bar\">\n                                  <div \n                                    className={`nexus-progress-fill ${\n                                      subject.progress >= 80 ? 'bg-green-500' :\n                                      subject.progress >= 60 ? 'bg-yellow-500' :\n                                      'bg-red-500'\n                                    }`}\n                                    style={{ width: `${subject.progress}%` }}\n                                  ></div>\n                                </div>\n                              </div>\n\n                              <div>\n                                <p className=\"text-sm font-medium mb-1\">Commentaire du professeur:</p>\n                                <p className=\"text-sm text-muted-foreground\">{subject.comment}</p>\n                              </div>\n\n                              <div className=\"grid md:grid-cols-2 gap-4 pt-3 border-t\">\n                                <div>\n                                  <p className=\"text-sm font-medium mb-1\">Travail à faire:</p>\n                                  <p className=\"text-sm text-muted-foreground\">{subject.homework}</p>\n                                </div>\n                                <div>\n                                  <p className=\"text-sm font-medium mb-1\">Objectifs semaine prochaine:</p>\n                                  <p className=\"text-sm text-muted-foreground\">{subject.nextGoals}</p>\n                                </div>\n                              </div>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      ))}\n                    </div>\n\n                    {/* Focus semaine prochaine */}\n                    <div className=\"p-4 rounded-lg bg-green-50 dark:bg-green-900/20\">\n                      <h4 className=\"font-semibold text-green-900 dark:text-green-100 mb-2\">\n                        Focus Semaine Prochaine\n                      </h4>\n                      <p className=\"text-green-700 dark:text-green-300\">{report.nextWeekFocus}</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n\n        {/* Communication */}\n        <TabsContent value=\"communication\">\n          <div className=\"grid lg:grid-cols-3 gap-6\">\n            <div className=\"lg:col-span-2 space-y-6\">\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center justify-between\">\n                    <span>Messages</span>\n                    <Button size=\"sm\" onClick={() => setShowMessageModal(true)}>\n                      <Plus className=\"w-4 h-4 mr-2\" />\n                      Nouveau message\n                    </Button>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {messages.map((message) => (\n                      <div key={message.id} className={`p-4 rounded-lg border ${\n                        !message.read ? 'bg-blue-50 dark:bg-blue-900/20 border-blue-200' : 'bg-muted/50'\n                      }`}>\n                        <div className=\"flex items-start justify-between mb-3\">\n                          <div className=\"flex items-center space-x-3\">\n                            <div className=\"w-10 h-10 nexus-avatar bg-primary text-primary-foreground text-sm\">\n                              {message.from.split(' ').map(n => n[0]).join('')}\n                            </div>\n                            <div>\n                              <h4 className=\"font-semibold\">{message.from}</h4>\n                              <p className=\"text-sm text-muted-foreground\">{message.subject}</p>\n                            </div>\n                          </div>\n                          <div className=\"text-right\">\n                            <p className=\"text-xs text-muted-foreground\">{message.date}</p>\n                            <p className=\"text-xs text-muted-foreground\">{message.time}</p>\n                            {!message.read && (\n                              <Badge className=\"nexus-badge-info mt-1\">Nouveau</Badge>\n                            )}\n                          </div>\n                        </div>\n                        <h5 className=\"font-medium mb-2\">{message.title}</h5>\n                        <p className=\"text-sm text-muted-foreground\">{message.message}</p>\n                        <div className=\"flex items-center space-x-2 mt-3\">\n                          <Button variant=\"outline\" size=\"sm\">\n                            <MessageCircle className=\"w-4 h-4 mr-2\" />\n                            Répondre\n                          </Button>\n                          <Button variant=\"outline\" size=\"sm\">\n                            <Share2 className=\"w-4 h-4 mr-2\" />\n                            Transférer\n                          </Button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            <div className=\"space-y-6\">\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle>Équipe Pédagogique</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {teachers?.map((teacher) => (\n                      <div key={teacher.id} className=\"flex items-center space-x-3 p-3 rounded-lg bg-muted/50\">\n                        <div className=\"w-12 h-12 nexus-avatar bg-primary text-primary-foreground\">\n                          {teacher.avatar}\n                        </div>\n                        <div className=\"flex-1\">\n                          <h4 className=\"font-medium\">{teacher.name}</h4>\n                          <p className=\"text-sm text-muted-foreground\">{teacher.subject}</p>\n                          <div className=\"flex items-center space-x-1 mt-1\">\n                            {[...Array(5)].map((_, i) => (\n                              <Star \n                                key={i} \n                                className={`w-3 h-3 ${\n                                  i < Math.floor(teacher.rating) \n                                    ? 'text-yellow-400 fill-current' \n                                    : 'text-gray-300'\n                                }`} \n                              />\n                            ))}\n                            <span className=\"text-xs text-muted-foreground ml-1\">({teacher.rating})</span>\n                          </div>\n                        </div>\n                        <Button \n                          variant=\"outline\" \n                          size=\"sm\"\n                          onClick={() => {\n                            setSelectedTeacher(teacher);\n                            setShowMessageModal(true);\n                          }}\n                        >\n                          <MessageCircle className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle>Planifier un Rendez-vous</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div>\n                      <label className=\"nexus-form-label\">Avec qui ?</label>\n                      <select className=\"nexus-input w-full\">\n                        <option>Sélectionner un enseignant</option>\n                        {teachers?.map(teacher => (\n                          <option key={teacher.id} value={teacher.id}>{teacher.name}</option>\n                        ))}\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"nexus-form-label\">Type de rendez-vous</label>\n                      <select className=\"nexus-input w-full\">\n                        <option>Suivi général</option>\n                        <option>Point sur une matière</option>\n                        <option>Orientation</option>\n                        <option>Problème spécifique</option>\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"nexus-form-label\">Créneaux préférés</label>\n                      <div className=\"grid grid-cols-2 gap-2\">\n                        <label className=\"flex items-center space-x-2\">\n                          <input type=\"checkbox\" className=\"rounded\" />\n                          <span className=\"text-sm\">Matin</span>\n                        </label>\n                        <label className=\"flex items-center space-x-2\">\n                          <input type=\"checkbox\" className=\"rounded\" />\n                          <span className=\"text-sm\">Après-midi</span>\n                        </label>\n                        <label className=\"flex items-center space-x-2\">\n                          <input type=\"checkbox\" className=\"rounded\" />\n                          <span className=\"text-sm\">Visio</span>\n                        </label>\n                        <label className=\"flex items-center space-x-2\">\n                          <input type=\"checkbox\" className=\"rounded\" />\n                          <span className=\"text-sm\">Présentiel</span>\n                        </label>\n                      </div>\n                    </div>\n                    <Button className=\"w-full nexus-button-primary\">\n                      <Calendar className=\"w-4 h-4 mr-2\" />\n                      Demander un rendez-vous\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle>Contact Urgence</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    <Button variant=\"outline\" className=\"w-full justify-start\">\n                      <Phone className=\"w-4 h-4 mr-2\" />\n                      +216 XX XXX XXX\n                    </Button>\n                    <Button variant=\"outline\" className=\"w-full justify-start\">\n                      <Mail className=\"w-4 h-4 mr-2\" />\n                      contact@nexus-reussite.tn\n                    </Button>\n                    <Button variant=\"outline\" className=\"w-full justify-start\">\n                      <Video className=\"w-4 h-4 mr-2\" />\n                      Assistance en ligne\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </TabsContent>\n      </Tabs>\n\n      {/* Modal de nouveau message */}\n      {showMessageModal && (\n        <div className=\"nexus-modal-overlay\">\n          <div className=\"nexus-modal max-w-lg\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold\">Nouveau Message</h3>\n              <Button \n                variant=\"ghost\" \n                size=\"sm\" \n                onClick={() => setShowMessageModal(false)}\n              >\n                <X className=\"w-4 h-4\" />\n              </Button>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"nexus-form-label\">Destinataire</label>\n                <select className=\"nexus-input w-full\">\n                  <option>Sélectionner un enseignant</option>\n                  {teachers?.map(teacher => (\n                    <option key={teacher.id} value={teacher.id}>{teacher.name} - {teacher.subject}</option>\n                  ))}\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"nexus-form-label\">Sujet</label>\n                <input \n                  type=\"text\" \n                  className=\"nexus-input w-full\" \n                  placeholder=\"Objet de votre message\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"nexus-form-label\">Message</label>\n                <textarea \n                  className=\"nexus-input w-full h-32 resize-none\" \n                  placeholder=\"Votre message...\"\n                ></textarea>\n              </div>\n              \n              <div className=\"flex space-x-3\">\n                <Button \n                  className=\"flex-1 nexus-button-primary\"\n                  onClick={() => sendMessage('dubois', 'Message test')}\n                >\n                  <Send className=\"w-4 h-4 mr-2\" />\n                  Envoyer\n                </Button>\n                <Button \n                  variant=\"outline\" \n                  onClick={() => setShowMessageModal(false)}\n                >\n                  Annuler\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ParentDashboard;\n\n","import React, { useState, useEffect } from 'react';\nimport { \n  Users, \n  Calendar, \n  BookOpen, \n  TrendingUp, \n  Clock, \n  MessageSquare,\n  Video,\n  FileText,\n  Award,\n  AlertCircle\n} from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Badge } from './ui/badge';\nimport { Progress } from './ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';\nimport apiService from '../services/api';\n\nexport default function TeacherDashboard() {\n  const [stats, setStats] = useState({\n    totalStudents: 0,\n    activeClasses: 0,\n    completedLessons: 0,\n    averageProgress: 0\n  });\n  const [recentActivities, setRecentActivities] = useState([]);\n  const [upcomingClasses, setUpcomingClasses] = useState([]);\n  const [studentProgress, setStudentProgress] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadDashboardData();\n  }, []);\n\n  const loadDashboardData = async () => {\n    try {\n      setLoading(true);\n      \n      // Charger les données du tableau de bord\n      const [statsResponse, activitiesResponse, classesResponse, progressResponse] = await Promise.all([\n        apiService.getDashboardStats('teacher', 'current_teacher_id'),\n        apiService.getTeacherActivities(),\n        apiService.getUpcomingClasses(),\n        apiService.getStudentsProgress()\n      ]);\n\n      if (statsResponse.success) {\n        setStats(statsResponse.stats);\n      }\n\n      // Données de démonstration si les API ne sont pas encore implémentées\n      setRecentActivities([\n        {\n          id: 1,\n          type: 'lesson_completed',\n          student: 'Sarah Dubois',\n          subject: 'Mathématiques',\n          description: 'A terminé le chapitre sur les probabilités',\n          time: '2024-01-15T10:30:00Z',\n          score: 85\n        },\n        {\n          id: 2,\n          type: 'question_asked',\n          student: 'Ahmed Ben Ali',\n          subject: 'NSI',\n          description: 'A posé une question sur les algorithmes de tri',\n          time: '2024-01-15T09:15:00Z'\n        },\n        {\n          id: 3,\n          type: 'assignment_submitted',\n          student: 'Léa Martin',\n          subject: 'Physique',\n          description: 'A rendu le devoir sur l\\'optique',\n          time: '2024-01-15T08:45:00Z',\n          score: 92\n        }\n      ]);\n\n      setUpcomingClasses([\n        {\n          id: 1,\n          subject: 'Mathématiques Terminale',\n          time: '2024-01-15T14:00:00Z',\n          duration: 60,\n          students: 8,\n          type: 'group',\n          room: 'Salle A1'\n        },\n        {\n          id: 2,\n          subject: 'NSI Première',\n          time: '2024-01-15T16:00:00Z',\n          duration: 90,\n          students: 6,\n          type: 'group',\n          room: 'Lab Info'\n        },\n        {\n          id: 3,\n          subject: 'Cours particulier - Ahmed',\n          time: '2024-01-16T10:00:00Z',\n          duration: 60,\n          students: 1,\n          type: 'individual',\n          room: 'Visio'\n        }\n      ]);\n\n      setStudentProgress([\n        {\n          id: 1,\n          name: 'Sarah Dubois',\n          subject: 'Mathématiques',\n          progress: 85,\n          lastActivity: '2024-01-15T10:30:00Z',\n          trend: 'up',\n          grade: 16.5\n        },\n        {\n          id: 2,\n          name: 'Ahmed Ben Ali',\n          subject: 'NSI',\n          progress: 72,\n          lastActivity: '2024-01-15T09:15:00Z',\n          trend: 'up',\n          grade: 14.2\n        },\n        {\n          id: 3,\n          name: 'Léa Martin',\n          subject: 'Physique',\n          progress: 90,\n          lastActivity: '2024-01-15T08:45:00Z',\n          trend: 'stable',\n          grade: 17.8\n        },\n        {\n          id: 4,\n          name: 'Youssef Trabelsi',\n          subject: 'Mathématiques',\n          progress: 65,\n          lastActivity: '2024-01-14T16:20:00Z',\n          trend: 'down',\n          grade: 12.3\n        }\n      ]);\n\n      // Calculer les statistiques\n      setStats({\n        totalStudents: 24,\n        activeClasses: 6,\n        completedLessons: 18,\n        averageProgress: 78\n      });\n\n    } catch (error) {\n      console.error('Erreur lors du chargement des données:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatTime = (dateString) => {\n    return new Date(dateString).toLocaleTimeString('fr-FR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('fr-FR', {\n      day: 'numeric',\n      month: 'short'\n    });\n  };\n\n  const getActivityIcon = (type) => {\n    switch (type) {\n      case 'lesson_completed':\n        return <BookOpen className=\"h-4 w-4\" />;\n      case 'question_asked':\n        return <MessageSquare className=\"h-4 w-4\" />;\n      case 'assignment_submitted':\n        return <FileText className=\"h-4 w-4\" />;\n      default:\n        return <AlertCircle className=\"h-4 w-4\" />;\n    }\n  };\n\n  const getTrendIcon = (trend) => {\n    switch (trend) {\n      case 'up':\n        return <TrendingUp className=\"h-4 w-4 text-green-500\" />;\n      case 'down':\n        return <TrendingUp className=\"h-4 w-4 text-red-500 transform rotate-180\" />;\n      default:\n        return <div className=\"h-4 w-4 bg-gray-300 rounded-full\" />;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {[...Array(4)].map((_, i) => (\n            <Card key={i} className=\"animate-pulse\">\n              <CardContent className=\"p-6\">\n                <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\n                <div className=\"h-8 bg-gray-200 rounded w-1/2\"></div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* En-tête */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Tableau de bord Enseignant</h1>\n          <p className=\"text-gray-600\">Gérez vos cours et suivez la progression de vos élèves</p>\n        </div>\n        <div className=\"flex space-x-3\">\n          <Button>\n            <Video className=\"h-4 w-4 mr-2\" />\n            Créer une session\n          </Button>\n          <Button variant=\"outline\">\n            <FileText className=\"h-4 w-4 mr-2\" />\n            Nouveau contenu\n          </Button>\n        </div>\n      </div>\n\n      {/* Statistiques principales */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Total Élèves</p>\n                <p className=\"text-3xl font-bold text-gray-900\">{stats.totalStudents}</p>\n              </div>\n              <div className=\"h-12 w-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n                <Users className=\"h-6 w-6 text-blue-600\" />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Classes Actives</p>\n                <p className=\"text-3xl font-bold text-gray-900\">{stats.activeClasses}</p>\n              </div>\n              <div className=\"h-12 w-12 bg-green-100 rounded-lg flex items-center justify-center\">\n                <Calendar className=\"h-6 w-6 text-green-600\" />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Cours Terminés</p>\n                <p className=\"text-3xl font-bold text-gray-900\">{stats.completedLessons}</p>\n              </div>\n              <div className=\"h-12 w-12 bg-purple-100 rounded-lg flex items-center justify-center\">\n                <BookOpen className=\"h-6 w-6 text-purple-600\" />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Progression Moyenne</p>\n                <p className=\"text-3xl font-bold text-gray-900\">{stats.averageProgress}%</p>\n              </div>\n              <div className=\"h-12 w-12 bg-orange-100 rounded-lg flex items-center justify-center\">\n                <TrendingUp className=\"h-6 w-6 text-orange-600\" />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Contenu principal */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Cours à venir */}\n        <Card className=\"lg:col-span-2\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <Calendar className=\"h-5 w-5 mr-2\" />\n              Cours à venir\n            </CardTitle>\n            <CardDescription>\n              Vos prochaines sessions d'enseignement\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {upcomingClasses.map((class_) => (\n                <div key={class_.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"h-10 w-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n                      {class_.type === 'individual' ? (\n                        <Users className=\"h-5 w-5 text-blue-600\" />\n                      ) : (\n                        <BookOpen className=\"h-5 w-5 text-blue-600\" />\n                      )}\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium text-gray-900\">{class_.subject}</h4>\n                      <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n                        <Clock className=\"h-4 w-4\" />\n                        <span>{formatDate(class_.time)} à {formatTime(class_.time)}</span>\n                        <span>•</span>\n                        <span>{class_.duration} min</span>\n                        <span>•</span>\n                        <span>{class_.students} élève{class_.students > 1 ? 's' : ''}</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Badge variant={class_.type === 'individual' ? 'default' : 'secondary'}>\n                      {class_.type === 'individual' ? 'Individuel' : 'Groupe'}\n                    </Badge>\n                    <Button size=\"sm\" variant=\"outline\">\n                      <Video className=\"h-4 w-4 mr-1\" />\n                      Rejoindre\n                    </Button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Activités récentes */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <Clock className=\"h-5 w-5 mr-2\" />\n              Activités récentes\n            </CardTitle>\n            <CardDescription>\n              Dernières actions de vos élèves\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {recentActivities.map((activity) => (\n                <div key={activity.id} className=\"flex items-start space-x-3\">\n                  <div className=\"h-8 w-8 bg-gray-100 rounded-full flex items-center justify-center\">\n                    {getActivityIcon(activity.type)}\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <p className=\"text-sm font-medium text-gray-900\">{activity.student}</p>\n                    <p className=\"text-sm text-gray-500\">{activity.description}</p>\n                    <div className=\"flex items-center space-x-2 mt-1\">\n                      <span className=\"text-xs text-gray-400\">{formatTime(activity.time)}</span>\n                      {activity.score && (\n                        <>\n                          <span className=\"text-xs text-gray-400\">•</span>\n                          <Badge variant=\"outline\" className=\"text-xs\">\n                            {activity.score}/100\n                          </Badge>\n                        </>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Progression des élèves */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center\">\n            <TrendingUp className=\"h-5 w-5 mr-2\" />\n            Progression des élèves\n          </CardTitle>\n          <CardDescription>\n            Suivi détaillé de la progression de chaque élève\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {studentProgress.map((student) => (\n              <div key={student.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"h-10 w-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-medium\">\n                    {student.name.split(' ').map(n => n[0]).join('')}\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium text-gray-900\">{student.name}</h4>\n                    <p className=\"text-sm text-gray-500\">{student.subject}</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center space-x-6\">\n                  <div className=\"text-center\">\n                    <p className=\"text-sm font-medium text-gray-900\">{student.progress}%</p>\n                    <Progress value={student.progress} className=\"w-20 mt-1\" />\n                  </div>\n                  \n                  <div className=\"text-center\">\n                    <p className=\"text-sm font-medium text-gray-900\">{student.grade}/20</p>\n                    <p className=\"text-xs text-gray-500\">Moyenne</p>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    {getTrendIcon(student.trend)}\n                    <span className=\"text-xs text-gray-500\">\n                      {formatDate(student.lastActivity)}\n                    </span>\n                  </div>\n                  \n                  <Button size=\"sm\" variant=\"outline\">\n                    <MessageSquare className=\"h-4 w-4 mr-1\" />\n                    Contacter\n                  </Button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Actions rapides */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <Card className=\"cursor-pointer hover:shadow-lg transition-shadow\">\n          <CardContent className=\"p-6 text-center\">\n            <div className=\"h-12 w-12 bg-blue-100 rounded-lg flex items-center justify-center mx-auto mb-4\">\n              <Video className=\"h-6 w-6 text-blue-600\" />\n            </div>\n            <h3 className=\"font-medium text-gray-900 mb-2\">Créer une session</h3>\n            <p className=\"text-sm text-gray-500\">Démarrer un cours en visioconférence</p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"cursor-pointer hover:shadow-lg transition-shadow\">\n          <CardContent className=\"p-6 text-center\">\n            <div className=\"h-12 w-12 bg-green-100 rounded-lg flex items-center justify-center mx-auto mb-4\">\n              <FileText className=\"h-6 w-6 text-green-600\" />\n            </div>\n            <h3 className=\"font-medium text-gray-900 mb-2\">Créer du contenu</h3>\n            <p className=\"text-sm text-gray-500\">Générer des exercices et supports</p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"cursor-pointer hover:shadow-lg transition-shadow\">\n          <CardContent className=\"p-6 text-center\">\n            <div className=\"h-12 w-12 bg-purple-100 rounded-lg flex items-center justify-center mx-auto mb-4\">\n              <Award className=\"h-6 w-6 text-purple-600\" />\n            </div>\n            <h3 className=\"font-medium text-gray-900 mb-2\">Évaluer les élèves</h3>\n            <p className=\"text-sm text-gray-500\">Créer et corriger des évaluations</p>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Badge } from './ui/badge';\nimport { Progress } from './ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';\nimport { \n  Users, \n  BookOpen, \n  TrendingUp, \n  DollarSign,\n  Calendar,\n  Star,\n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  Eye,\n  Edit,\n  Trash2,\n  Plus,\n  Download,\n  Upload,\n  Filter,\n  Search,\n  MoreHorizontal,\n  Settings,\n  Bell,\n  Mail,\n  Phone,\n  MapPin,\n  Award,\n  Target,\n  Activity,\n  BarChart3,\n  PieChart,\n  LineChart,\n  Users2,\n  GraduationCap,\n  Brain,\n  Zap,\n  Shield,\n  Database,\n  Server,\n  Wifi,\n  HardDrive,\n  Cpu,\n  Network,\n  Globe,\n  Lock,\n  Key,\n  UserCheck,\n  UserX,\n  UserPlus,\n  FileText,\n  Image,\n  Video,\n  Headphones,\n  Mic,\n  Camera,\n  Monitor,\n  Smartphone,\n  Tablet,\n  Laptop,\n  MonitorSpeaker,\n  Printer,\n  ScanLine,\n  Keyboard,\n  Mouse,\n  Gamepad2,\n  Joystick,\n  Headphones as HeadsetIcon,\n  Speaker,\n  Volume2,\n  VolumeX,\n  Play,\n  Pause,\n  Square,\n  SkipBack,\n  SkipForward,\n  Repeat,\n  Shuffle,\n  Radio,\n  Tv,\n  Film,\n  Music,\n  Disc,\n  Disc as CassetteIcon,\n  Disc as VinylIcon,\n  Mic as MicVocalIcon,\n  Piano,\n  Guitar,\n  Drum,\n  Volume2 as TrumpetIcon,\n  Music as ViolinIcon,\n  Music as SaxophoneIcon,\n  Music as FluteIcon,\n  Music as HarpIcon,\n  Guitar as BanjoIcon,\n  Piano as AccordionIcon,\n  Music as HarmonicaIcon,\n  Piano as XylophoneIcon,\n  Circle as MaracasIcon,\n  Triangle,\n  Bell as BellIcon,\n  Volume2 as WhistleIcon,\n  Megaphone,\n  Volume2 as BullhornIcon,\n  AlertTriangle as SirenIcon,\n  AlarmClock,\n  Timer,\n  Clock,\n  Hourglass,\n  Watch,\n  Clock3,\n  Clock9,\n  Clock12,\n  ArrowDown as ClockArrowDownIcon,\n  ArrowUp as ClockArrowUpIcon\n} from 'lucide-react';\n\nconst AdminDashboard = () => {\n  const [dashboardData, setDashboardData] = useState(null);\n  const [selectedPeriod, setSelectedPeriod] = useState('month');\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('overview');\n\n  // Données de démonstration pour l'administration\n  const demoDashboardData = {\n    overview: {\n      total_students: 1247,\n      active_students: 892,\n      total_teachers: 23,\n      active_teachers: 19,\n      total_courses: 3456,\n      completed_courses: 2789,\n      revenue_month: 45680,\n      revenue_growth: 12.5,\n      satisfaction_rate: 4.8,\n      retention_rate: 89.3,\n      new_registrations_week: 34,\n      churn_rate: 2.1\n    },\n    students: {\n      by_level: [\n        { level: \"Première\", count: 523, percentage: 41.9 },\n        { level: \"Terminale\", count: 724, percentage: 58.1 }\n      ],\n      by_subject: [\n        { subject: \"Mathématiques\", count: 892, color: \"blue\" },\n        { subject: \"NSI\", count: 456, color: \"green\" },\n        { subject: \"Physique-Chimie\", count: 678, color: \"purple\" },\n        { subject: \"Français\", count: 534, color: \"red\" },\n        { subject: \"Philosophie\", count: 289, color: \"yellow\" }\n      ],\n      performance: {\n        excellent: 234, // >16/20\n        good: 567, // 14-16/20\n        average: 389, // 12-14/20\n        needs_improvement: 57 // <12/20\n      },\n      engagement: {\n        highly_active: 445, // >20h/mois\n        active: 623, // 10-20h/mois\n        moderately_active: 156, // 5-10h/mois\n        inactive: 23 // <5h/mois\n      }\n    },\n    teachers: {\n      list: [\n        {\n          id: \"amina_benali\",\n          name: \"Dr. Amina Benali\",\n          subject: \"Mathématiques\",\n          students: 89,\n          rating: 4.9,\n          hours_month: 156,\n          status: \"active\",\n          last_login: \"2024-01-25T14:30:00Z\"\n        },\n        {\n          id: \"karim_trabelsi\",\n          name: \"M. Karim Trabelsi\",\n          subject: \"NSI\",\n          students: 67,\n          rating: 4.8,\n          hours_month: 134,\n          status: \"active\",\n          last_login: \"2024-01-25T16:45:00Z\"\n        },\n        {\n          id: \"fatma_mansouri\",\n          name: \"Dr. Fatma Mansouri\",\n          subject: \"Physique-Chimie\",\n          students: 78,\n          rating: 4.9,\n          hours_month: 142,\n          status: \"active\",\n          last_login: \"2024-01-25T11:20:00Z\"\n        }\n      ],\n      performance: {\n        top_rated: 8, // >4.7/5\n        well_rated: 12, // 4.0-4.7/5\n        average_rated: 3, // 3.5-4.0/5\n        needs_improvement: 0 // <3.5/5\n      }\n    },\n    courses: {\n      by_type: [\n        { type: \"Individuel\", count: 1456, revenue: 28900 },\n        { type: \"Mini-groupe\", count: 1234, revenue: 12340 },\n        { type: \"Stage intensif\", count: 456, revenue: 3650 },\n        { type: \"Coaching spécialisé\", count: 310, revenue: 4960 }\n      ],\n      completion_rate: 87.3,\n      average_duration: 2.4, // heures\n      satisfaction: 4.7\n    },\n    aria: {\n      total_interactions: 45678,\n      daily_interactions: 1234,\n      documents_generated: 8901,\n      success_rate: 94.2,\n      average_response_time: 1.8, // secondes\n      user_satisfaction: 4.6,\n      top_queries: [\n        { query: \"Aide en mathématiques\", count: 2345 },\n        { query: \"Exercices NSI\", count: 1876 },\n        { query: \"Préparation bac\", count: 1654 },\n        { query: \"Grand Oral\", count: 1432 },\n        { query: \"Orientation\", count: 1234 }\n      ]\n    },\n    system: {\n      server_status: \"healthy\",\n      uptime: 99.8,\n      response_time: 245, // ms\n      database_size: 2.4, // GB\n      storage_used: 67.3, // %\n      bandwidth_used: 45.2, // %\n      active_sessions: 234,\n      errors_24h: 3,\n      warnings_24h: 12\n    },\n    recent_activities: [\n      {\n        id: 1,\n        type: \"student_registration\",\n        message: \"Nouvel élève inscrit: Ahmed Khelifi\",\n        timestamp: \"2024-01-25T16:30:00Z\",\n        user: \"Système\"\n      },\n      {\n        id: 2,\n        type: \"course_completion\",\n        message: \"Sarah M. a terminé le module Intégrales\",\n        timestamp: \"2024-01-25T15:45:00Z\",\n        user: \"Sarah Mansouri\"\n      },\n      {\n        id: 3,\n        type: \"teacher_login\",\n        message: \"Dr. Benali s'est connectée\",\n        timestamp: \"2024-01-25T14:30:00Z\",\n        user: \"Dr. Amina Benali\"\n      },\n      {\n        id: 4,\n        type: \"payment_received\",\n        message: \"Paiement reçu: 200 DT - Léa Dubois\",\n        timestamp: \"2024-01-25T13:20:00Z\",\n        user: \"Système\"\n      },\n      {\n        id: 5,\n        type: \"aria_interaction\",\n        message: \"ARIA a généré 15 documents personnalisés\",\n        timestamp: \"2024-01-25T12:15:00Z\",\n        user: \"ARIA\"\n      }\n    ],\n    alerts: [\n      {\n        id: 1,\n        type: \"warning\",\n        title: \"Serveur de sauvegarde\",\n        message: \"Espace de stockage à 85%\",\n        timestamp: \"2024-01-25T10:30:00Z\",\n        resolved: false\n      },\n      {\n        id: 2,\n        type: \"info\",\n        title: \"Mise à jour système\",\n        message: \"Mise à jour programmée pour ce soir\",\n        timestamp: \"2024-01-25T09:15:00Z\",\n        resolved: false\n      },\n      {\n        id: 3,\n        type: \"success\",\n        title: \"Sauvegarde complétée\",\n        message: \"Sauvegarde quotidienne terminée avec succès\",\n        timestamp: \"2024-01-25T02:00:00Z\",\n        resolved: true\n      }\n    ]\n  };\n\n  useEffect(() => {\n    // Simulation du chargement des données\n    setLoading(true);\n    setTimeout(() => {\n      setDashboardData(demoDashboardData);\n      setLoading(false);\n    }, 1000);\n  }, [selectedPeriod]);\n\n  const getActivityIcon = (type) => {\n    switch (type) {\n      case 'student_registration': return <UserPlus className=\"w-4 h-4 text-green-500\" />;\n      case 'course_completion': return <CheckCircle className=\"w-4 h-4 text-blue-500\" />;\n      case 'teacher_login': return <UserCheck className=\"w-4 h-4 text-purple-500\" />;\n      case 'payment_received': return <DollarSign className=\"w-4 h-4 text-green-500\" />;\n      case 'aria_interaction': return <Brain className=\"w-4 h-4 text-orange-500\" />;\n      default: return <Activity className=\"w-4 h-4 text-gray-500\" />;\n    }\n  };\n\n  const getAlertIcon = (type) => {\n    switch (type) {\n      case 'error': return <XCircle className=\"w-5 h-5 text-red-500\" />;\n      case 'warning': return <AlertTriangle className=\"w-5 h-5 text-yellow-500\" />;\n      case 'success': return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\n      default: return <Bell className=\"w-5 h-5 text-blue-500\" />;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (!dashboardData) {\n    return (\n      <div className=\"text-center py-8\">\n        <AlertTriangle className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n        <p className=\"text-gray-600\">Erreur lors du chargement des données</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6 space-y-6\">\n      {/* En-tête */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Tableau de Bord Admin</h1>\n          <p className=\"text-gray-600\">Nexus Réussite - Gestion de la plateforme</p>\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          <select\n            value={selectedPeriod}\n            onChange={(e) => setSelectedPeriod(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"week\">Cette semaine</option>\n            <option value=\"month\">Ce mois</option>\n            <option value=\"quarter\">Ce trimestre</option>\n            <option value=\"year\">Cette année</option>\n          </select>\n          <Button className=\"bg-blue-600 hover:bg-blue-700\">\n            <Download className=\"w-4 h-4 mr-2\" />\n            Exporter\n          </Button>\n        </div>\n      </div>\n\n      {/* Métriques principales */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Élèves actifs</p>\n                <p className=\"text-3xl font-bold text-blue-600\">{dashboardData.overview.active_students}</p>\n                <p className=\"text-xs text-gray-500\">sur {dashboardData.overview.total_students} inscrits</p>\n              </div>\n              <Users className=\"w-12 h-12 text-blue-500\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Enseignants actifs</p>\n                <p className=\"text-3xl font-bold text-green-600\">{dashboardData.overview.active_teachers}</p>\n                <p className=\"text-xs text-gray-500\">sur {dashboardData.overview.total_teachers} total</p>\n              </div>\n              <GraduationCap className=\"w-12 h-12 text-green-500\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Revenus du mois</p>\n                <p className=\"text-3xl font-bold text-purple-600\">{dashboardData.overview.revenue_month.toLocaleString()} DT</p>\n                <p className=\"text-xs text-green-600\">+{dashboardData.overview.revenue_growth}%</p>\n              </div>\n              <DollarSign className=\"w-12 h-12 text-purple-500\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Satisfaction</p>\n                <p className=\"text-3xl font-bold text-yellow-600\">{dashboardData.overview.satisfaction_rate}/5</p>\n                <p className=\"text-xs text-gray-500\">Taux de rétention: {dashboardData.overview.retention_rate}%</p>\n              </div>\n              <Star className=\"w-12 h-12 text-yellow-500\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Alertes système */}\n      {dashboardData.alerts.filter(alert => !alert.resolved).length > 0 && (\n        <Card className=\"border-l-4 border-l-yellow-500\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Bell className=\"w-5 h-5 text-yellow-600\" />\n              <span>Alertes système</span>\n              <Badge className=\"bg-yellow-100 text-yellow-800\">\n                {dashboardData.alerts.filter(alert => !alert.resolved).length}\n              </Badge>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {dashboardData.alerts.filter(alert => !alert.resolved).map((alert) => (\n                <div key={alert.id} className=\"flex items-start space-x-3 p-3 bg-gray-50 rounded-lg\">\n                  {getAlertIcon(alert.type)}\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center justify-between\">\n                      <h4 className=\"font-medium\">{alert.title}</h4>\n                      <span className=\"text-xs text-gray-500\">\n                        {new Date(alert.timestamp).toLocaleTimeString('fr-FR')}\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-gray-600 mt-1\">{alert.message}</p>\n                  </div>\n                  <Button size=\"sm\" variant=\"outline\">\n                    Résoudre\n                  </Button>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-6\">\n          <TabsTrigger value=\"overview\">Vue d'ensemble</TabsTrigger>\n          <TabsTrigger value=\"students\">Élèves</TabsTrigger>\n          <TabsTrigger value=\"teachers\">Enseignants</TabsTrigger>\n          <TabsTrigger value=\"courses\">Cours</TabsTrigger>\n          <TabsTrigger value=\"aria\">ARIA IA</TabsTrigger>\n          <TabsTrigger value=\"system\">Système</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"overview\" className=\"mt-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Répartition des élèves par niveau */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <PieChart className=\"w-5 h-5 text-blue-600\" />\n                  <span>Répartition par niveau</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {dashboardData.students.by_level.map((level, index) => (\n                    <div key={index} className=\"flex items-center space-x-3\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex justify-between text-sm mb-1\">\n                          <span>{level.level}</span>\n                          <span>{level.count} élèves ({level.percentage}%)</span>\n                        </div>\n                        <Progress value={level.percentage} className=\"h-2\" />\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Performance des élèves */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <BarChart3 className=\"w-5 h-5 text-green-600\" />\n                  <span>Performance des élèves</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"text-center p-3 bg-green-50 rounded-lg\">\n                    <div className=\"text-2xl font-bold text-green-600\">{dashboardData.students.performance.excellent}</div>\n                    <div className=\"text-sm text-green-700\">Excellent (&gt;16/20)</div>\n                  </div>\n                  <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\n                    <div className=\"text-2xl font-bold text-blue-600\">{dashboardData.students.performance.good}</div>\n                    <div className=\"text-sm text-blue-700\">Bien (14-16/20)</div>\n                  </div>\n                  <div className=\"text-center p-3 bg-yellow-50 rounded-lg\">\n                    <div className=\"text-2xl font-bold text-yellow-600\">{dashboardData.students.performance.average}</div>\n                    <div className=\"text-sm text-yellow-700\">Moyen (12-14/20)</div>\n                  </div>\n                  <div className=\"text-center p-3 bg-red-50 rounded-lg\">\n                    <div className=\"text-2xl font-bold text-red-600\">{dashboardData.students.performance.needs_improvement}</div>\n                    <div className=\"text-sm text-red-700\">À améliorer (&lt;12/20)</div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Activités récentes */}\n            <Card className=\"lg:col-span-2\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Activity className=\"w-5 h-5 text-purple-600\" />\n                  <span>Activités récentes</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {dashboardData.recent_activities.map((activity) => (\n                    <div key={activity.id} className=\"flex items-center space-x-3 p-3 hover:bg-gray-50 rounded-lg\">\n                      {getActivityIcon(activity.type)}\n                      <div className=\"flex-1\">\n                        <p className=\"text-sm\">{activity.message}</p>\n                        <p className=\"text-xs text-gray-500\">\n                          {new Date(activity.timestamp).toLocaleString('fr-FR')} - {activity.user}\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"students\" className=\"mt-6\">\n          <div className=\"space-y-6\">\n            {/* Filtres et actions */}\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"relative\">\n                  <Search className=\"w-4 h-4 absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Rechercher un élève...\"\n                    className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <Button variant=\"outline\">\n                  <Filter className=\"w-4 h-4 mr-2\" />\n                  Filtres\n                </Button>\n              </div>\n              <Button className=\"bg-green-600 hover:bg-green-700\">\n                <Plus className=\"w-4 h-4 mr-2\" />\n                Nouvel élève\n              </Button>\n            </div>\n\n            {/* Statistiques des élèves */}\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-green-600\">{dashboardData.students.engagement.highly_active}</div>\n                    <div className=\"text-sm text-gray-600\">Très actifs</div>\n                    <div className=\"text-xs text-gray-500\">&gt;20h/mois</div>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-blue-600\">{dashboardData.students.engagement.active}</div>\n                    <div className=\"text-sm text-gray-600\">Actifs</div>\n                    <div className=\"text-xs text-gray-500\">10-20h/mois</div>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-yellow-600\">{dashboardData.students.engagement.moderately_active}</div>\n                    <div className=\"text-sm text-gray-600\">Modérément actifs</div>\n                    <div className=\"text-xs text-gray-500\">5-10h/mois</div>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-red-600\">{dashboardData.students.engagement.inactive}</div>\n                    <div className=\"text-sm text-gray-600\">Inactifs</div>\n                    <div className=\"text-xs text-gray-500\">&lt;5h/mois</div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Répartition par matière */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Répartition par matière</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {dashboardData.students.by_subject.map((subject, index) => {\n                    const percentage = (subject.count / dashboardData.overview.total_students) * 100;\n                    return (\n                      <div key={index} className=\"flex items-center space-x-3\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex justify-between text-sm mb-1\">\n                            <span>{subject.subject}</span>\n                            <span>{subject.count} élèves ({percentage.toFixed(1)}%)</span>\n                          </div>\n                          <Progress value={percentage} className=\"h-2\" />\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"teachers\" className=\"mt-6\">\n          <div className=\"space-y-6\">\n            {/* Actions enseignants */}\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"relative\">\n                  <Search className=\"w-4 h-4 absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Rechercher un enseignant...\"\n                    className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <Button variant=\"outline\">\n                  <Filter className=\"w-4 h-4 mr-2\" />\n                  Filtres\n                </Button>\n              </div>\n              <Button className=\"bg-green-600 hover:bg-green-700\">\n                <Plus className=\"w-4 h-4 mr-2\" />\n                Nouvel enseignant\n              </Button>\n            </div>\n\n            {/* Performance des enseignants */}\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-green-600\">{dashboardData.teachers.performance.top_rated}</div>\n                    <div className=\"text-sm text-gray-600\">Excellents</div>\n                    <div className=\"text-xs text-gray-500\">&gt;4.7/5</div>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-blue-600\">{dashboardData.teachers.performance.well_rated}</div>\n                    <div className=\"text-sm text-gray-600\">Très bons</div>\n                    <div className=\"text-xs text-gray-500\">4.0-4.7/5</div>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-yellow-600\">{dashboardData.teachers.performance.average_rated}</div>\n                    <div className=\"text-sm text-gray-600\">Corrects</div>\n                    <div className=\"text-xs text-gray-500\">3.5-4.0/5</div>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-red-600\">{dashboardData.teachers.performance.needs_improvement}</div>\n                    <div className=\"text-sm text-gray-600\">À améliorer</div>\n                    <div className=\"text-xs text-gray-500\">&lt;3.5/5</div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Liste des enseignants */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Enseignants actifs</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {dashboardData.teachers.list.map((teacher) => (\n                    <div key={teacher.id} className=\"flex items-center justify-between p-4 border border-gray-200 rounded-lg hover:shadow-md transition-shadow\">\n                      <div className=\"flex items-center space-x-4\">\n                        <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold\">\n                          {teacher.name.split(' ').map(n => n[0]).join('')}\n                        </div>\n                        <div>\n                          <h3 className=\"font-semibold\">{teacher.name}</h3>\n                          <p className=\"text-sm text-gray-600\">{teacher.subject}</p>\n                          <div className=\"flex items-center space-x-4 mt-1\">\n                            <span className=\"text-xs text-gray-500\">{teacher.students} élèves</span>\n                            <div className=\"flex items-center space-x-1\">\n                              <Star className=\"w-3 h-3 text-yellow-500\" />\n                              <span className=\"text-xs\">{teacher.rating}</span>\n                            </div>\n                            <span className=\"text-xs text-gray-500\">{teacher.hours_month}h/mois</span>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <Badge className={`${teacher.status === 'active' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}`}>\n                          {teacher.status === 'active' ? 'Actif' : 'Inactif'}\n                        </Badge>\n                        <Button size=\"sm\" variant=\"outline\">\n                          <Eye className=\"w-4 h-4\" />\n                        </Button>\n                        <Button size=\"sm\" variant=\"outline\">\n                          <Edit className=\"w-4 h-4\" />\n                        </Button>\n                        <Button size=\"sm\" variant=\"outline\">\n                          <MoreHorizontal className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"courses\" className=\"mt-6\">\n          <div className=\"space-y-6\">\n            {/* Métriques des cours */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-blue-600\">{dashboardData.overview.completed_courses}</div>\n                    <div className=\"text-sm text-gray-600\">Cours terminés</div>\n                    <div className=\"text-xs text-gray-500\">sur {dashboardData.overview.total_courses} total</div>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-green-600\">{dashboardData.courses.completion_rate}%</div>\n                    <div className=\"text-sm text-gray-600\">Taux de completion</div>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-purple-600\">{dashboardData.courses.average_duration}h</div>\n                    <div className=\"text-sm text-gray-600\">Durée moyenne</div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Répartition par type de cours */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Répartition par type de cours</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {dashboardData.courses.by_type.map((type, index) => (\n                    <div key={index} className=\"flex items-center justify-between p-4 border border-gray-200 rounded-lg\">\n                      <div>\n                        <h3 className=\"font-semibold\">{type.type}</h3>\n                        <p className=\"text-sm text-gray-600\">{type.count} cours</p>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"text-lg font-bold text-green-600\">{type.revenue.toLocaleString()} DT</div>\n                        <div className=\"text-sm text-gray-500\">Revenus</div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"aria\" className=\"mt-6\">\n          <div className=\"space-y-6\">\n            {/* Métriques ARIA */}\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-blue-600\">{dashboardData.aria.total_interactions.toLocaleString()}</div>\n                    <div className=\"text-sm text-gray-600\">Interactions totales</div>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-green-600\">{dashboardData.aria.daily_interactions.toLocaleString()}</div>\n                    <div className=\"text-sm text-gray-600\">Interactions/jour</div>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-purple-600\">{dashboardData.aria.documents_generated.toLocaleString()}</div>\n                    <div className=\"text-sm text-gray-600\">Documents générés</div>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-yellow-600\">{dashboardData.aria.success_rate}%</div>\n                    <div className=\"text-sm text-gray-600\">Taux de succès</div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Performance ARIA */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Zap className=\"w-5 h-5 text-orange-600\" />\n                    <span>Performance ARIA</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <div className=\"flex justify-between text-sm mb-1\">\n                      <span>Temps de réponse moyen</span>\n                      <span>{dashboardData.aria.average_response_time}s</span>\n                    </div>\n                    <Progress value={(3 - dashboardData.aria.average_response_time) / 3 * 100} className=\"h-2\" />\n                  </div>\n                  <div>\n                    <div className=\"flex justify-between text-sm mb-1\">\n                      <span>Satisfaction utilisateur</span>\n                      <span>{dashboardData.aria.user_satisfaction}/5</span>\n                    </div>\n                    <Progress value={dashboardData.aria.user_satisfaction * 20} className=\"h-2\" />\n                  </div>\n                  <div>\n                    <div className=\"flex justify-between text-sm mb-1\">\n                      <span>Taux de succès</span>\n                      <span>{dashboardData.aria.success_rate}%</span>\n                    </div>\n                    <Progress value={dashboardData.aria.success_rate} className=\"h-2\" />\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Search className=\"w-5 h-5 text-blue-600\" />\n                    <span>Requêtes populaires</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    {dashboardData.aria.top_queries.map((query, index) => (\n                      <div key={index} className=\"flex items-center justify-between\">\n                        <span className=\"text-sm\">{query.query}</span>\n                        <Badge variant=\"outline\">{query.count}</Badge>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"system\" className=\"mt-6\">\n          <div className=\"space-y-6\">\n            {/* État du système */}\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"flex items-center justify-center mb-2\">\n                      <Server className={`w-8 h-8 ${dashboardData.system.server_status === 'healthy' ? 'text-green-500' : 'text-red-500'}`} />\n                    </div>\n                    <div className=\"text-sm text-gray-600\">Serveur</div>\n                    <Badge className={`mt-1 ${dashboardData.system.server_status === 'healthy' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\n                      {dashboardData.system.server_status === 'healthy' ? 'Opérationnel' : 'Problème'}\n                    </Badge>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-green-600\">{dashboardData.system.uptime}%</div>\n                    <div className=\"text-sm text-gray-600\">Disponibilité</div>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-blue-600\">{dashboardData.system.response_time}ms</div>\n                    <div className=\"text-sm text-gray-600\">Temps de réponse</div>\n                  </div>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent className=\"p-4\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold text-purple-600\">{dashboardData.system.active_sessions}</div>\n                    <div className=\"text-sm text-gray-600\">Sessions actives</div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Utilisation des ressources */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <HardDrive className=\"w-5 h-5 text-blue-600\" />\n                    <span>Utilisation du stockage</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <div className=\"flex justify-between text-sm mb-1\">\n                      <span>Espace utilisé</span>\n                      <span>{dashboardData.system.storage_used}%</span>\n                    </div>\n                    <Progress value={dashboardData.system.storage_used} className=\"h-2\" />\n                  </div>\n                  <div>\n                    <div className=\"flex justify-between text-sm mb-1\">\n                      <span>Base de données</span>\n                      <span>{dashboardData.system.database_size} GB</span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Network className=\"w-5 h-5 text-green-600\" />\n                    <span>Utilisation réseau</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <div className=\"flex justify-between text-sm mb-1\">\n                      <span>Bande passante</span>\n                      <span>{dashboardData.system.bandwidth_used}%</span>\n                    </div>\n                    <Progress value={dashboardData.system.bandwidth_used} className=\"h-2\" />\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Logs et erreurs */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <AlertTriangle className=\"w-5 h-5 text-red-600\" />\n                    <span>Erreurs (24h)</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-center\">\n                    <div className=\"text-3xl font-bold text-red-600\">{dashboardData.system.errors_24h}</div>\n                    <div className=\"text-sm text-gray-600\">erreurs détectées</div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <AlertTriangle className=\"w-5 h-5 text-yellow-600\" />\n                    <span>Avertissements (24h)</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-center\">\n                    <div className=\"text-3xl font-bold text-yellow-600\">{dashboardData.system.warnings_24h}</div>\n                    <div className=\"text-sm text-gray-600\">avertissements</div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card.jsx'\nimport { Button } from '@/components/ui/button.jsx'\nimport { Badge } from '@/components/ui/badge.jsx'\nimport { \n  Bell, \n  X, \n  Check, \n  Info, \n  AlertTriangle, \n  CheckCircle, \n  XCircle,\n  MessageSquare,\n  Calendar,\n  Award,\n  BookOpen,\n  Users,\n  Settings,\n  Volume2,\n  VolumeX,\n  Smartphone,\n  Mail,\n  Clock,\n  Filter,\n  Archive,\n  Trash2,\n  MoreHorizontal,\n  Eye,\n  EyeOff,\n  Star,\n  Heart,\n  Share2,\n  Download,\n  ExternalLink,\n  Zap,\n  Target,\n  TrendingUp,\n  Gift,\n  Sparkles,\n  Crown,\n  Shield,\n  Flame,\n  Brain\n} from 'lucide-react'\n\nconst NotificationSystem = ({ \n  student, \n  notifications = [], \n  onMarkAsRead, \n  onMarkAllAsRead, \n  onDeleteNotification, \n  onUpdateSettings,\n  isVisible,\n  onClose \n}) => {\n  const [activeTab, setActiveTab] = useState('all');\n  const [filter, setFilter] = useState('all');\n  const [soundEnabled, setSoundEnabled] = useState(true);\n  const [selectedNotifications, setSelectedNotifications] = useState([]);\n  const [showSettings, setShowSettings] = useState(false);\n\n  // Types de notifications avec leurs icônes et couleurs\n  const notificationTypes = {\n    success: {\n      icon: CheckCircle,\n      color: 'text-green-600',\n      bgColor: 'bg-green-50 dark:bg-green-900/20',\n      borderColor: 'border-green-200 dark:border-green-800'\n    },\n    info: {\n      icon: Info,\n      color: 'text-blue-600',\n      bgColor: 'bg-blue-50 dark:bg-blue-900/20',\n      borderColor: 'border-blue-200 dark:border-blue-800'\n    },\n    warning: {\n      icon: AlertTriangle,\n      color: 'text-yellow-600',\n      bgColor: 'bg-yellow-50 dark:bg-yellow-900/20',\n      borderColor: 'border-yellow-200 dark:border-yellow-800'\n    },\n    error: {\n      icon: XCircle,\n      color: 'text-red-600',\n      bgColor: 'bg-red-50 dark:bg-red-900/20',\n      borderColor: 'border-red-200 dark:border-red-800'\n    },\n    achievement: {\n      icon: Award,\n      color: 'text-purple-600',\n      bgColor: 'bg-purple-50 dark:bg-purple-900/20',\n      borderColor: 'border-purple-200 dark:border-purple-800'\n    },\n    message: {\n      icon: MessageSquare,\n      color: 'text-indigo-600',\n      bgColor: 'bg-indigo-50 dark:bg-indigo-900/20',\n      borderColor: 'border-indigo-200 dark:border-indigo-800'\n    },\n    reminder: {\n      icon: Clock,\n      color: 'text-orange-600',\n      bgColor: 'bg-orange-50 dark:bg-orange-900/20',\n      borderColor: 'border-orange-200 dark:border-orange-800'\n    },\n    system: {\n      icon: Settings,\n      color: 'text-gray-600',\n      bgColor: 'bg-gray-50 dark:bg-gray-900/20',\n      borderColor: 'border-gray-200 dark:border-gray-800'\n    }\n  };\n\n  // Notifications de démonstration enrichies\n  const demoNotifications = [\n    {\n      id: 'notif-001',\n      type: 'achievement',\n      title: 'Nouveau badge débloqué !',\n      message: 'Félicitations ! Vous avez obtenu le badge \"Expert en fonctions\"',\n      timestamp: new Date(Date.now() - 30 * 60 * 1000).toISOString(), // 30 min ago\n      read: false,\n      priority: 'high',\n      category: 'gamification',\n      actionUrl: '/profile/badges',\n      actionText: 'Voir le badge',\n      metadata: {\n        badgeName: 'Expert en fonctions',\n        xpEarned: 200,\n        rarity: 'rare'\n      }\n    },\n    {\n      id: 'notif-002',\n      type: 'info',\n      title: 'Document généré avec succès',\n      message: 'ARIA a créé votre fiche de révision personnalisée en mathématiques',\n      timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(), // 2h ago\n      read: false,\n      priority: 'medium',\n      category: 'documents',\n      actionUrl: '/documents/math-revision-001',\n      actionText: 'Consulter le document',\n      metadata: {\n        documentType: 'Fiche de révision',\n        subject: 'Mathématiques',\n        generatedBy: 'ARIA'\n      }\n    },\n    {\n      id: 'notif-003',\n      type: 'reminder',\n      title: 'Session programmée demain',\n      message: 'N\\'oubliez pas votre cours de NSI à 16h avec Mme Martin',\n      timestamp: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString(), // 4h ago\n      read: true,\n      priority: 'high',\n      category: 'planning',\n      actionUrl: '/planning',\n      actionText: 'Voir le planning',\n      metadata: {\n        sessionType: 'Cours individuel',\n        subject: 'NSI',\n        teacher: 'Mme Martin',\n        date: '2025-07-24',\n        time: '16:00'\n      }\n    },\n    {\n      id: 'notif-004',\n      type: 'message',\n      title: 'Message de M. Dubois',\n      message: 'Excellent travail sur les exercices de probabilités ! Continuez ainsi.',\n      timestamp: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(), // 6h ago\n      read: true,\n      priority: 'medium',\n      category: 'communication',\n      actionUrl: '/messages/dubois-001',\n      actionText: 'Répondre',\n      metadata: {\n        sender: 'M. Dubois',\n        subject: 'Mathématiques',\n        messageType: 'feedback'\n      }\n    },\n    {\n      id: 'notif-005',\n      type: 'success',\n      title: 'Quiz terminé avec succès',\n      message: 'Score parfait ! 20/20 en probabilités conditionnelles',\n      timestamp: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(), // 1 day ago\n      read: true,\n      priority: 'medium',\n      category: 'evaluation',\n      actionUrl: '/quiz/results/prob-001',\n      actionText: 'Voir les résultats',\n      metadata: {\n        quizType: 'Probabilités conditionnelles',\n        score: 20,\n        maxScore: 20,\n        duration: '15 minutes'\n      }\n    },\n    {\n      id: 'notif-006',\n      type: 'info',\n      title: 'Nouvelle recommandation ARIA',\n      message: 'ARIA suggère de réviser les fonctions logarithmes avant votre prochain cours',\n      timestamp: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(), // 2 days ago\n      read: false,\n      priority: 'low',\n      category: 'ai_recommendation',\n      actionUrl: '/aria/recommendations',\n      actionText: 'Voir les recommandations',\n      metadata: {\n        recommendationType: 'Révision',\n        subject: 'Mathématiques',\n        topic: 'Fonctions logarithmes',\n        confidence: 0.85\n      }\n    },\n    {\n      id: 'notif-007',\n      type: 'warning',\n      title: 'Objectif hebdomadaire en retard',\n      message: 'Il vous reste 2 jours pour atteindre votre objectif de 5h d\\'étude cette semaine',\n      timestamp: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(), // 3 days ago\n      read: false,\n      priority: 'medium',\n      category: 'goals',\n      actionUrl: '/dashboard/goals',\n      actionText: 'Voir les objectifs',\n      metadata: {\n        goalType: 'Temps d\\'étude hebdomadaire',\n        current: 3,\n        target: 5,\n        unit: 'heures',\n        deadline: '2025-07-25'\n      }\n    },\n    {\n      id: 'notif-008',\n      type: 'system',\n      title: 'Mise à jour de la plateforme',\n      message: 'Nouvelles fonctionnalités disponibles ! Découvrez les améliorations d\\'ARIA',\n      timestamp: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(), // 1 week ago\n      read: true,\n      priority: 'low',\n      category: 'system',\n      actionUrl: '/updates/v2.1',\n      actionText: 'Découvrir les nouveautés',\n      metadata: {\n        version: '2.1.0',\n        features: ['ARIA amélioré', 'Nouveau système de badges', 'Interface parent enrichie']\n      }\n    }\n  ];\n\n  const allNotifications = [...notifications, ...demoNotifications];\n\n  // Filtrage des notifications\n  const filteredNotifications = allNotifications.filter(notification => {\n    if (activeTab === 'unread' && notification.read) return false;\n    if (activeTab === 'read' && !notification.read) return false;\n    if (filter !== 'all' && notification.category !== filter) return false;\n    return true;\n  });\n\n  const unreadCount = allNotifications.filter(n => !n.read).length;\n\n  // Formatage de la date\n  const formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n    \n    if (diffInMinutes < 1) return 'À l\\'instant';\n    if (diffInMinutes < 60) return `Il y a ${diffInMinutes} min`;\n    if (diffInMinutes < 1440) return `Il y a ${Math.floor(diffInMinutes / 60)}h`;\n    if (diffInMinutes < 10080) return `Il y a ${Math.floor(diffInMinutes / 1440)} jour${Math.floor(diffInMinutes / 1440) > 1 ? 's' : ''}`;\n    \n    return date.toLocaleDateString('fr-FR', { \n      day: 'numeric', \n      month: 'short',\n      year: date.getFullYear() !== now.getFullYear() ? 'numeric' : undefined\n    });\n  };\n\n  // Gestion des actions\n  const handleMarkAsRead = (notificationId) => {\n    if (onMarkAsRead) {\n      onMarkAsRead(notificationId);\n    }\n  };\n\n  const handleMarkAllAsRead = () => {\n    if (onMarkAllAsRead) {\n      onMarkAllAsRead();\n    }\n  };\n\n  const handleDeleteNotification = (notificationId) => {\n    if (onDeleteNotification) {\n      onDeleteNotification(notificationId);\n    }\n  };\n\n  const handleNotificationClick = (notification) => {\n    if (!notification.read) {\n      handleMarkAsRead(notification.id);\n    }\n    \n    if (notification.actionUrl) {\n      // Simulation de navigation\n      console.log('Navigate to:', notification.actionUrl);\n    }\n  };\n\n  const toggleNotificationSelection = (notificationId) => {\n    setSelectedNotifications(prev => \n      prev.includes(notificationId)\n        ? prev.filter(id => id !== notificationId)\n        : [...prev, notificationId]\n    );\n  };\n\n  const handleBulkAction = (action) => {\n    switch (action) {\n      case 'markRead':\n        selectedNotifications.forEach(id => handleMarkAsRead(id));\n        break;\n      case 'delete':\n        selectedNotifications.forEach(id => handleDeleteNotification(id));\n        break;\n      case 'archive':\n        // Implémentation de l'archivage\n        console.log('Archive notifications:', selectedNotifications);\n        break;\n    }\n    setSelectedNotifications([]);\n  };\n\n  // Effet sonore pour les nouvelles notifications\n  useEffect(() => {\n    if (soundEnabled && unreadCount > 0) {\n      // Simulation d'un son de notification\n      console.log('🔔 Nouvelle notification !');\n    }\n  }, [unreadCount, soundEnabled]);\n\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"nexus-notification-system\">\n      <div className=\"nexus-notification-header\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"relative\">\n            <Bell className=\"w-6 h-6 text-blue-600\" />\n            {unreadCount > 0 && (\n              <Badge className=\"absolute -top-2 -right-2 w-5 h-5 flex items-center justify-center p-0 text-xs bg-red-600\">\n                {unreadCount > 99 ? '99+' : unreadCount}\n              </Badge>\n            )}\n          </div>\n          <div>\n            <h2 className=\"text-xl font-bold\">Notifications</h2>\n            <p className=\"text-sm text-muted-foreground\">\n              {unreadCount} non lue{unreadCount > 1 ? 's' : ''} sur {allNotifications.length}\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setSoundEnabled(!soundEnabled)}\n            title={soundEnabled ? 'Désactiver les sons' : 'Activer les sons'}\n          >\n            {soundEnabled ? <Volume2 className=\"w-4 h-4\" /> : <VolumeX className=\"w-4 h-4\" />}\n          </Button>\n          \n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setShowSettings(!showSettings)}\n            title=\"Paramètres de notification\"\n          >\n            <Settings className=\"w-4 h-4\" />\n          </Button>\n          \n          <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n            <X className=\"w-4 h-4\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"nexus-notification-content\">\n        {/* Onglets et filtres */}\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-6\">\n          <div className=\"flex space-x-1\">\n            <Button\n              variant={activeTab === 'all' ? 'default' : 'ghost'}\n              size=\"sm\"\n              onClick={() => setActiveTab('all')}\n            >\n              Toutes ({allNotifications.length})\n            </Button>\n            <Button\n              variant={activeTab === 'unread' ? 'default' : 'ghost'}\n              size=\"sm\"\n              onClick={() => setActiveTab('unread')}\n            >\n              Non lues ({unreadCount})\n            </Button>\n            <Button\n              variant={activeTab === 'read' ? 'default' : 'ghost'}\n              size=\"sm\"\n              onClick={() => setActiveTab('read')}\n            >\n              Lues ({allNotifications.length - unreadCount})\n            </Button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <select\n              value={filter}\n              onChange={(e) => setFilter(e.target.value)}\n              className=\"nexus-input text-sm\"\n            >\n              <option value=\"all\">Toutes catégories</option>\n              <option value=\"gamification\">Gamification</option>\n              <option value=\"documents\">Documents</option>\n              <option value=\"planning\">Planning</option>\n              <option value=\"communication\">Communication</option>\n              <option value=\"evaluation\">Évaluations</option>\n              <option value=\"ai_recommendation\">Recommandations IA</option>\n              <option value=\"goals\">Objectifs</option>\n              <option value=\"system\">Système</option>\n            </select>\n            \n            {unreadCount > 0 && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={handleMarkAllAsRead}\n              >\n                <Check className=\"w-4 h-4 mr-2\" />\n                Tout marquer comme lu\n              </Button>\n            )}\n          </div>\n        </div>\n\n        {/* Actions en lot */}\n        {selectedNotifications.length > 0 && (\n          <div className=\"flex items-center justify-between p-3 mb-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n            <span className=\"text-sm font-medium\">\n              {selectedNotifications.length} notification{selectedNotifications.length > 1 ? 's' : ''} sélectionnée{selectedNotifications.length > 1 ? 's' : ''}\n            </span>\n            <div className=\"flex space-x-2\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => handleBulkAction('markRead')}\n              >\n                <Check className=\"w-3 h-3 mr-1\" />\n                Marquer comme lues\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => handleBulkAction('archive')}\n              >\n                <Archive className=\"w-3 h-3 mr-1\" />\n                Archiver\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => handleBulkAction('delete')}\n              >\n                <Trash2 className=\"w-3 h-3 mr-1\" />\n                Supprimer\n              </Button>\n            </div>\n          </div>\n        )}\n\n        {/* Liste des notifications */}\n        <div className=\"space-y-3\">\n          {filteredNotifications.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <Bell className=\"w-16 h-16 text-muted-foreground mx-auto mb-4\" />\n              <h3 className=\"text-lg font-semibold mb-2\">Aucune notification</h3>\n              <p className=\"text-muted-foreground\">\n                {activeTab === 'unread' \n                  ? 'Toutes vos notifications sont à jour !' \n                  : 'Vous n\\'avez pas encore de notifications.'}\n              </p>\n            </div>\n          ) : (\n            filteredNotifications.map((notification) => {\n              const typeConfig = notificationTypes[notification.type] || notificationTypes.info;\n              const TypeIcon = typeConfig.icon;\n              \n              return (\n                <Card\n                  key={notification.id}\n                  className={`nexus-notification-card ${\n                    !notification.read ? 'unread' : ''\n                  } ${typeConfig.bgColor} ${typeConfig.borderColor} cursor-pointer transition-all hover:shadow-md`}\n                  onClick={() => handleNotificationClick(notification)}\n                >\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex items-start space-x-4\">\n                      {/* Checkbox de sélection */}\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedNotifications.includes(notification.id)}\n                        onChange={(e) => {\n                          e.stopPropagation();\n                          toggleNotificationSelection(notification.id);\n                        }}\n                        className=\"mt-1 rounded\"\n                      />\n                      \n                      {/* Icône de type */}\n                      <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${typeConfig.bgColor}`}>\n                        <TypeIcon className={`w-5 h-5 ${typeConfig.color}`} />\n                      </div>\n                      \n                      {/* Contenu principal */}\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-start justify-between mb-2\">\n                          <h4 className={`font-semibold ${!notification.read ? 'text-foreground' : 'text-muted-foreground'}`}>\n                            {notification.title}\n                          </h4>\n                          <div className=\"flex items-center space-x-2 ml-4\">\n                            {notification.priority === 'high' && (\n                              <Badge variant=\"destructive\" className=\"text-xs\">\n                                Urgent\n                              </Badge>\n                            )}\n                            {!notification.read && (\n                              <div className=\"w-2 h-2 bg-blue-600 rounded-full\"></div>\n                            )}\n                          </div>\n                        </div>\n                        \n                        <p className={`text-sm mb-3 ${!notification.read ? 'text-foreground' : 'text-muted-foreground'}`}>\n                          {notification.message}\n                        </p>\n                        \n                        {/* Métadonnées spécifiques */}\n                        {notification.metadata && (\n                          <div className=\"flex flex-wrap gap-2 mb-3\">\n                            {notification.type === 'achievement' && notification.metadata.xpEarned && (\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                +{notification.metadata.xpEarned} XP\n                              </Badge>\n                            )}\n                            {notification.metadata.subject && (\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                {notification.metadata.subject}\n                              </Badge>\n                            )}\n                            {notification.metadata.teacher && (\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                {notification.metadata.teacher}\n                              </Badge>\n                            )}\n                          </div>\n                        )}\n                        \n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"text-xs text-muted-foreground\">\n                            {formatTimestamp(notification.timestamp)}\n                          </span>\n                          \n                          <div className=\"flex items-center space-x-2\">\n                            {notification.actionText && (\n                              <Button\n                                variant=\"ghost\"\n                                size=\"sm\"\n                                className=\"text-xs\"\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleNotificationClick(notification);\n                                }}\n                              >\n                                {notification.actionText}\n                                <ExternalLink className=\"w-3 h-3 ml-1\" />\n                              </Button>\n                            )}\n                            \n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                handleDeleteNotification(notification.id);\n                              }}\n                            >\n                              <Trash2 className=\"w-3 h-3\" />\n                            </Button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              );\n            })\n          )}\n        </div>\n\n        {/* Pagination si nécessaire */}\n        {filteredNotifications.length > 20 && (\n          <div className=\"flex justify-center mt-6\">\n            <Button variant=\"outline\">\n              Charger plus de notifications\n            </Button>\n          </div>\n        )}\n      </div>\n\n      {/* Panneau des paramètres */}\n      {showSettings && (\n        <div className=\"nexus-notification-settings\">\n          <Card className=\"nexus-card\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <Settings className=\"w-5 h-5\" />\n                <span>Paramètres de notification</span>\n              </CardTitle>\n              <CardDescription>\n                Personnalisez vos préférences de notification\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              {/* Canaux de notification */}\n              <div>\n                <h4 className=\"font-semibold mb-3\">Canaux de notification</h4>\n                <div className=\"space-y-3\">\n                  <label className=\"flex items-center space-x-3\">\n                    <input type=\"checkbox\" defaultChecked className=\"rounded\" />\n                    <Bell className=\"w-4 h-4\" />\n                    <span>Notifications dans l'application</span>\n                  </label>\n                  <label className=\"flex items-center space-x-3\">\n                    <input type=\"checkbox\" defaultChecked className=\"rounded\" />\n                    <Mail className=\"w-4 h-4\" />\n                    <span>Notifications par email</span>\n                  </label>\n                  <label className=\"flex items-center space-x-3\">\n                    <input type=\"checkbox\" className=\"rounded\" />\n                    <Smartphone className=\"w-4 h-4\" />\n                    <span>Notifications push mobile</span>\n                  </label>\n                </div>\n              </div>\n              \n              {/* Types de notifications */}\n              <div>\n                <h4 className=\"font-semibold mb-3\">Types de notifications</h4>\n                <div className=\"space-y-3\">\n                  <label className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <Award className=\"w-4 h-4 text-purple-600\" />\n                      <span>Badges et récompenses</span>\n                    </div>\n                    <input type=\"checkbox\" defaultChecked className=\"rounded\" />\n                  </label>\n                  <label className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <MessageSquare className=\"w-4 h-4 text-indigo-600\" />\n                      <span>Messages des professeurs</span>\n                    </div>\n                    <input type=\"checkbox\" defaultChecked className=\"rounded\" />\n                  </label>\n                  <label className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <Calendar className=\"w-4 h-4 text-orange-600\" />\n                      <span>Rappels de sessions</span>\n                    </div>\n                    <input type=\"checkbox\" defaultChecked className=\"rounded\" />\n                  </label>\n                  <label className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <Brain className=\"w-4 h-4 text-blue-600\" />\n                      <span>Recommandations ARIA</span>\n                    </div>\n                    <input type=\"checkbox\" defaultChecked className=\"rounded\" />\n                  </label>\n                  <label className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <Target className=\"w-4 h-4 text-green-600\" />\n                      <span>Objectifs et défis</span>\n                    </div>\n                    <input type=\"checkbox\" defaultChecked className=\"rounded\" />\n                  </label>\n                </div>\n              </div>\n              \n              {/* Fréquence */}\n              <div>\n                <h4 className=\"font-semibold mb-3\">Fréquence des résumés</h4>\n                <select className=\"nexus-input w-full\">\n                  <option value=\"realtime\">Temps réel</option>\n                  <option value=\"hourly\">Toutes les heures</option>\n                  <option value=\"daily\">Quotidien</option>\n                  <option value=\"weekly\">Hebdomadaire</option>\n                </select>\n              </div>\n              \n              {/* Heures silencieuses */}\n              <div>\n                <h4 className=\"font-semibold mb-3\">Heures silencieuses</h4>\n                <div className=\"flex items-center space-x-4\">\n                  <div>\n                    <label className=\"block text-sm text-muted-foreground mb-1\">De</label>\n                    <input type=\"time\" defaultValue=\"22:00\" className=\"nexus-input\" />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm text-muted-foreground mb-1\">À</label>\n                    <input type=\"time\" defaultValue=\"08:00\" className=\"nexus-input\" />\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"flex space-x-2\">\n                <Button onClick={() => setShowSettings(false)}>\n                  Sauvegarder\n                </Button>\n                <Button variant=\"outline\" onClick={() => setShowSettings(false)}>\n                  Annuler\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Composant de notification toast pour les nouvelles notifications\nexport const NotificationToast = ({ notification, onClose, onAction }) => {\n  const typeConfig = {\n    success: { icon: CheckCircle, color: 'text-green-600', bgColor: 'bg-green-50 border-green-200' },\n    info: { icon: Info, color: 'text-blue-600', bgColor: 'bg-blue-50 border-blue-200' },\n    warning: { icon: AlertTriangle, color: 'text-yellow-600', bgColor: 'bg-yellow-50 border-yellow-200' },\n    error: { icon: XCircle, color: 'text-red-600', bgColor: 'bg-red-50 border-red-200' },\n    achievement: { icon: Award, color: 'text-purple-600', bgColor: 'bg-purple-50 border-purple-200' }\n  }[notification.type] || { icon: Info, color: 'text-blue-600', bgColor: 'bg-blue-50 border-blue-200' };\n\n  const TypeIcon = typeConfig.icon;\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, 5000);\n\n    return () => clearTimeout(timer);\n  }, [onClose]);\n\n  return (\n    <div className={`nexus-notification-toast ${typeConfig.bgColor} border rounded-lg shadow-lg p-4 max-w-sm`}>\n      <div className=\"flex items-start space-x-3\">\n        <TypeIcon className={`w-5 h-5 ${typeConfig.color} mt-0.5`} />\n        <div className=\"flex-1 min-w-0\">\n          <h4 className=\"font-semibold text-sm\">{notification.title}</h4>\n          <p className=\"text-sm text-muted-foreground mt-1\">{notification.message}</p>\n          {notification.actionText && (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"mt-2 p-0 h-auto text-xs\"\n              onClick={onAction}\n            >\n              {notification.actionText}\n            </Button>\n          )}\n        </div>\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={onClose}\n          className=\"p-0 h-auto\"\n        >\n          <X className=\"w-4 h-4\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationSystem;\n\n","import React, { useState } from 'react';\nimport { \n  Menu, \n  X, \n  Home, \n  User, \n  BookOpen, \n  MessageSquare, \n  Video, \n  FileText, \n  Settings, \n  LogOut,\n  Bell,\n  Search\n} from 'lucide-react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Button } from '../ui/button';\nimport { Input } from '../ui/input';\nimport Logo from '../Logo';\nimport NotificationSystem from '../NotificationSystem';\n\nexport default function DashboardLayout({ children, currentPage = 'dashboard' }) {\n  const { user, logout, isStudent, isParent, isTeacher, isAdmin } = useAuth();\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [notificationsOpen, setNotificationsOpen] = useState(false);\n\n  const navigation = [\n    { name: 'Tableau de bord', href: '/dashboard', icon: Home, current: currentPage === 'dashboard' },\n    { name: 'Mon profil', href: '/profile', icon: User, current: currentPage === 'profile' },\n    { name: 'Cours & Contenus', href: '/courses', icon: BookOpen, current: currentPage === 'courses' },\n    { name: 'ARIA Assistant', href: '/aria', icon: MessageSquare, current: currentPage === 'aria' },\n    { name: 'Visioconférence', href: '/video', icon: Video, current: currentPage === 'video' },\n    { name: 'Documents', href: '/documents', icon: FileText, current: currentPage === 'documents' },\n  ];\n\n  // Navigation spécifique selon le rôle\n  if (isTeacher()) {\n    navigation.push(\n      { name: 'Mes élèves', href: '/students', icon: User, current: currentPage === 'students' },\n      { name: 'Créer contenu', href: '/create-content', icon: FileText, current: currentPage === 'create-content' }\n    );\n  }\n\n  if (isParent()) {\n    navigation.push(\n      { name: 'Suivi enfants', href: '/children', icon: User, current: currentPage === 'children' },\n      { name: 'Rapports', href: '/reports', icon: FileText, current: currentPage === 'reports' }\n    );\n  }\n\n  if (isAdmin()) {\n    navigation.push(\n      { name: 'Administration', href: '/admin', icon: Settings, current: currentPage === 'admin' },\n      { name: 'Utilisateurs', href: '/users', icon: User, current: currentPage === 'users' },\n      { name: 'Statistiques', href: '/stats', icon: FileText, current: currentPage === 'stats' }\n    );\n  }\n\n  const handleLogout = async () => {\n    await logout();\n    window.location.href = '/';\n  };\n\n  const userInitials = user ? `${user.first_name?.[0] || ''}${user.last_name?.[0] || ''}` : 'U';\n  const userName = user ? `${user.first_name || ''} ${user.last_name || ''}`.trim() : 'Utilisateur';\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Sidebar mobile */}\n      <div className={`fixed inset-0 flex z-40 md:hidden ${sidebarOpen ? '' : 'hidden'}`}>\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-75\" onClick={() => setSidebarOpen(false)} />\n        \n        <div className=\"relative flex-1 flex flex-col max-w-xs w-full bg-white\">\n          <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\n            <button\n              type=\"button\"\n              className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\n              onClick={() => setSidebarOpen(false)}\n            >\n              <X className=\"h-6 w-6 text-white\" />\n            </button>\n          </div>\n          \n          <div className=\"flex-1 h-0 pt-5 pb-4 overflow-y-auto\">\n            <div className=\"flex-shrink-0 flex items-center px-4 py-2\">\n              <Logo size=\"small\" className=\"h-10 w-auto\" />\n            </div>\n            <nav className=\"mt-5 px-2 space-y-1\">\n              {navigation.map((item) => (\n                <a\n                  key={item.name}\n                  href={item.href}\n                  className={`${\n                    item.current\n                      ? 'bg-blue-100 text-blue-900'\n                      : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                  } group flex items-center px-2 py-2 text-base font-medium rounded-md`}\n                >\n                  <item.icon\n                    className={`${\n                      item.current ? 'text-blue-500' : 'text-gray-400 group-hover:text-gray-500'\n                    } mr-4 flex-shrink-0 h-6 w-6`}\n                  />\n                  {item.name}\n                </a>\n              ))}\n            </nav>\n          </div>\n          \n          <div className=\"flex-shrink-0 flex border-t border-gray-200 p-4\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"h-10 w-10 rounded-full bg-blue-500 flex items-center justify-center text-white font-medium\">\n                  {userInitials}\n                </div>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-base font-medium text-gray-700\">{userName}</p>\n                <p className=\"text-sm font-medium text-gray-500 capitalize\">{user?.role}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Sidebar desktop */}\n      <div className=\"hidden md:flex md:w-64 md:flex-col md:fixed md:inset-y-0\">\n        <div className=\"flex-1 flex flex-col min-h-0 border-r border-gray-200 bg-white\">\n          <div className=\"flex-1 flex flex-col pt-5 pb-4 overflow-y-auto\">\n            <div className=\"flex items-center flex-shrink-0 px-4 py-2\">\n              <Logo size=\"small\" className=\"h-10 w-auto\" />\n            </div>\n            <nav className=\"mt-5 flex-1 px-2 bg-white space-y-1\">\n              {navigation.map((item) => (\n                <a\n                  key={item.name}\n                  href={item.href}\n                  className={`${\n                    item.current\n                      ? 'bg-blue-100 text-blue-900'\n                      : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                  } group flex items-center px-2 py-2 text-sm font-medium rounded-md`}\n                >\n                  <item.icon\n                    className={`${\n                      item.current ? 'text-blue-500' : 'text-gray-400 group-hover:text-gray-500'\n                    } mr-3 flex-shrink-0 h-6 w-6`}\n                  />\n                  {item.name}\n                </a>\n              ))}\n            </nav>\n          </div>\n          \n          <div className=\"flex-shrink-0 flex border-t border-gray-200 p-4\">\n            <div className=\"flex items-center w-full\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"h-10 w-10 rounded-full bg-blue-500 flex items-center justify-center text-white font-medium\">\n                  {userInitials}\n                </div>\n              </div>\n              <div className=\"ml-3 flex-1\">\n                <p className=\"text-sm font-medium text-gray-700\">{userName}</p>\n                <p className=\"text-xs font-medium text-gray-500 capitalize\">{user?.role}</p>\n              </div>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={handleLogout}\n                className=\"ml-2\"\n              >\n                <LogOut className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Contenu principal */}\n      <div className=\"md:pl-64 flex flex-col flex-1\">\n        {/* Header */}\n        <div className=\"sticky top-0 z-10 md:hidden pl-1 pt-1 sm:pl-3 sm:pt-3 bg-gray-50\">\n          <button\n            type=\"button\"\n            className=\"-ml-0.5 -mt-0.5 h-12 w-12 inline-flex items-center justify-center rounded-md text-gray-500 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-500\"\n            onClick={() => setSidebarOpen(true)}\n          >\n            <Menu className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* Barre de navigation supérieure */}\n        <div className=\"bg-white shadow-sm border-b border-gray-200\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex justify-between h-16\">\n              <div className=\"flex items-center\">\n                <div className=\"hidden md:block\">\n                  <div className=\"ml-4 flex items-center md:ml-6\">\n                    <div className=\"relative\">\n                      <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                        <Search className=\"h-5 w-5 text-gray-400\" />\n                      </div>\n                      <Input\n                        type=\"text\"\n                        placeholder=\"Rechercher...\"\n                        className=\"pl-10 pr-4 py-2 w-64\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center\">\n                {/* Notifications */}\n                <div className=\"relative\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => setNotificationsOpen(!notificationsOpen)}\n                    className=\"relative\"\n                  >\n                    <Bell className=\"h-6 w-6\" />\n                    <span className=\"absolute -top-1 -right-1 h-4 w-4 bg-red-500 text-white text-xs rounded-full flex items-center justify-center\">\n                      3\n                    </span>\n                  </Button>\n                  \n                  {notificationsOpen && (\n                    <div className=\"absolute right-0 mt-2 w-80 bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 z-50\">\n                      <NotificationSystem />\n                    </div>\n                  )}\n                </div>\n\n                {/* Profil utilisateur (mobile) */}\n                <div className=\"ml-3 md:hidden\">\n                  <div className=\"flex items-center\">\n                    <div className=\"h-8 w-8 rounded-full bg-blue-500 flex items-center justify-center text-white font-medium text-sm\">\n                      {userInitials}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Contenu de la page */}\n        <main className=\"flex-1\">\n          <div className=\"py-6\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n              {children}\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport StudentDashboard from '../StudentDashboard';\nimport ParentDashboard from '../ParentDashboard';\nimport TeacherDashboard from '../TeacherDashboard';\nimport AdminDashboard from '../AdminDashboard';\nimport DashboardLayout from '../Layout/DashboardLayout';\n\nexport default function MainDashboard() {\n  const { user, isStudent, isParent, isTeacher, isAdmin } = useAuth();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Simuler le chargement des données\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  if (loading) {\n    return (\n      <DashboardLayout>\n        <div className=\"flex items-center justify-center min-h-96\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n            <p className=\"text-gray-600\">Chargement de votre tableau de bord...</p>\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  const renderDashboard = () => {\n    if (isStudent()) {\n      return <StudentDashboard />;\n    } else if (isParent()) {\n      return <ParentDashboard />;\n    } else if (isTeacher()) {\n      return <TeacherDashboard />;\n    } else if (isAdmin()) {\n      return <AdminDashboard />;\n    } else {\n      return (\n        <div className=\"text-center py-12\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n            Rôle non reconnu\n          </h2>\n          <p className=\"text-gray-600\">\n            Votre rôle utilisateur n'est pas reconnu. Veuillez contacter l'administrateur.\n          </p>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <DashboardLayout currentPage=\"dashboard\">\n      {renderDashboard()}\n    </DashboardLayout>\n  );\n}\n\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card.jsx'\nimport { Button } from '@/components/ui/button.jsx'\nimport { Badge } from '@/components/ui/badge.jsx'\nimport { Progress } from '@/components/ui/progress.jsx'\nimport { \n  Brain, \n  Send, \n  Mic, \n  MicOff, \n  Volume2, \n  VolumeX, \n  Minimize2, \n  Maximize2, \n  X, \n  Bot,\n  User,\n  Sparkles,\n  FileText,\n  Image,\n  Video,\n  Download,\n  Share2,\n  ThumbsUp,\n  ThumbsDown,\n  Copy,\n  RefreshCw,\n  Settings,\n  HelpCircle,\n  Lightbulb,\n  Target,\n  BookOpen,\n  Calculator,\n  Code,\n  Atom,\n  PenTool,\n  Clock,\n  TrendingUp,\n  Award,\n  Zap,\n  Eye,\n  EyeOff,\n  ChevronDown,\n  ChevronUp,\n  Play,\n  Pause,\n  RotateCcw,\n  MessageSquare,\n  Search,\n  Filter,\n  Star,\n  Heart,\n  Bookmark,\n  ExternalLink,\n  Upload,\n  Paperclip,\n  Smile,\n  MoreHorizontal\n} from 'lucide-react'\n\nconst ARIAAgent = ({ \n  student, \n  isVisible, \n  onClose, \n  onMinimize, \n  isMinimized, \n  documents, \n  addNotification,\n  onGenerateDocument,\n  onRequestExercise \n}) => {\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [currentMode, setCurrentMode] = useState('chat'); // chat, tutor, generator, analyzer\n  const [selectedSubject, setSelectedSubject] = useState('all');\n  const [ariaPersonality, setAriaPersonality] = useState('encouraging'); // encouraging, professional, friendly\n  const [showSuggestions, setShowSuggestions] = useState(true);\n  const [conversationHistory, setConversationHistory] = useState([]);\n  const [ariaThinking, setAriaThinking] = useState(false);\n  const [attachedFiles, setAttachedFiles] = useState([]);\n  const [quickActions, setQuickActions] = useState([]);\n  \n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Messages d'accueil personnalisés selon le profil\n  const welcomeMessages = {\n    first_time: [\n      {\n        id: 'welcome-1',\n        type: 'aria',\n        content: `Salut ${student?.name} ! 👋 Je suis ARIA, ton assistant pédagogique intelligent. Je suis là pour t'accompagner dans tes études et t'aider à réussir !`,\n        timestamp: new Date(),\n        mood: 'excited'\n      },\n      {\n        id: 'welcome-2',\n        type: 'aria',\n        content: `J'ai analysé ton profil d'apprentissage et je vois que tu es plutôt ${student?.learningStyle?.visual > 70 ? 'visuel' : 'auditif'}. Je vais adapter mes explications en conséquence ! 🎯`,\n        timestamp: new Date(),\n        mood: 'analytical'\n      }\n    ],\n    returning: [\n      {\n        id: 'return-1',\n        type: 'aria',\n        content: `Content de te revoir ${student?.name} ! 😊 Tu as progressé de ${student?.progress?.overall || 0}% depuis notre dernière conversation. Bravo !`,\n        timestamp: new Date(),\n        mood: 'proud'\n      }\n    ]\n  };\n\n  // Suggestions contextuelles\n  const contextualSuggestions = [\n    {\n      text: \"Explique-moi les fonctions exponentielles\",\n      icon: Calculator,\n      subject: 'maths',\n      action: () => handleSuggestionClick(\"Peux-tu m'expliquer les fonctions exponentielles avec des exemples visuels ?\")\n    },\n    {\n      text: \"Aide-moi avec mon code Python\",\n      icon: Code,\n      subject: 'nsi',\n      action: () => handleSuggestionClick(\"J'ai un problème avec mon code Python, peux-tu m'aider ?\")\n    },\n    {\n      text: \"Génère un exercice personnalisé\",\n      icon: Target,\n      subject: 'all',\n      action: () => setCurrentMode('generator')\n    },\n    {\n      text: \"Analyse mon style d'apprentissage\",\n      icon: Brain,\n      subject: 'all',\n      action: () => setCurrentMode('analyzer')\n    },\n    {\n      text: \"Prépare-moi pour le Grand Oral\",\n      icon: Mic,\n      subject: 'français',\n      action: () => handleSuggestionClick(\"Comment puis-je me préparer efficacement pour le Grand Oral ?\")\n    },\n    {\n      text: \"Révision rapide avant contrôle\",\n      icon: Clock,\n      subject: 'all',\n      action: () => handleSuggestionClick(\"J'ai un contrôle demain, peux-tu m'aider à réviser rapidement ?\")\n    }\n  ];\n\n  // Actions rapides selon le mode\n  const getModeActions = () => {\n    switch (currentMode) {\n      case 'tutor':\n        return [\n          { icon: Calculator, text: \"Maths\", action: () => setSelectedSubject('maths') },\n          { icon: Code, text: \"NSI\", action: () => setSelectedSubject('nsi') },\n          { icon: Atom, text: \"Physique\", action: () => setSelectedSubject('physique') },\n          { icon: PenTool, text: \"Français\", action: () => setSelectedSubject('français') }\n        ];\n      case 'generator':\n        return [\n          { icon: FileText, text: \"Fiche de cours\", action: () => generateContent('course') },\n          { icon: Target, text: \"Exercices\", action: () => generateContent('exercises') },\n          { icon: Award, text: \"Quiz\", action: () => generateContent('quiz') },\n          { icon: BookOpen, text: \"Résumé\", action: () => generateContent('summary') }\n        ];\n      case 'analyzer':\n        return [\n          { icon: TrendingUp, text: \"Progression\", action: () => analyzeProgress() },\n          { icon: Brain, text: \"Style d'apprentissage\", action: () => analyzeLearningStyle() },\n          { icon: Target, text: \"Points faibles\", action: () => analyzeWeaknesses() },\n          { icon: Lightbulb, text: \"Recommandations\", action: () => getRecommendations() }\n        ];\n      default:\n        return [];\n    }\n  };\n\n  useEffect(() => {\n    if (isVisible && messages.length === 0) {\n      // Initialiser la conversation selon le contexte\n      const isFirstTime = !student?.lastARIAInteraction;\n      const welcomeSet = isFirstTime ? welcomeMessages.first_time : welcomeMessages.returning;\n      \n      setTimeout(() => {\n        setMessages(welcomeSet);\n        generateQuickActions();\n      }, 500);\n    }\n  }, [isVisible, student]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const generateQuickActions = () => {\n    const actions = [];\n    \n    // Actions basées sur le profil de l'élève\n    if (student?.subjects?.includes('Mathématiques')) {\n      actions.push({\n        text: \"Exercice de maths personnalisé\",\n        action: () => generatePersonalizedExercise('maths')\n      });\n    }\n    \n    if (student?.progress?.overall < 70) {\n      actions.push({\n        text: \"Plan de rattrapage\",\n        action: () => generateCatchupPlan()\n      });\n    }\n    \n    if (student?.nextSession) {\n      actions.push({\n        text: \"Préparer ma prochaine session\",\n        action: () => prepareNextSession()\n      });\n    }\n    \n    setQuickActions(actions);\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    setInputMessage(suggestion);\n    setShowSuggestions(false);\n    setTimeout(() => {\n      sendMessage(suggestion);\n    }, 100);\n  };\n\n  const sendMessage = async (messageText = inputMessage) => {\n    if (!messageText.trim()) return;\n\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: messageText,\n      timestamp: new Date(),\n      attachments: attachedFiles\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setAttachedFiles([]);\n    setIsTyping(true);\n    setAriaThinking(true);\n\n    // Simuler la réflexion d'ARIA\n    setTimeout(async () => {\n      setAriaThinking(false);\n      const ariaResponse = await generateARIAResponse(messageText, userMessage);\n      \n      setMessages(prev => [...prev, ariaResponse]);\n      setIsTyping(false);\n      \n      // Ajouter à l'historique de conversation\n      setConversationHistory(prev => [...prev, userMessage, ariaResponse]);\n      \n      // Notification si réponse importante\n      if (ariaResponse.importance === 'high') {\n        addNotification({\n          type: 'info',\n          title: 'ARIA a une recommandation importante',\n          message: ariaResponse.content.substring(0, 100) + '...'\n        });\n      }\n    }, 1500 + Math.random() * 1000);\n  };\n\n  const generateARIAResponse = async (userMessage, context) => {\n    // Simulation d'une réponse intelligente d'ARIA\n    const responses = {\n      math: [\n        \"Excellente question sur les mathématiques ! Laisse-moi t'expliquer avec des exemples concrets...\",\n        \"Je vois que tu travailles sur ce concept. Voici une approche adaptée à ton style d'apprentissage visuel...\",\n        \"C'est un point important ! Je vais te créer un schéma pour mieux comprendre...\"\n      ],\n      nsi: [\n        \"Parfait ! La programmation, c'est ma spécialité. Regardons ton code ensemble...\",\n        \"Je vais t'aider à déboguer ça. D'abord, analysons la logique de ton algorithme...\",\n        \"Excellente question sur Python ! Voici une solution élégante...\"\n      ],\n      physics: [\n        \"La physique devient plus claire avec de bons exemples ! Voici ce que je propose...\",\n        \"Je vais t'expliquer ce phénomène avec des analogies du quotidien...\",\n        \"C'est un concept fondamental ! Créons ensemble un schéma explicatif...\"\n      ],\n      french: [\n        \"Excellente réflexion littéraire ! Développons cette analyse ensemble...\",\n        \"Pour le Grand Oral, je vais t'aider à structurer ton argumentation...\",\n        \"Très bonne question sur la méthodologie ! Voici ma recommandation...\"\n      ],\n      general: [\n        \"Je comprends ta préoccupation. Analysons cela ensemble...\",\n        \"Excellente question ! Voici ce que je peux t'apporter comme éclairage...\",\n        \"C'est exactement le type de réflexion qui montre ta progression !\"\n      ]\n    };\n\n    // Déterminer le contexte de la question\n    let responseCategory = 'general';\n    if (userMessage.toLowerCase().includes('math') || userMessage.toLowerCase().includes('fonction') || userMessage.toLowerCase().includes('équation')) {\n      responseCategory = 'math';\n    } else if (userMessage.toLowerCase().includes('python') || userMessage.toLowerCase().includes('code') || userMessage.toLowerCase().includes('algorithme')) {\n      responseCategory = 'nsi';\n    } else if (userMessage.toLowerCase().includes('physique') || userMessage.toLowerCase().includes('optique') || userMessage.toLowerCase().includes('mécanique')) {\n      responseCategory = 'physics';\n    } else if (userMessage.toLowerCase().includes('français') || userMessage.toLowerCase().includes('oral') || userMessage.toLowerCase().includes('dissertation')) {\n      responseCategory = 'french';\n    }\n\n    const baseResponse = responses[responseCategory][Math.floor(Math.random() * responses[responseCategory].length)];\n    \n    // Personnaliser selon le profil de l'élève\n    let personalizedResponse = baseResponse;\n    if (student?.learningStyle?.visual > 70) {\n      personalizedResponse += \"\\n\\n📊 Je vais créer un schéma visuel pour t'aider à mieux comprendre.\";\n    }\n    if (student?.learningStyle?.auditory > 70) {\n      personalizedResponse += \"\\n\\n🎧 Veux-tu que je t'explique cela à l'oral ?\";\n    }\n\n    return {\n      id: Date.now() + 1,\n      type: 'aria',\n      content: personalizedResponse,\n      timestamp: new Date(),\n      mood: 'helpful',\n      suggestions: generateFollowUpSuggestions(responseCategory),\n      actions: generateResponseActions(responseCategory),\n      importance: Math.random() > 0.7 ? 'high' : 'normal'\n    };\n  };\n\n  const generateFollowUpSuggestions = (category) => {\n    const suggestions = {\n      math: [\n        \"Peux-tu me donner un exercice similaire ?\",\n        \"Comment appliquer cela dans un problème concret ?\",\n        \"Quelles sont les erreurs courantes à éviter ?\"\n      ],\n      nsi: [\n        \"Montre-moi d'autres exemples de code\",\n        \"Comment optimiser cet algorithme ?\",\n        \"Quels sont les cas d'usage pratiques ?\"\n      ],\n      physics: [\n        \"Peux-tu me donner des exemples du quotidien ?\",\n        \"Comment résoudre des exercices similaires ?\",\n        \"Quelles formules dois-je retenir ?\"\n      ],\n      french: [\n        \"Comment structurer ma présentation ?\",\n        \"Quels arguments utiliser ?\",\n        \"Comment gérer le stress de l'oral ?\"\n      ],\n      general: [\n        \"Peux-tu m'en dire plus ?\",\n        \"Comment puis-je m'améliorer ?\",\n        \"Quelles sont tes recommandations ?\"\n      ]\n    };\n    \n    return suggestions[category] || suggestions.general;\n  };\n\n  const generateResponseActions = (category) => {\n    const actions = {\n      math: [\n        { text: \"Générer exercice\", action: () => generatePersonalizedExercise('maths') },\n        { text: \"Créer fiche\", action: () => onGenerateDocument('math-summary') }\n      ],\n      nsi: [\n        { text: \"Analyser code\", action: () => analyzeCode() },\n        { text: \"Projet guidé\", action: () => startGuidedProject() }\n      ],\n      physics: [\n        { text: \"Schéma explicatif\", action: () => generateDiagram() },\n        { text: \"TP virtuel\", action: () => startVirtualLab() }\n      ],\n      french: [\n        { text: \"Simulation oral\", action: () => startOralSimulation() },\n        { text: \"Plan détaillé\", action: () => generateEssayPlan() }\n      ]\n    };\n    \n    return actions[category] || [];\n  };\n\n  const generatePersonalizedExercise = (subject) => {\n    setAriaThinking(true);\n    setTimeout(() => {\n      const exercise = {\n        id: Date.now(),\n        type: 'aria',\n        content: `🎯 **Exercice personnalisé en ${subject}**\\n\\nJ'ai créé un exercice adapté à ton niveau et à ton style d'apprentissage. Il prend en compte tes points forts et les domaines à améliorer.`,\n        timestamp: new Date(),\n        mood: 'creative',\n        isExercise: true,\n        exerciseData: {\n          subject: subject,\n          difficulty: student?.level || 1,\n          type: 'personalized',\n          estimatedTime: '15-20 minutes'\n        }\n      };\n      \n      setMessages(prev => [...prev, exercise]);\n      setAriaThinking(false);\n      \n      if (onRequestExercise) {\n        onRequestExercise(subject, student?.level);\n      }\n    }, 2000);\n  };\n\n  const startVoiceInteraction = () => {\n    if (!isListening) {\n      setIsListening(true);\n      // Simulation de reconnaissance vocale\n      setTimeout(() => {\n        setIsListening(false);\n        setInputMessage(\"Peux-tu m'expliquer les limites en mathématiques ?\");\n      }, 3000);\n    } else {\n      setIsListening(false);\n    }\n  };\n\n  const speakMessage = (message) => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(message.content);\n      utterance.lang = 'fr-FR';\n      utterance.rate = 0.9;\n      utterance.pitch = 1.1;\n      \n      utterance.onstart = () => setIsSpeaking(true);\n      utterance.onend = () => setIsSpeaking(false);\n      \n      speechSynthesis.speak(utterance);\n    }\n  };\n\n  const handleFileAttachment = (event) => {\n    const files = Array.from(event.target.files);\n    setAttachedFiles(prev => [...prev, ...files]);\n  };\n\n  const removeAttachment = (index) => {\n    setAttachedFiles(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const copyMessage = (message) => {\n    navigator.clipboard.writeText(message.content);\n    addNotification({\n      type: 'success',\n      title: 'Message copié',\n      message: 'Le message a été copié dans le presse-papiers'\n    });\n  };\n\n  const rateMessage = (messageId, rating) => {\n    setMessages(prev => prev.map(msg => \n      msg.id === messageId \n        ? { ...msg, userRating: rating }\n        : msg\n    ));\n    \n    addNotification({\n      type: 'success',\n      title: 'Merci pour votre retour !',\n      message: 'Votre évaluation aide ARIA à s\\'améliorer'\n    });\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <div className={`nexus-aria-container ${isMinimized ? 'minimized' : ''}`}>\n      {/* Header */}\n      <div className=\"nexus-aria-header\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"nexus-aria-avatar\">\n            <Brain className=\"w-6 h-6\" />\n            <div className=\"nexus-aria-status-indicator\"></div>\n          </div>\n          <div>\n            <h3 className=\"font-semibold\">ARIA</h3>\n            <p className=\"text-xs text-muted-foreground\">\n              {ariaThinking ? 'Réfléchit...' : 'Assistant pédagogique'}\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {/* Mode selector */}\n          <select \n            value={currentMode} \n            onChange={(e) => setCurrentMode(e.target.value)}\n            className=\"nexus-aria-mode-selector\"\n          >\n            <option value=\"chat\">💬 Chat</option>\n            <option value=\"tutor\">👨‍🏫 Tuteur</option>\n            <option value=\"generator\">📝 Générateur</option>\n            <option value=\"analyzer\">📊 Analyseur</option>\n          </select>\n          \n          <Button variant=\"ghost\" size=\"sm\" onClick={onMinimize}>\n            {isMinimized ? <Maximize2 className=\"w-4 h-4\" /> : <Minimize2 className=\"w-4 h-4\" />}\n          </Button>\n          <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n            <X className=\"w-4 h-4\" />\n          </Button>\n        </div>\n      </div>\n\n      {!isMinimized && (\n        <>\n          {/* Mode Actions */}\n          {getModeActions().length > 0 && (\n            <div className=\"nexus-aria-mode-actions\">\n              {getModeActions().map((action, index) => (\n                <Button\n                  key={index}\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={action.action}\n                  className=\"nexus-aria-action-btn\"\n                >\n                  <action.icon className=\"w-4 h-4 mr-2\" />\n                  {action.text}\n                </Button>\n              ))}\n            </div>\n          )}\n\n          {/* Messages */}\n          <div className=\"nexus-aria-messages\">\n            {messages.map((message) => (\n              <div\n                key={message.id}\n                className={`nexus-aria-message ${message.type === 'user' ? 'user' : 'aria'}`}\n              >\n                <div className=\"nexus-aria-message-avatar\">\n                  {message.type === 'user' ? (\n                    <User className=\"w-4 h-4\" />\n                  ) : (\n                    <Brain className=\"w-4 h-4\" />\n                  )}\n                </div>\n                \n                <div className=\"nexus-aria-message-content\">\n                  <div className=\"nexus-aria-message-bubble\">\n                    <div className=\"nexus-aria-message-text\">\n                      {message.content}\n                    </div>\n                    \n                    {message.attachments && message.attachments.length > 0 && (\n                      <div className=\"nexus-aria-attachments\">\n                        {message.attachments.map((file, index) => (\n                          <div key={index} className=\"nexus-aria-attachment\">\n                            <Paperclip className=\"w-4 h-4\" />\n                            <span>{file.name}</span>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                    \n                    {message.isExercise && (\n                      <div className=\"nexus-aria-exercise-card\">\n                        <div className=\"flex items-center space-x-2 mb-2\">\n                          <Target className=\"w-4 h-4 text-blue-600\" />\n                          <span className=\"font-medium\">Exercice personnalisé</span>\n                        </div>\n                        <div className=\"text-sm text-muted-foreground\">\n                          <p>Matière: {message.exerciseData.subject}</p>\n                          <p>Durée estimée: {message.exerciseData.estimatedTime}</p>\n                        </div>\n                        <Button size=\"sm\" className=\"mt-2\">\n                          <Play className=\"w-4 h-4 mr-2\" />\n                          Commencer l'exercice\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                  \n                  <div className=\"nexus-aria-message-meta\">\n                    <span className=\"nexus-aria-timestamp\">\n                      {message.timestamp.toLocaleTimeString('fr-FR', { \n                        hour: '2-digit', \n                        minute: '2-digit' \n                      })}\n                    </span>\n                    \n                    {message.type === 'aria' && (\n                      <div className=\"nexus-aria-message-actions\">\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => speakMessage(message)}\n                          disabled={isSpeaking}\n                        >\n                          {isSpeaking ? <VolumeX className=\"w-3 h-3\" /> : <Volume2 className=\"w-3 h-3\" />}\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => copyMessage(message)}\n                        >\n                          <Copy className=\"w-3 h-3\" />\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => rateMessage(message.id, 'up')}\n                          className={message.userRating === 'up' ? 'text-green-600' : ''}\n                        >\n                          <ThumbsUp className=\"w-3 h-3\" />\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => rateMessage(message.id, 'down')}\n                          className={message.userRating === 'down' ? 'text-red-600' : ''}\n                        >\n                          <ThumbsDown className=\"w-3 h-3\" />\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                  \n                  {message.suggestions && (\n                    <div className=\"nexus-aria-suggestions\">\n                      {message.suggestions.map((suggestion, index) => (\n                        <Button\n                          key={index}\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => handleSuggestionClick(suggestion)}\n                          className=\"nexus-aria-suggestion-btn\"\n                        >\n                          {suggestion}\n                        </Button>\n                      ))}\n                    </div>\n                  )}\n                  \n                  {message.actions && message.actions.length > 0 && (\n                    <div className=\"nexus-aria-message-actions-bar\">\n                      {message.actions.map((action, index) => (\n                        <Button\n                          key={index}\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={action.action}\n                          className=\"nexus-aria-action-btn\"\n                        >\n                          {action.text}\n                        </Button>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n            \n            {ariaThinking && (\n              <div className=\"nexus-aria-message aria\">\n                <div className=\"nexus-aria-message-avatar\">\n                  <Brain className=\"w-4 h-4\" />\n                </div>\n                <div className=\"nexus-aria-message-content\">\n                  <div className=\"nexus-aria-thinking\">\n                    <div className=\"nexus-aria-thinking-dots\">\n                      <span></span>\n                      <span></span>\n                      <span></span>\n                    </div>\n                    <span className=\"text-sm text-muted-foreground\">ARIA réfléchit...</span>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <div ref={messagesEndRef} />\n          </div>\n\n          {/* Suggestions contextuelles */}\n          {showSuggestions && messages.length <= 2 && (\n            <div className=\"nexus-aria-suggestions-panel\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h4 className=\"font-medium text-sm\">Suggestions pour commencer</h4>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setShowSuggestions(false)}\n                >\n                  <EyeOff className=\"w-3 h-3\" />\n                </Button>\n              </div>\n              <div className=\"grid grid-cols-2 gap-2\">\n                {contextualSuggestions.slice(0, 6).map((suggestion, index) => (\n                  <Button\n                    key={index}\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={suggestion.action}\n                    className=\"nexus-aria-suggestion-card\"\n                  >\n                    <suggestion.icon className=\"w-4 h-4 mr-2\" />\n                    <span className=\"text-xs\">{suggestion.text}</span>\n                  </Button>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Input */}\n          <div className=\"nexus-aria-input-container\">\n            {/* Attachments preview */}\n            {attachedFiles.length > 0 && (\n              <div className=\"nexus-aria-attachments-preview\">\n                {attachedFiles.map((file, index) => (\n                  <div key={index} className=\"nexus-aria-attachment-preview\">\n                    <Paperclip className=\"w-3 h-3\" />\n                    <span className=\"text-xs\">{file.name}</span>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => removeAttachment(index)}\n                    >\n                      <X className=\"w-3 h-3\" />\n                    </Button>\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            <div className=\"nexus-aria-input-bar\">\n              <input\n                type=\"file\"\n                ref={fileInputRef}\n                onChange={handleFileAttachment}\n                multiple\n                accept=\".pdf,.doc,.docx,.txt,.jpg,.png,.py\"\n                className=\"hidden\"\n              />\n              \n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => fileInputRef.current?.click()}\n                className=\"nexus-aria-input-btn\"\n              >\n                <Paperclip className=\"w-4 h-4\" />\n              </Button>\n              \n              <input\n                ref={inputRef}\n                type=\"text\"\n                value={inputMessage}\n                onChange={(e) => setInputMessage(e.target.value)}\n                onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n                placeholder=\"Pose ta question à ARIA...\"\n                className=\"nexus-aria-input\"\n                disabled={isTyping}\n              />\n              \n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={startVoiceInteraction}\n                className={`nexus-aria-input-btn ${isListening ? 'listening' : ''}`}\n              >\n                {isListening ? <MicOff className=\"w-4 h-4\" /> : <Mic className=\"w-4 h-4\" />}\n              </Button>\n              \n              <Button\n                onClick={() => sendMessage()}\n                disabled={!inputMessage.trim() || isTyping}\n                className=\"nexus-aria-send-btn\"\n              >\n                <Send className=\"w-4 h-4\" />\n              </Button>\n            </div>\n            \n            <div className=\"nexus-aria-input-footer\">\n              <div className=\"flex items-center space-x-4 text-xs text-muted-foreground\">\n                <span>Mode: {currentMode}</span>\n                <span>Matière: {selectedSubject}</span>\n                <span>Style: {ariaPersonality}</span>\n              </div>\n              \n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setShowSuggestions(!showSuggestions)}\n              >\n                <Lightbulb className=\"w-3 h-3 mr-1\" />\n                <span className=\"text-xs\">Suggestions</span>\n              </Button>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ARIAAgent;\n\n","import React, { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card.jsx'\nimport { Button } from '@/components/ui/button.jsx'\nimport { Badge } from '@/components/ui/badge.jsx'\nimport { Progress } from '@/components/ui/progress.jsx'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs.jsx'\nimport { \n  FileText, \n  Download, \n  Share2, \n  Eye, \n  Edit, \n  Trash2, \n  Plus, \n  Search, \n  Filter, \n  Settings, \n  Wand2,\n  Brain,\n  Target,\n  BookOpen,\n  Calculator,\n  Code,\n  Atom,\n  PenTool,\n  Clock,\n  Star,\n  Heart,\n  Bookmark,\n  Copy,\n  ExternalLink,\n  Upload,\n  Image,\n  Video,\n  Mic,\n  Headphones,\n  Printer,\n  Save,\n  RefreshCw,\n  CheckCircle,\n  AlertCircle,\n  Info,\n  Lightbulb,\n  Zap,\n  Sparkles,\n  Award,\n  TrendingUp,\n  BarChart3,\n  PieChart,\n  Activity,\n  Users,\n  Calendar,\n  MapPin,\n  Tag,\n  Layers,\n  Grid,\n  List,\n  MoreHorizontal,\n  ChevronDown,\n  ChevronRight,\n  X,\n  Play,\n  Pause,\n  RotateCcw\n} from 'lucide-react'\n\nconst DocumentGenerator = ({ \n  student, \n  onGenerateDocument, \n  onSaveDocument, \n  documents, \n  addNotification,\n  isVisible,\n  onClose \n}) => {\n  const [activeTab, setActiveTab] = useState('generator');\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [generationParams, setGenerationParams] = useState({\n    subject: 'all',\n    type: 'course',\n    difficulty: 3,\n    duration: 30,\n    style: 'visual',\n    topics: [],\n    customPrompt: ''\n  });\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generatedContent, setGeneratedContent] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filterSubject, setFilterSubject] = useState('all');\n  const [filterType, setFilterType] = useState('all');\n  const [viewMode, setViewMode] = useState('grid'); // grid, list\n  const [selectedDocuments, setSelectedDocuments] = useState([]);\n  const [showPreview, setShowPreview] = useState(false);\n  const [previewDocument, setPreviewDocument] = useState(null);\n\n  // Templates de documents disponibles\n  const documentTemplates = [\n    {\n      id: 'math-course',\n      name: 'Fiche de Cours - Mathématiques',\n      description: 'Cours structuré avec définitions, théorèmes et exemples',\n      subject: 'maths',\n      type: 'course',\n      icon: Calculator,\n      estimatedTime: '2-3h de travail',\n      difficulty: [2, 3, 4, 5],\n      features: ['Définitions claires', 'Exemples progressifs', 'Schémas explicatifs', 'Points clés']\n    },\n    {\n      id: 'math-exercises',\n      name: 'Série d\\'Exercices - Mathématiques',\n      description: 'Exercices progressifs avec corrections détaillées',\n      subject: 'maths',\n      type: 'exercises',\n      icon: Target,\n      estimatedTime: '1-2h de travail',\n      difficulty: [1, 2, 3, 4, 5],\n      features: ['Progression par difficulté', 'Corrections détaillées', 'Méthodes de résolution', 'Barème']\n    },\n    {\n      id: 'nsi-project',\n      name: 'Projet Guidé - NSI',\n      description: 'Projet Python avec étapes détaillées et code commenté',\n      subject: 'nsi',\n      type: 'project',\n      icon: Code,\n      estimatedTime: '3-5h de travail',\n      difficulty: [3, 4, 5],\n      features: ['Code commenté', 'Tests unitaires', 'Documentation', 'Optimisations']\n    },\n    {\n      id: 'physics-lab',\n      name: 'TP Virtuel - Physique',\n      description: 'Travaux pratiques avec simulations et analyses',\n      subject: 'physique',\n      type: 'lab',\n      icon: Atom,\n      estimatedTime: '2-3h de travail',\n      difficulty: [2, 3, 4],\n      features: ['Simulations interactives', 'Protocole détaillé', 'Analyse des résultats', 'Conclusion']\n    },\n    {\n      id: 'french-analysis',\n      name: 'Analyse Littéraire - Français',\n      description: 'Analyse d\\'œuvre avec plan détaillé et citations',\n      subject: 'français',\n      type: 'analysis',\n      icon: PenTool,\n      estimatedTime: '2-4h de travail',\n      difficulty: [3, 4, 5],\n      features: ['Plan structuré', 'Citations pertinentes', 'Analyse stylistique', 'Contextualisation']\n    },\n    {\n      id: 'quiz-adaptive',\n      name: 'Quiz Adaptatif',\n      description: 'Quiz personnalisé selon votre niveau et vos lacunes',\n      subject: 'all',\n      type: 'quiz',\n      icon: Brain,\n      estimatedTime: '15-30 min',\n      difficulty: [1, 2, 3, 4, 5],\n      features: ['Questions adaptatives', 'Feedback immédiat', 'Analyse des erreurs', 'Recommandations']\n    },\n    {\n      id: 'revision-sheet',\n      name: 'Fiche de Révision',\n      description: 'Résumé synthétique pour révisions rapides',\n      subject: 'all',\n      type: 'summary',\n      icon: BookOpen,\n      estimatedTime: '30-45 min',\n      difficulty: [1, 2, 3, 4],\n      features: ['Synthèse visuelle', 'Points essentiels', 'Mnémotechniques', 'Auto-évaluation']\n    },\n    {\n      id: 'oral-preparation',\n      name: 'Préparation Grand Oral',\n      description: 'Guide complet pour préparer votre présentation',\n      subject: 'français',\n      type: 'oral',\n      icon: Mic,\n      estimatedTime: '1-2h de préparation',\n      difficulty: [4, 5],\n      features: ['Structure de présentation', 'Gestion du stress', 'Questions types', 'Conseils pratiques']\n    }\n  ];\n\n  // Sujets et topics disponibles\n  const subjectTopics = {\n    maths: [\n      'Fonctions exponentielles', 'Fonctions logarithmes', 'Limites', 'Dérivées', \n      'Intégrales', 'Probabilités', 'Statistiques', 'Géométrie dans l\\'espace',\n      'Nombres complexes', 'Suites numériques'\n    ],\n    nsi: [\n      'Algorithmes de tri', 'Structures de données', 'Programmation orientée objet',\n      'Bases de données', 'Réseaux', 'Cryptographie', 'Intelligence artificielle',\n      'Interfaces homme-machine', 'Systèmes d\\'exploitation'\n    ],\n    physique: [\n      'Mécanique', 'Thermodynamique', 'Électricité', 'Magnétisme', 'Optique',\n      'Ondes', 'Physique quantique', 'Relativité', 'Physique nucléaire'\n    ],\n    français: [\n      'Roman', 'Théâtre', 'Poésie', 'Essai', 'Argumentation', 'Stylistique',\n      'Histoire littéraire', 'Genres littéraires', 'Mouvements littéraires'\n    ]\n  };\n\n  const filteredTemplates = documentTemplates.filter(template => {\n    const matchesSubject = generationParams.subject === 'all' || template.subject === generationParams.subject;\n    const matchesType = generationParams.type === 'all' || template.type === generationParams.type;\n    const matchesDifficulty = template.difficulty.includes(generationParams.difficulty);\n    \n    return matchesSubject && matchesType && matchesDifficulty;\n  });\n\n  const filteredDocuments = documents?.filter(doc => {\n    const matchesSearch = doc.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                         doc.subject.toLowerCase().includes(searchQuery.toLowerCase());\n    const matchesSubject = filterSubject === 'all' || doc.subject.toLowerCase().includes(filterSubject);\n    const matchesType = filterType === 'all' || doc.type === filterType;\n    \n    return matchesSearch && matchesSubject && matchesType;\n  }) || [];\n\n  const handleGenerateDocument = async () => {\n    if (!selectedTemplate) {\n      addNotification({\n        type: 'warning',\n        title: 'Sélection requise',\n        message: 'Veuillez sélectionner un template de document'\n      });\n      return;\n    }\n\n    setIsGenerating(true);\n    \n    try {\n      // Simulation de génération avec ARIA\n      await new Promise(resolve => setTimeout(resolve, 3000 + Math.random() * 2000));\n      \n      const generatedDoc = {\n        id: Date.now(),\n        title: `${selectedTemplate.name} - ${new Date().toLocaleDateString()}`,\n        subject: selectedTemplate.subject,\n        type: selectedTemplate.type,\n        content: generateMockContent(selectedTemplate),\n        createdAt: new Date(),\n        estimatedTime: selectedTemplate.estimatedTime,\n        difficulty: generationParams.difficulty,\n        topics: generationParams.topics,\n        personalizedFor: student?.name,\n        ariaGenerated: true,\n        status: 'generated'\n      };\n      \n      setGeneratedContent(generatedDoc);\n      \n      addNotification({\n        type: 'success',\n        title: 'Document généré !',\n        message: `${selectedTemplate.name} a été créé avec succès`\n      });\n      \n      if (onGenerateDocument) {\n        onGenerateDocument(generatedDoc);\n      }\n      \n    } catch (error) {\n      addNotification({\n        type: 'error',\n        title: 'Erreur de génération',\n        message: 'Une erreur est survenue lors de la génération du document'\n      });\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const generateMockContent = (template) => {\n    const contents = {\n      'math-course': `# ${template.name}\n\n## Objectifs d'apprentissage\n- Comprendre les concepts fondamentaux\n- Maîtriser les techniques de calcul\n- Appliquer dans des contextes variés\n\n## I. Définitions et propriétés\n\n### Définition 1\nUne fonction exponentielle est une fonction de la forme f(x) = a^x où a > 0 et a ≠ 1.\n\n**Propriétés importantes :**\n- Domaine de définition : ℝ\n- Ensemble image : ]0, +∞[\n- La fonction est strictement croissante si a > 1\n\n## II. Exemples et applications\n\n### Exemple 1\nSoit f(x) = 2^x. Calculer f(3) et f(-2).\n\n**Solution :**\n- f(3) = 2³ = 8\n- f(-2) = 2^(-2) = 1/4 = 0,25\n\n## III. Exercices d'application\n\n1. Résoudre l'équation 3^x = 27\n2. Étudier les variations de f(x) = (1/2)^x\n3. Tracer la courbe représentative de g(x) = e^x\n\n---\n*Document généré par ARIA selon votre profil d'apprentissage*`,\n\n      'math-exercises': `# Série d'Exercices - Fonctions Exponentielles\n\n## Exercice 1 ⭐ (Niveau débutant)\nCalculer les valeurs suivantes :\na) 2³\nb) 3⁻²\nc) (1/4)²\n\n**Correction :**\na) 2³ = 8\nb) 3⁻² = 1/9\nc) (1/4)² = 1/16\n\n## Exercice 2 ⭐⭐ (Niveau intermédiaire)\nRésoudre les équations :\na) 2^x = 16\nb) 3^(x+1) = 27\nc) (1/2)^x = 8\n\n**Correction :**\na) 2^x = 16 = 2⁴, donc x = 4\nb) 3^(x+1) = 27 = 3³, donc x+1 = 3, x = 2\nc) (1/2)^x = 8 = 2³ = (1/2)⁻³, donc x = -3\n\n## Exercice 3 ⭐⭐⭐ (Niveau avancé)\nÉtudier la fonction f(x) = e^x - x - 1\na) Calculer f'(x)\nb) Étudier le signe de f'(x)\nc) Dresser le tableau de variations\n\n---\n*Exercices adaptés à votre niveau par ARIA*`,\n\n      'nsi-project': `# Projet Python - Algorithmes de Tri\n\n## Objectif\nImplémenter et comparer différents algorithmes de tri.\n\n## Étape 1 : Tri à bulles\n\\`\\`\\`python\ndef tri_bulles(liste):\n    \"\"\"\n    Implémentation du tri à bulles\n    Complexité : O(n²)\n    \"\"\"\n    n = len(liste)\n    for i in range(n):\n        for j in range(0, n - i - 1):\n            if liste[j] > liste[j + 1]:\n                liste[j], liste[j + 1] = liste[j + 1], liste[j]\n    return liste\n\n# Test\ntest_liste = [64, 34, 25, 12, 22, 11, 90]\nprint(\"Liste triée :\", tri_bulles(test_liste.copy()))\n\\`\\`\\`\n\n## Étape 2 : Tri rapide (QuickSort)\n\\`\\`\\`python\ndef tri_rapide(liste):\n    \"\"\"\n    Implémentation du tri rapide\n    Complexité moyenne : O(n log n)\n    \"\"\"\n    if len(liste) <= 1:\n        return liste\n    \n    pivot = liste[len(liste) // 2]\n    gauche = [x for x in liste if x < pivot]\n    milieu = [x for x in liste if x == pivot]\n    droite = [x for x in liste if x > pivot]\n    \n    return tri_rapide(gauche) + milieu + tri_rapide(droite)\n\\`\\`\\`\n\n## Étape 3 : Comparaison des performances\n\\`\\`\\`python\nimport time\nimport random\n\ndef comparer_tris(taille=1000):\n    # Génération d'une liste aléatoire\n    liste_test = [random.randint(1, 1000) for _ in range(taille)]\n    \n    # Test tri à bulles\n    start = time.time()\n    tri_bulles(liste_test.copy())\n    temps_bulles = time.time() - start\n    \n    # Test tri rapide\n    start = time.time()\n    tri_rapide(liste_test.copy())\n    temps_rapide = time.time() - start\n    \n    print(f\"Tri à bulles : {temps_bulles:.4f}s\")\n    print(f\"Tri rapide : {temps_rapide:.4f}s\")\n\ncomparer_tris()\n\\`\\`\\`\n\n---\n*Projet généré par ARIA avec votre niveau de programmation*`\n    };\n    \n    return contents[template.id] || `# ${template.name}\\n\\nContenu généré automatiquement par ARIA selon votre profil d'apprentissage.\\n\\n*Document personnalisé pour ${student?.name}*`;\n  };\n\n  const saveDocument = (document) => {\n    if (onSaveDocument) {\n      onSaveDocument(document);\n    }\n    \n    addNotification({\n      type: 'success',\n      title: 'Document sauvegardé',\n      message: 'Le document a été ajouté à votre bibliothèque'\n    });\n  };\n\n  const previewDoc = (document) => {\n    setPreviewDocument(document);\n    setShowPreview(true);\n  };\n\n  const downloadDocument = (document, format = 'pdf') => {\n    // Simulation de téléchargement\n    addNotification({\n      type: 'info',\n      title: 'Téléchargement en cours',\n      message: `Génération du ${format.toUpperCase()} en cours...`\n    });\n    \n    setTimeout(() => {\n      addNotification({\n        type: 'success',\n        title: 'Téléchargement terminé',\n        message: `${document.title}.${format} a été téléchargé`\n      });\n    }, 2000);\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"nexus-document-generator\">\n      <div className=\"nexus-generator-header\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-10 h-10 bg-blue-100 dark:bg-blue-900/20 rounded-lg flex items-center justify-center\">\n            <Wand2 className=\"w-5 h-5 text-blue-600\" />\n          </div>\n          <div>\n            <h2 className=\"text-xl font-bold\">Générateur de Documents</h2>\n            <p className=\"text-sm text-muted-foreground\">Créez du contenu personnalisé avec ARIA</p>\n          </div>\n        </div>\n        \n        <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n          <X className=\"w-4 h-4\" />\n        </Button>\n      </div>\n\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-3 mb-6\">\n          <TabsTrigger value=\"generator\" className=\"flex items-center space-x-2\">\n            <Wand2 className=\"w-4 h-4\" />\n            <span>Générateur</span>\n          </TabsTrigger>\n          <TabsTrigger value=\"library\" className=\"flex items-center space-x-2\">\n            <BookOpen className=\"w-4 h-4\" />\n            <span>Ma Bibliothèque</span>\n          </TabsTrigger>\n          <TabsTrigger value=\"templates\" className=\"flex items-center space-x-2\">\n            <Layers className=\"w-4 h-4\" />\n            <span>Templates</span>\n          </TabsTrigger>\n        </TabsList>\n\n        {/* Générateur */}\n        <TabsContent value=\"generator\">\n          <div className=\"grid lg:grid-cols-3 gap-6\">\n            {/* Configuration */}\n            <div className=\"lg:col-span-1 space-y-6\">\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Settings className=\"w-5 h-5\" />\n                    <span>Configuration</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <label className=\"nexus-form-label\">Matière</label>\n                    <select \n                      value={generationParams.subject}\n                      onChange={(e) => setGenerationParams(prev => ({ ...prev, subject: e.target.value }))}\n                      className=\"nexus-input w-full\"\n                    >\n                      <option value=\"all\">Toutes matières</option>\n                      <option value=\"maths\">Mathématiques</option>\n                      <option value=\"nsi\">NSI</option>\n                      <option value=\"physique\">Physique</option>\n                      <option value=\"français\">Français</option>\n                    </select>\n                  </div>\n                  \n                  <div>\n                    <label className=\"nexus-form-label\">Type de document</label>\n                    <select \n                      value={generationParams.type}\n                      onChange={(e) => setGenerationParams(prev => ({ ...prev, type: e.target.value }))}\n                      className=\"nexus-input w-full\"\n                    >\n                      <option value=\"course\">Cours</option>\n                      <option value=\"exercises\">Exercices</option>\n                      <option value=\"quiz\">Quiz</option>\n                      <option value=\"summary\">Résumé</option>\n                      <option value=\"project\">Projet</option>\n                      <option value=\"lab\">TP</option>\n                    </select>\n                  </div>\n                  \n                  <div>\n                    <label className=\"nexus-form-label\">Niveau de difficulté</label>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-sm\">Facile</span>\n                      <input\n                        type=\"range\"\n                        min=\"1\"\n                        max=\"5\"\n                        value={generationParams.difficulty}\n                        onChange={(e) => setGenerationParams(prev => ({ ...prev, difficulty: parseInt(e.target.value) }))}\n                        className=\"flex-1\"\n                      />\n                      <span className=\"text-sm\">Difficile</span>\n                    </div>\n                    <div className=\"text-center mt-1\">\n                      <Badge variant=\"outline\">Niveau {generationParams.difficulty}/5</Badge>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <label className=\"nexus-form-label\">Durée de travail estimée</label>\n                    <select \n                      value={generationParams.duration}\n                      onChange={(e) => setGenerationParams(prev => ({ ...prev, duration: parseInt(e.target.value) }))}\n                      className=\"nexus-input w-full\"\n                    >\n                      <option value={15}>15 minutes</option>\n                      <option value={30}>30 minutes</option>\n                      <option value={60}>1 heure</option>\n                      <option value={120}>2 heures</option>\n                      <option value={180}>3 heures</option>\n                    </select>\n                  </div>\n                  \n                  <div>\n                    <label className=\"nexus-form-label\">Style d'apprentissage</label>\n                    <select \n                      value={generationParams.style}\n                      onChange={(e) => setGenerationParams(prev => ({ ...prev, style: e.target.value }))}\n                      className=\"nexus-input w-full\"\n                    >\n                      <option value=\"visual\">Visuel (schémas, graphiques)</option>\n                      <option value=\"auditory\">Auditif (explications détaillées)</option>\n                      <option value=\"kinesthetic\">Kinesthésique (pratique, manipulation)</option>\n                      <option value=\"reading\">Lecture/Écriture (textes, listes)</option>\n                    </select>\n                  </div>\n                  \n                  {generationParams.subject !== 'all' && (\n                    <div>\n                      <label className=\"nexus-form-label\">Sujets spécifiques</label>\n                      <div className=\"space-y-2 max-h-32 overflow-y-auto\">\n                        {subjectTopics[generationParams.subject]?.map((topic, index) => (\n                          <label key={index} className=\"flex items-center space-x-2\">\n                            <input\n                              type=\"checkbox\"\n                              checked={generationParams.topics.includes(topic)}\n                              onChange={(e) => {\n                                if (e.target.checked) {\n                                  setGenerationParams(prev => ({ \n                                    ...prev, \n                                    topics: [...prev.topics, topic] \n                                  }));\n                                } else {\n                                  setGenerationParams(prev => ({ \n                                    ...prev, \n                                    topics: prev.topics.filter(t => t !== topic) \n                                  }));\n                                }\n                              }}\n                              className=\"rounded\"\n                            />\n                            <span className=\"text-sm\">{topic}</span>\n                          </label>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  <div>\n                    <label className=\"nexus-form-label\">Instructions personnalisées</label>\n                    <textarea\n                      value={generationParams.customPrompt}\n                      onChange={(e) => setGenerationParams(prev => ({ ...prev, customPrompt: e.target.value }))}\n                      placeholder=\"Ajoutez des instructions spécifiques pour ARIA...\"\n                      className=\"nexus-input w-full h-20 resize-none\"\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n              \n              {/* Profil d'apprentissage */}\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Brain className=\"w-5 h-5 text-purple-600\" />\n                    <span>Profil ARIA</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span>Style visuel</span>\n                      <span>{student?.learningStyle?.visual || 85}%</span>\n                    </div>\n                    <div className=\"nexus-progress-bar\">\n                      <div \n                        className=\"nexus-progress-fill bg-blue-500\"\n                        style={{ width: `${student?.learningStyle?.visual || 85}%` }}\n                      ></div>\n                    </div>\n                    \n                    <div className=\"p-3 rounded-lg bg-purple-50 dark:bg-purple-900/20\">\n                      <p className=\"text-sm text-purple-700 dark:text-purple-300\">\n                        ARIA adaptera le contenu à votre style d'apprentissage dominant et à votre niveau actuel.\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n            \n            {/* Templates et génération */}\n            <div className=\"lg:col-span-2 space-y-6\">\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle>Templates Disponibles</CardTitle>\n                  <CardDescription>\n                    Sélectionnez un template adapté à vos besoins\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    {filteredTemplates.map((template) => (\n                      <div\n                        key={template.id}\n                        className={`nexus-template-card ${selectedTemplate?.id === template.id ? 'selected' : ''}`}\n                        onClick={() => setSelectedTemplate(template)}\n                      >\n                        <div className=\"flex items-start space-x-3\">\n                          <div className=\"w-12 h-12 bg-blue-100 dark:bg-blue-900/20 rounded-lg flex items-center justify-center\">\n                            <template.icon className=\"w-6 h-6 text-blue-600\" />\n                          </div>\n                          <div className=\"flex-1\">\n                            <h4 className=\"font-semibold\">{template.name}</h4>\n                            <p className=\"text-sm text-muted-foreground mb-2\">{template.description}</p>\n                            <div className=\"flex items-center space-x-2 mb-2\">\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                {template.subject}\n                              </Badge>\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                {template.estimatedTime}\n                              </Badge>\n                            </div>\n                            <div className=\"flex flex-wrap gap-1\">\n                              {template.features.slice(0, 2).map((feature, index) => (\n                                <span key={index} className=\"text-xs text-muted-foreground bg-muted px-2 py-1 rounded\">\n                                  {feature}\n                                </span>\n                              ))}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  \n                  {filteredTemplates.length === 0 && (\n                    <div className=\"text-center py-8\">\n                      <FileText className=\"w-12 h-12 text-muted-foreground mx-auto mb-3\" />\n                      <p className=\"text-muted-foreground\">Aucun template ne correspond à vos critères</p>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n              \n              {/* Génération */}\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center justify-between\">\n                    <span>Génération avec ARIA</span>\n                    {selectedTemplate && (\n                      <Badge className=\"nexus-badge-info\">\n                        {selectedTemplate.name}\n                      </Badge>\n                    )}\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {!selectedTemplate ? (\n                    <div className=\"text-center py-8\">\n                      <Wand2 className=\"w-12 h-12 text-muted-foreground mx-auto mb-3\" />\n                      <p className=\"text-muted-foreground\">Sélectionnez un template pour commencer</p>\n                    </div>\n                  ) : (\n                    <div className=\"space-y-4\">\n                      <div className=\"p-4 rounded-lg bg-blue-50 dark:bg-blue-900/20\">\n                        <div className=\"flex items-start space-x-3\">\n                          <Brain className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n                          <div>\n                            <h4 className=\"font-medium text-blue-900 dark:text-blue-100\">\n                              ARIA va générer : {selectedTemplate.name}\n                            </h4>\n                            <p className=\"text-sm text-blue-700 dark:text-blue-300 mt-1\">\n                              Adapté à votre niveau {generationParams.difficulty}/5 et votre style d'apprentissage {generationParams.style}\n                            </p>\n                            {generationParams.topics.length > 0 && (\n                              <div className=\"mt-2\">\n                                <p className=\"text-sm text-blue-700 dark:text-blue-300\">Sujets inclus :</p>\n                                <div className=\"flex flex-wrap gap-1 mt-1\">\n                                  {generationParams.topics.map((topic, index) => (\n                                    <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                                      {topic}\n                                    </Badge>\n                                  ))}\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <Button\n                        onClick={handleGenerateDocument}\n                        disabled={isGenerating}\n                        className=\"w-full nexus-button-primary\"\n                        size=\"lg\"\n                      >\n                        {isGenerating ? (\n                          <>\n                            <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\n                            ARIA génère votre document...\n                          </>\n                        ) : (\n                          <>\n                            <Sparkles className=\"w-4 h-4 mr-2\" />\n                            Générer avec ARIA\n                          </>\n                        )}\n                      </Button>\n                      \n                      {isGenerating && (\n                        <div className=\"space-y-2\">\n                          <div className=\"flex justify-between text-sm\">\n                            <span>Progression</span>\n                            <span>Génération en cours...</span>\n                          </div>\n                          <Progress value={75} className=\"w-full\" />\n                          <p className=\"text-xs text-muted-foreground text-center\">\n                            ARIA analyse votre profil et adapte le contenu...\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n              \n              {/* Document généré */}\n              {generatedContent && (\n                <Card className=\"nexus-card\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-2\">\n                        <CheckCircle className=\"w-5 h-5 text-green-600\" />\n                        <span>Document Généré</span>\n                      </div>\n                      <Badge className=\"nexus-badge-success\">Nouveau</Badge>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-start space-x-4\">\n                        <div className=\"w-12 h-12 bg-green-100 dark:bg-green-900/20 rounded-lg flex items-center justify-center\">\n                          <FileText className=\"w-6 h-6 text-green-600\" />\n                        </div>\n                        <div className=\"flex-1\">\n                          <h4 className=\"font-semibold\">{generatedContent.title}</h4>\n                          <p className=\"text-sm text-muted-foreground\">{generatedContent.subject}</p>\n                          <div className=\"flex items-center space-x-2 mt-2\">\n                            <Badge variant=\"outline\">Niveau {generatedContent.difficulty}/5</Badge>\n                            <Badge variant=\"outline\">{generatedContent.estimatedTime}</Badge>\n                            <Badge className=\"nexus-badge-info\">ARIA</Badge>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex space-x-2\">\n                        <Button\n                          onClick={() => previewDoc(generatedContent)}\n                          variant=\"outline\"\n                          className=\"flex-1\"\n                        >\n                          <Eye className=\"w-4 h-4 mr-2\" />\n                          Aperçu\n                        </Button>\n                        <Button\n                          onClick={() => saveDocument(generatedContent)}\n                          variant=\"outline\"\n                          className=\"flex-1\"\n                        >\n                          <Save className=\"w-4 h-4 mr-2\" />\n                          Sauvegarder\n                        </Button>\n                        <Button\n                          onClick={() => downloadDocument(generatedContent)}\n                          variant=\"outline\"\n                          className=\"flex-1\"\n                        >\n                          <Download className=\"w-4 h-4 mr-2\" />\n                          Télécharger\n                        </Button>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n          </div>\n        </TabsContent>\n\n        {/* Bibliothèque */}\n        <TabsContent value=\"library\">\n          <div className=\"space-y-6\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n              <div>\n                <h3 className=\"text-lg font-semibold\">Ma Bibliothèque</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  {filteredDocuments.length} document{filteredDocuments.length > 1 ? 's' : ''} trouvé{filteredDocuments.length > 1 ? 's' : ''}\n                </p>\n              </div>\n              \n              <div className=\"flex items-center space-x-2\">\n                <div className=\"relative\">\n                  <Search className=\"w-4 h-4 absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Rechercher...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"nexus-input pl-10\"\n                  />\n                </div>\n                \n                <select\n                  value={filterSubject}\n                  onChange={(e) => setFilterSubject(e.target.value)}\n                  className=\"nexus-input\"\n                >\n                  <option value=\"all\">Toutes matières</option>\n                  <option value=\"maths\">Mathématiques</option>\n                  <option value=\"nsi\">NSI</option>\n                  <option value=\"physique\">Physique</option>\n                  <option value=\"français\">Français</option>\n                </select>\n                \n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setViewMode(viewMode === 'grid' ? 'list' : 'grid')}\n                >\n                  {viewMode === 'grid' ? <List className=\"w-4 h-4\" /> : <Grid className=\"w-4 h-4\" />}\n                </Button>\n              </div>\n            </div>\n            \n            {filteredDocuments.length === 0 ? (\n              <div className=\"text-center py-12\">\n                <BookOpen className=\"w-16 h-16 text-muted-foreground mx-auto mb-4\" />\n                <h3 className=\"text-lg font-semibold mb-2\">Aucun document trouvé</h3>\n                <p className=\"text-muted-foreground mb-4\">\n                  Commencez par générer votre premier document avec ARIA\n                </p>\n                <Button onClick={() => setActiveTab('generator')}>\n                  <Plus className=\"w-4 h-4 mr-2\" />\n                  Créer un document\n                </Button>\n              </div>\n            ) : (\n              <div className={viewMode === 'grid' ? 'grid md:grid-cols-2 lg:grid-cols-3 gap-4' : 'space-y-4'}>\n                {filteredDocuments.map((doc) => (\n                  <Card key={doc.id} className=\"nexus-card hover:shadow-lg transition-shadow\">\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-start justify-between mb-3\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className=\"w-10 h-10 bg-blue-100 dark:bg-blue-900/20 rounded-lg flex items-center justify-center\">\n                            <FileText className=\"w-5 h-5 text-blue-600\" />\n                          </div>\n                          <div>\n                            <h4 className=\"font-semibold line-clamp-1\">{doc.title}</h4>\n                            <p className=\"text-sm text-muted-foreground\">{doc.subject}</p>\n                          </div>\n                        </div>\n                        \n                        <Button variant=\"ghost\" size=\"sm\">\n                          <MoreHorizontal className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n                      \n                      <div className=\"flex items-center space-x-2 mb-3\">\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {doc.type}\n                        </Badge>\n                        {doc.ariaGenerated && (\n                          <Badge className=\"nexus-badge-info text-xs\">ARIA</Badge>\n                        )}\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          Niveau {doc.difficulty}/5\n                        </Badge>\n                      </div>\n                      \n                      <div className=\"flex items-center justify-between text-sm text-muted-foreground mb-4\">\n                        <span>{doc.estimatedTime}</span>\n                        <span>{new Date(doc.createdAt).toLocaleDateString()}</span>\n                      </div>\n                      \n                      <div className=\"flex space-x-2\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => previewDoc(doc)}\n                          className=\"flex-1\"\n                        >\n                          <Eye className=\"w-3 h-3 mr-1\" />\n                          Voir\n                        </Button>\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => downloadDocument(doc)}\n                        >\n                          <Download className=\"w-3 h-3\" />\n                        </Button>\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                        >\n                          <Share2 className=\"w-3 h-3\" />\n                        </Button>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            )}\n          </div>\n        </TabsContent>\n\n        {/* Templates */}\n        <TabsContent value=\"templates\">\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold mb-2\">Templates Disponibles</h3>\n              <p className=\"text-sm text-muted-foreground\">\n                Découvrez tous les types de documents que ARIA peut générer pour vous\n              </p>\n            </div>\n            \n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {documentTemplates.map((template) => (\n                <Card key={template.id} className=\"nexus-card hover:shadow-lg transition-shadow\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center space-x-3 mb-4\">\n                      <div className=\"w-12 h-12 bg-blue-100 dark:bg-blue-900/20 rounded-lg flex items-center justify-center\">\n                        <template.icon className=\"w-6 h-6 text-blue-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-semibold\">{template.name}</h4>\n                        <Badge variant=\"outline\" className=\"text-xs mt-1\">\n                          {template.subject}\n                        </Badge>\n                      </div>\n                    </div>\n                    \n                    <p className=\"text-sm text-muted-foreground mb-4\">\n                      {template.description}\n                    </p>\n                    \n                    <div className=\"space-y-3\">\n                      <div className=\"flex items-center justify-between text-sm\">\n                        <span className=\"text-muted-foreground\">Durée estimée</span>\n                        <span className=\"font-medium\">{template.estimatedTime}</span>\n                      </div>\n                      \n                      <div className=\"flex items-center justify-between text-sm\">\n                        <span className=\"text-muted-foreground\">Niveaux</span>\n                        <div className=\"flex space-x-1\">\n                          {template.difficulty.map((level) => (\n                            <Badge key={level} variant=\"outline\" className=\"text-xs\">\n                              {level}\n                            </Badge>\n                          ))}\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <p className=\"text-sm text-muted-foreground mb-2\">Fonctionnalités :</p>\n                        <div className=\"flex flex-wrap gap-1\">\n                          {template.features.map((feature, index) => (\n                            <span key={index} className=\"text-xs bg-muted px-2 py-1 rounded\">\n                              {feature}\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <Button\n                      className=\"w-full mt-4\"\n                      onClick={() => {\n                        setSelectedTemplate(template);\n                        setActiveTab('generator');\n                      }}\n                    >\n                      <Wand2 className=\"w-4 h-4 mr-2\" />\n                      Utiliser ce template\n                    </Button>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </TabsContent>\n      </Tabs>\n\n      {/* Modal de prévisualisation */}\n      {showPreview && previewDocument && (\n        <div className=\"nexus-modal-overlay\">\n          <div className=\"nexus-modal max-w-4xl max-h-[90vh] overflow-hidden\">\n            <div className=\"flex items-center justify-between p-4 border-b\">\n              <div>\n                <h3 className=\"text-lg font-semibold\">{previewDocument.title}</h3>\n                <p className=\"text-sm text-muted-foreground\">{previewDocument.subject}</p>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => downloadDocument(previewDocument)}\n                >\n                  <Download className=\"w-4 h-4 mr-2\" />\n                  Télécharger\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setShowPreview(false)}\n                >\n                  <X className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n            \n            <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-120px)]\">\n              <div className=\"prose prose-sm max-w-none\">\n                <pre className=\"whitespace-pre-wrap font-sans\">\n                  {previewDocument.content}\n                </pre>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DocumentGenerator;\n\n","import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Badge } from './ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';\n\nconst ContentLibrary = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedSubject, setSelectedSubject] = useState('all');\n  const [selectedType, setSelectedType] = useState('all');\n  const [selectedLevel, setSelectedLevel] = useState('all');\n  const [content, setContent] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Données de démonstration pour la bibliothèque de contenu\n  const demoContent = [\n    {\n      id: 1,\n      title: \"Les fonctions exponentielles\",\n      subject: \"Mathématiques\",\n      type: \"Fiche de révision\",\n      level: \"Terminale\",\n      description: \"Propriétés, dérivées et applications des fonctions exponentielles\",\n      tags: [\"analyse\", \"dérivation\", \"bac\"],\n      difficulty: \"medium\",\n      duration: \"30 min\",\n      lastUpdated: \"2024-01-15\",\n      downloads: 245,\n      rating: 4.8,\n      preview: \"Définition : La fonction exponentielle est l'unique fonction f définie sur ℝ telle que f'(x) = f(x) et f(0) = 1...\"\n    },\n    {\n      id: 2,\n      title: \"Algorithmes de tri en Python\",\n      subject: \"NSI\",\n      type: \"Cours interactif\",\n      level: \"Terminale\",\n      description: \"Implémentation et analyse des algorithmes de tri classiques\",\n      tags: [\"algorithmes\", \"python\", \"complexité\"],\n      difficulty: \"hard\",\n      duration: \"45 min\",\n      lastUpdated: \"2024-01-20\",\n      downloads: 189,\n      rating: 4.9,\n      preview: \"# Tri par insertion\\ndef tri_insertion(liste):\\n    for i in range(1, len(liste)):\\n        cle = liste[i]...\"\n    },\n    {\n      id: 3,\n      title: \"La mécanique quantique\",\n      subject: \"Physique-Chimie\",\n      type: \"Exercices corrigés\",\n      level: \"Terminale\",\n      description: \"Série d'exercices sur les concepts de base de la mécanique quantique\",\n      tags: [\"quantique\", \"ondes\", \"particules\"],\n      difficulty: \"hard\",\n      duration: \"60 min\",\n      lastUpdated: \"2024-01-18\",\n      downloads: 156,\n      rating: 4.6,\n      preview: \"Exercice 1 : Un électron est confiné dans une boîte unidimensionnelle de longueur L...\"\n    },\n    {\n      id: 4,\n      title: \"L'argumentation au théâtre\",\n      subject: \"Français\",\n      type: \"Méthode\",\n      level: \"Première\",\n      description: \"Techniques d'analyse de l'argumentation dans les textes théâtraux\",\n      tags: [\"théâtre\", \"argumentation\", \"analyse\"],\n      difficulty: \"medium\",\n      duration: \"25 min\",\n      lastUpdated: \"2024-01-22\",\n      downloads: 203,\n      rating: 4.7,\n      preview: \"L'argumentation au théâtre se manifeste à travers plusieurs procédés : les tirades, les dialogues argumentatifs...\"\n    },\n    {\n      id: 5,\n      title: \"Les suites numériques\",\n      subject: \"Mathématiques\",\n      type: \"Quiz interactif\",\n      level: \"Terminale\",\n      description: \"Quiz adaptatif sur les suites arithmétiques et géométriques\",\n      tags: [\"suites\", \"récurrence\", \"limites\"],\n      difficulty: \"medium\",\n      duration: \"20 min\",\n      lastUpdated: \"2024-01-25\",\n      downloads: 312,\n      rating: 4.5,\n      preview: \"Question 1 : Soit (un) une suite arithmétique de premier terme u0 = 3 et de raison r = 2...\"\n    },\n    {\n      id: 6,\n      title: \"Structures de données avancées\",\n      subject: \"NSI\",\n      type: \"Projet guidé\",\n      level: \"Terminale\",\n      description: \"Implémentation d'arbres binaires et de tables de hachage\",\n      tags: [\"structures\", \"arbres\", \"hachage\"],\n      difficulty: \"hard\",\n      duration: \"90 min\",\n      lastUpdated: \"2024-01-23\",\n      downloads: 98,\n      rating: 4.8,\n      preview: \"Projet : Créer une classe ArbreBinaire avec les méthodes d'insertion, de recherche et de parcours...\"\n    }\n  ];\n\n  const subjects = [\"Mathématiques\", \"NSI\", \"Physique-Chimie\", \"Français\", \"Philosophie\"];\n  const types = [\"Fiche de révision\", \"Cours interactif\", \"Exercices corrigés\", \"Méthode\", \"Quiz interactif\", \"Projet guidé\"];\n  const levels = [\"Seconde\", \"Première\", \"Terminale\"];\n\n  useEffect(() => {\n    setContent(demoContent);\n  }, []);\n\n  const filteredContent = content.filter(item => {\n    const matchesSearch = item.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         item.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         item.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));\n    \n    const matchesSubject = selectedSubject === 'all' || item.subject === selectedSubject;\n    const matchesType = selectedType === 'all' || item.type === selectedType;\n    const matchesLevel = selectedLevel === 'all' || item.level === selectedLevel;\n\n    return matchesSearch && matchesSubject && matchesType && matchesLevel;\n  });\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty) {\n      case 'easy': return 'bg-green-100 text-green-800';\n      case 'medium': return 'bg-yellow-100 text-yellow-800';\n      case 'hard': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getDifficultyLabel = (difficulty) => {\n    switch (difficulty) {\n      case 'easy': return 'Facile';\n      case 'medium': return 'Moyen';\n      case 'hard': return 'Difficile';\n      default: return 'Non défini';\n    }\n  };\n\n  const handleDownload = async (contentId) => {\n    setLoading(true);\n    try {\n      // Simulation d'un téléchargement\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Ici, on ferait appel à l'API pour générer et télécharger le document\n      console.log(`Téléchargement du contenu ${contentId}`);\n      \n      // Mise à jour du compteur de téléchargements\n      setContent(prev => prev.map(item => \n        item.id === contentId \n          ? { ...item, downloads: item.downloads + 1 }\n          : item\n      ));\n    } catch (error) {\n      console.error('Erreur lors du téléchargement:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePreview = (contentId) => {\n    const item = content.find(c => c.id === contentId);\n    if (item) {\n      // Ouvrir une modal de prévisualisation\n      console.log('Prévisualisation:', item);\n    }\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6\">\n      {/* En-tête */}\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n          📚 Bibliothèque de Contenu\n        </h1>\n        <p className=\"text-gray-600\">\n          Accédez à une vaste collection de ressources pédagogiques personnalisées par ARIA\n        </p>\n      </div>\n\n      {/* Barre de recherche et filtres */}\n      <div className=\"bg-white rounded-lg shadow-sm border p-6 mb-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\n          {/* Recherche */}\n          <div className=\"lg:col-span-2\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              🔍 Rechercher\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Titre, description, tags...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n\n          {/* Filtre par matière */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              📖 Matière\n            </label>\n            <select\n              value={selectedSubject}\n              onChange={(e) => setSelectedSubject(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"all\">Toutes</option>\n              {subjects.map(subject => (\n                <option key={subject} value={subject}>{subject}</option>\n              ))}\n            </select>\n          </div>\n\n          {/* Filtre par type */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              📄 Type\n            </label>\n            <select\n              value={selectedType}\n              onChange={(e) => setSelectedType(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"all\">Tous</option>\n              {types.map(type => (\n                <option key={type} value={type}>{type}</option>\n              ))}\n            </select>\n          </div>\n\n          {/* Filtre par niveau */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              🎓 Niveau\n            </label>\n            <select\n              value={selectedLevel}\n              onChange={(e) => setSelectedLevel(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"all\">Tous</option>\n              {levels.map(level => (\n                <option key={level} value={level}>{level}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        {/* Statistiques de recherche */}\n        <div className=\"mt-4 flex items-center justify-between text-sm text-gray-600\">\n          <span>\n            {filteredContent.length} ressource{filteredContent.length !== 1 ? 's' : ''} trouvée{filteredContent.length !== 1 ? 's' : ''}\n          </span>\n          <div className=\"flex items-center space-x-4\">\n            <span>📊 {content.reduce((sum, item) => sum + item.downloads, 0)} téléchargements total</span>\n            <span>⭐ Note moyenne: 4.7/5</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Onglets de catégories */}\n      <Tabs defaultValue=\"all\" className=\"mb-6\">\n        <TabsList className=\"grid w-full grid-cols-6\">\n          <TabsTrigger value=\"all\">Tout</TabsTrigger>\n          <TabsTrigger value=\"recent\">Récent</TabsTrigger>\n          <TabsTrigger value=\"popular\">Populaire</TabsTrigger>\n          <TabsTrigger value=\"recommended\">Recommandé</TabsTrigger>\n          <TabsTrigger value=\"favorites\">Favoris</TabsTrigger>\n          <TabsTrigger value=\"downloaded\">Téléchargés</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"all\" className=\"mt-6\">\n          {/* Grille de contenu */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {filteredContent.map((item) => (\n              <Card key={item.id} className=\"hover:shadow-lg transition-shadow duration-200\">\n                <CardHeader className=\"pb-3\">\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1\">\n                      <CardTitle className=\"text-lg font-semibold text-gray-900 mb-2\">\n                        {item.title}\n                      </CardTitle>\n                      <div className=\"flex items-center space-x-2 mb-2\">\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {item.subject}\n                        </Badge>\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {item.level}\n                        </Badge>\n                        <Badge className={`text-xs ${getDifficultyColor(item.difficulty)}`}>\n                          {getDifficultyLabel(item.difficulty)}\n                        </Badge>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center text-yellow-500\">\n                      <span className=\"text-sm\">⭐ {item.rating}</span>\n                    </div>\n                  </div>\n                </CardHeader>\n\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    {/* Type et durée */}\n                    <div className=\"flex items-center justify-between text-sm text-gray-600\">\n                      <span className=\"flex items-center\">\n                        📄 {item.type}\n                      </span>\n                      <span className=\"flex items-center\">\n                        ⏱️ {item.duration}\n                      </span>\n                    </div>\n\n                    {/* Description */}\n                    <p className=\"text-sm text-gray-700 line-clamp-2\">\n                      {item.description}\n                    </p>\n\n                    {/* Aperçu du contenu */}\n                    <div className=\"bg-gray-50 rounded-md p-3\">\n                      <p className=\"text-xs text-gray-600 font-mono line-clamp-3\">\n                        {item.preview}\n                      </p>\n                    </div>\n\n                    {/* Tags */}\n                    <div className=\"flex flex-wrap gap-1\">\n                      {item.tags.map((tag, index) => (\n                        <span\n                          key={index}\n                          className=\"inline-block bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full\"\n                        >\n                          #{tag}\n                        </span>\n                      ))}\n                    </div>\n\n                    {/* Statistiques */}\n                    <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                      <span>📥 {item.downloads} téléchargements</span>\n                      <span>🗓️ {new Date(item.lastUpdated).toLocaleDateString('fr-FR')}</span>\n                    </div>\n\n                    {/* Actions */}\n                    <div className=\"flex space-x-2 pt-2\">\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => handlePreview(item.id)}\n                        className=\"flex-1\"\n                      >\n                        👁️ Aperçu\n                      </Button>\n                      <Button\n                        size=\"sm\"\n                        onClick={() => handleDownload(item.id)}\n                        disabled={loading}\n                        className=\"flex-1 bg-blue-600 hover:bg-blue-700\"\n                      >\n                        {loading ? '⏳' : '📥'} Télécharger\n                      </Button>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {/* Message si aucun résultat */}\n          {filteredContent.length === 0 && (\n            <div className=\"text-center py-12\">\n              <div className=\"text-6xl mb-4\">🔍</div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                Aucune ressource trouvée\n              </h3>\n              <p className=\"text-gray-600 mb-4\">\n                Essayez de modifier vos critères de recherche ou vos filtres\n              </p>\n              <Button\n                onClick={() => {\n                  setSearchTerm('');\n                  setSelectedSubject('all');\n                  setSelectedType('all');\n                  setSelectedLevel('all');\n                }}\n                variant=\"outline\"\n              >\n                🔄 Réinitialiser les filtres\n              </Button>\n            </div>\n          )}\n        </TabsContent>\n\n        {/* Autres onglets avec contenu filtré */}\n        <TabsContent value=\"recent\" className=\"mt-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {filteredContent\n              .sort((a, b) => new Date(b.lastUpdated) - new Date(a.lastUpdated))\n              .slice(0, 6)\n              .map((item) => (\n                <Card key={item.id} className=\"hover:shadow-lg transition-shadow duration-200\">\n                  <CardHeader>\n                    <CardTitle className=\"text-lg\">{item.title}</CardTitle>\n                    <div className=\"flex items-center space-x-2\">\n                      <Badge variant=\"outline\">{item.subject}</Badge>\n                      <Badge className=\"bg-green-100 text-green-800\">Nouveau</Badge>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-sm text-gray-600 mb-4\">{item.description}</p>\n                    <div className=\"flex space-x-2\">\n                      <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">\n                        👁️ Aperçu\n                      </Button>\n                      <Button size=\"sm\" className=\"flex-1\">\n                        📥 Télécharger\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"popular\" className=\"mt-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {filteredContent\n              .sort((a, b) => b.downloads - a.downloads)\n              .slice(0, 6)\n              .map((item) => (\n                <Card key={item.id} className=\"hover:shadow-lg transition-shadow duration-200\">\n                  <CardHeader>\n                    <CardTitle className=\"text-lg\">{item.title}</CardTitle>\n                    <div className=\"flex items-center space-x-2\">\n                      <Badge variant=\"outline\">{item.subject}</Badge>\n                      <Badge className=\"bg-orange-100 text-orange-800\">🔥 Populaire</Badge>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-sm text-gray-600 mb-4\">{item.description}</p>\n                    <div className=\"flex items-center justify-between text-sm text-gray-500 mb-4\">\n                      <span>📥 {item.downloads} téléchargements</span>\n                      <span>⭐ {item.rating}/5</span>\n                    </div>\n                    <div className=\"flex space-x-2\">\n                      <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">\n                        👁️ Aperçu\n                      </Button>\n                      <Button size=\"sm\" className=\"flex-1\">\n                        📥 Télécharger\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"recommended\" className=\"mt-6\">\n          <div className=\"bg-blue-50 rounded-lg p-6 mb-6\">\n            <h3 className=\"text-lg font-semibold text-blue-900 mb-2\">\n              🎯 Recommandations personnalisées par ARIA\n            </h3>\n            <p className=\"text-blue-700\">\n              Basées sur votre profil d'apprentissage et vos récentes activités\n            </p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {filteredContent\n              .filter(item => item.rating >= 4.7)\n              .slice(0, 6)\n              .map((item) => (\n                <Card key={item.id} className=\"hover:shadow-lg transition-shadow duration-200 border-blue-200\">\n                  <CardHeader>\n                    <CardTitle className=\"text-lg\">{item.title}</CardTitle>\n                    <div className=\"flex items-center space-x-2\">\n                      <Badge variant=\"outline\">{item.subject}</Badge>\n                      <Badge className=\"bg-blue-100 text-blue-800\">🎯 Recommandé</Badge>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-sm text-gray-600 mb-4\">{item.description}</p>\n                    <div className=\"bg-blue-50 rounded-md p-2 mb-4\">\n                      <p className=\"text-xs text-blue-700\">\n                        💡 ARIA recommande cette ressource car elle correspond à votre style d'apprentissage visuel\n                      </p>\n                    </div>\n                    <div className=\"flex space-x-2\">\n                      <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">\n                        👁️ Aperçu\n                      </Button>\n                      <Button size=\"sm\" className=\"flex-1 bg-blue-600 hover:bg-blue-700\">\n                        📥 Télécharger\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"favorites\" className=\"mt-6\">\n          <div className=\"text-center py-12\">\n            <div className=\"text-6xl mb-4\">❤️</div>\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n              Vos ressources favorites\n            </h3>\n            <p className=\"text-gray-600 mb-4\">\n              Ajoutez des ressources à vos favoris en cliquant sur le cœur\n            </p>\n            <Button variant=\"outline\">\n              🔍 Parcourir la bibliothèque\n            </Button>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"downloaded\" className=\"mt-6\">\n          <div className=\"text-center py-12\">\n            <div className=\"text-6xl mb-4\">📥</div>\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n              Vos téléchargements\n            </h3>\n            <p className=\"text-gray-600 mb-4\">\n              Retrouvez ici toutes les ressources que vous avez téléchargées\n            </p>\n            <Button variant=\"outline\">\n              📚 Voir l'historique\n            </Button>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default ContentLibrary;\n\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card.jsx'\nimport { Button } from '@/components/ui/button.jsx'\nimport { Badge } from '@/components/ui/badge.jsx'\nimport { \n  Video, \n  VideoOff, \n  Mic, \n  MicOff, \n  Phone, \n  PhoneOff,\n  Monitor,\n  MonitorOff,\n  Users,\n  MessageSquare,\n  Settings,\n  Volume2,\n  VolumeX,\n  Camera,\n  CameraOff,\n  Maximize,\n  Minimize,\n  MoreHorizontal,\n  Copy,\n  ExternalLink,\n  Clock,\n  Calendar,\n  User,\n  Shield,\n  Wifi,\n  WifiOff,\n  AlertTriangle,\n  CheckCircle,\n  Info,\n  X,\n  Plus,\n  Minus,\n  RotateCcw,\n  Download,\n  Upload,\n  Share2,\n  FileText,\n  Image,\n  Paperclip,\n  Send,\n  Smile,\n  ThumbsUp,\n  Heart,\n  Zap,\n  Star,\n  Award,\n  Target,\n  BookOpen,\n  Brain,\n  Lightbulb,\n  PenTool,\n  Calculator,\n  Code,\n  Atom,\n  Globe,\n  Lock,\n  Unlock,\n  Eye,\n  EyeOff,\n  Headphones,\n  Speaker,\n  Keyboard,\n  Mouse,\n  Gamepad2\n} from 'lucide-react'\n\nconst VideoConference = ({ \n  session, \n  student, \n  teacher, \n  onJoinSession, \n  onLeaveSession, \n  onSendMessage,\n  onShareScreen,\n  onRecordSession,\n  isVisible,\n  onClose \n}) => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [isVideoEnabled, setIsVideoEnabled] = useState(true);\n  const [isAudioEnabled, setIsAudioEnabled] = useState(true);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [connectionQuality, setConnectionQuality] = useState('excellent'); // excellent, good, poor\n  const [participants, setParticipants] = useState([]);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [sessionDuration, setSessionDuration] = useState(0);\n  const [isWaitingRoom, setIsWaitingRoom] = useState(false);\n  const [sharedDocuments, setSharedDocuments] = useState([]);\n  const [whiteboardActive, setWhiteboardActive] = useState(false);\n\n  const videoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const chatRef = useRef(null);\n  const sessionStartTime = useRef(null);\n\n  // Données de démonstration\n  const demoSession = {\n    id: 'session-001',\n    title: 'Cours de Mathématiques - Fonctions Exponentielles',\n    teacher: {\n      id: 'dubois',\n      name: 'M. Dubois',\n      avatar: 'MD',\n      subject: 'Mathématiques'\n    },\n    student: {\n      id: 'sarah-2025',\n      name: 'Sarah Benali',\n      avatar: 'SB'\n    },\n    scheduledTime: '2025-07-23T14:00:00Z',\n    duration: 60, // minutes\n    type: 'individual', // individual, group\n    status: 'active', // scheduled, active, completed\n    meetingId: 'nexus-math-001',\n    meetingPassword: 'NX2025',\n    recordingEnabled: true,\n    whiteboardEnabled: true,\n    screenShareEnabled: true,\n    chatEnabled: true\n  };\n\n  const demoChatMessages = [\n    {\n      id: 'msg-001',\n      sender: 'teacher',\n      senderName: 'M. Dubois',\n      message: 'Bonjour Sarah ! Êtes-vous prête pour notre session sur les fonctions exponentielles ?',\n      timestamp: new Date(Date.now() - 5 * 60 * 1000).toISOString(),\n      type: 'text'\n    },\n    {\n      id: 'msg-002',\n      sender: 'student',\n      senderName: 'Sarah',\n      message: 'Bonjour M. Dubois ! Oui, j\\'ai préparé mes questions sur les dérivées.',\n      timestamp: new Date(Date.now() - 4 * 60 * 1000).toISOString(),\n      type: 'text'\n    },\n    {\n      id: 'msg-003',\n      sender: 'teacher',\n      senderName: 'M. Dubois',\n      message: 'Parfait ! Je vais partager mon écran pour vous montrer quelques exemples.',\n      timestamp: new Date(Date.now() - 3 * 60 * 1000).toISOString(),\n      type: 'text'\n    },\n    {\n      id: 'msg-004',\n      sender: 'system',\n      senderName: 'Système',\n      message: 'M. Dubois a partagé son écran',\n      timestamp: new Date(Date.now() - 2 * 60 * 1000).toISOString(),\n      type: 'system'\n    },\n    {\n      id: 'msg-005',\n      sender: 'student',\n      senderName: 'Sarah',\n      message: 'Je vois parfaitement ! Merci pour ces explications claires.',\n      timestamp: new Date(Date.now() - 1 * 60 * 1000).toISOString(),\n      type: 'text'\n    }\n  ];\n\n  const demoSharedDocuments = [\n    {\n      id: 'doc-001',\n      name: 'Fonctions Exponentielles - Cours.pdf',\n      type: 'pdf',\n      size: '2.3 MB',\n      sharedBy: 'M. Dubois',\n      timestamp: new Date(Date.now() - 10 * 60 * 1000).toISOString()\n    },\n    {\n      id: 'doc-002',\n      name: 'Exercices - Dérivées.pdf',\n      type: 'pdf',\n      size: '1.8 MB',\n      sharedBy: 'M. Dubois',\n      timestamp: new Date(Date.now() - 8 * 60 * 1000).toISOString()\n    },\n    {\n      id: 'doc-003',\n      name: 'Graphique_fonction_exp.png',\n      type: 'image',\n      size: '456 KB',\n      sharedBy: 'Sarah',\n      timestamp: new Date(Date.now() - 5 * 60 * 1000).toISOString()\n    }\n  ];\n\n  // Simulation de la connexion\n  useEffect(() => {\n    if (isVisible && !isConnected) {\n      // Simulation de la salle d'attente\n      setIsWaitingRoom(true);\n      setTimeout(() => {\n        setIsWaitingRoom(false);\n        setIsConnected(true);\n        sessionStartTime.current = Date.now();\n        setParticipants([demoSession.teacher, demoSession.student]);\n        setChatMessages(demoChatMessages);\n        setSharedDocuments(demoSharedDocuments);\n      }, 3000);\n    }\n  }, [isVisible, isConnected]);\n\n  // Timer de session\n  useEffect(() => {\n    let interval;\n    if (isConnected && sessionStartTime.current) {\n      interval = setInterval(() => {\n        setSessionDuration(Math.floor((Date.now() - sessionStartTime.current) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isConnected]);\n\n  // Simulation de la qualité de connexion\n  useEffect(() => {\n    if (isConnected) {\n      const interval = setInterval(() => {\n        const qualities = ['excellent', 'good', 'poor'];\n        const weights = [0.7, 0.25, 0.05]; // 70% excellent, 25% good, 5% poor\n        const random = Math.random();\n        let cumulative = 0;\n        for (let i = 0; i < qualities.length; i++) {\n          cumulative += weights[i];\n          if (random <= cumulative) {\n            setConnectionQuality(qualities[i]);\n            break;\n          }\n        }\n      }, 10000);\n      return () => clearInterval(interval);\n    }\n  }, [isConnected]);\n\n  const formatDuration = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n    \n    if (hours > 0) {\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n    }\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const getConnectionIcon = () => {\n    switch (connectionQuality) {\n      case 'excellent': return <Wifi className=\"w-4 h-4 text-green-600\" />;\n      case 'good': return <Wifi className=\"w-4 h-4 text-yellow-600\" />;\n      case 'poor': return <WifiOff className=\"w-4 h-4 text-red-600\" />;\n      default: return <Wifi className=\"w-4 h-4 text-gray-400\" />;\n    }\n  };\n\n  const handleJoinSession = () => {\n    setIsConnected(true);\n    sessionStartTime.current = Date.now();\n    if (onJoinSession) {\n      onJoinSession(demoSession.id);\n    }\n  };\n\n  const handleLeaveSession = () => {\n    setIsConnected(false);\n    setIsVideoEnabled(true);\n    setIsAudioEnabled(true);\n    setIsScreenSharing(false);\n    setIsRecording(false);\n    setSessionDuration(0);\n    sessionStartTime.current = null;\n    if (onLeaveSession) {\n      onLeaveSession(demoSession.id);\n    }\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  const toggleVideo = () => {\n    setIsVideoEnabled(!isVideoEnabled);\n  };\n\n  const toggleAudio = () => {\n    setIsAudioEnabled(!isAudioEnabled);\n  };\n\n  const toggleScreenShare = () => {\n    setIsScreenSharing(!isScreenSharing);\n    if (onShareScreen) {\n      onShareScreen(!isScreenSharing);\n    }\n  };\n\n  const toggleRecording = () => {\n    setIsRecording(!isRecording);\n    if (onRecordSession) {\n      onRecordSession(!isRecording);\n    }\n  };\n\n  const sendMessage = () => {\n    if (newMessage.trim()) {\n      const message = {\n        id: `msg-${Date.now()}`,\n        sender: 'student',\n        senderName: student?.name || 'Vous',\n        message: newMessage,\n        timestamp: new Date().toISOString(),\n        type: 'text'\n      };\n      \n      setChatMessages(prev => [...prev, message]);\n      setNewMessage('');\n      \n      if (onSendMessage) {\n        onSendMessage(message);\n      }\n      \n      // Simulation de réponse automatique\n      setTimeout(() => {\n        const autoReply = {\n          id: `msg-${Date.now() + 1}`,\n          sender: 'teacher',\n          senderName: teacher?.name || 'Professeur',\n          message: 'Merci pour votre question ! Je vais vous expliquer cela.',\n          timestamp: new Date().toISOString(),\n          type: 'text'\n        };\n        setChatMessages(prev => [...prev, autoReply]);\n      }, 2000);\n    }\n  };\n\n  const copyMeetingInfo = () => {\n    const meetingInfo = `\nRéunion Nexus Réussite\nID: ${demoSession.meetingId}\nMot de passe: ${demoSession.meetingPassword}\nLien: https://meet.nexus-reussite.tn/join/${demoSession.meetingId}\n    `.trim();\n    \n    navigator.clipboard.writeText(meetingInfo);\n    // Notification de copie\n  };\n\n  if (!isVisible) return null;\n\n  // Salle d'attente\n  if (isWaitingRoom) {\n    return (\n      <div className=\"nexus-video-conference waiting-room\">\n        <Card className=\"nexus-card max-w-md mx-auto\">\n          <CardHeader className=\"text-center\">\n            <div className=\"w-16 h-16 bg-blue-100 dark:bg-blue-900/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Video className=\"w-8 h-8 text-blue-600\" />\n            </div>\n            <CardTitle>Salle d'attente</CardTitle>\n            <CardDescription>\n              Connexion à votre session en cours...\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"text-center space-y-4\">\n            <div className=\"space-y-2\">\n              <h4 className=\"font-semibold\">{demoSession.title}</h4>\n              <p className=\"text-sm text-muted-foreground\">\n                avec {demoSession.teacher.name}\n              </p>\n            </div>\n            \n            <div className=\"flex justify-center\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-center space-x-4\">\n                <Button\n                  variant={isVideoEnabled ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  onClick={toggleVideo}\n                >\n                  {isVideoEnabled ? <Video className=\"w-4 h-4\" /> : <VideoOff className=\"w-4 h-4\" />}\n                </Button>\n                <Button\n                  variant={isAudioEnabled ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  onClick={toggleAudio}\n                >\n                  {isAudioEnabled ? <Mic className=\"w-4 h-4\" /> : <MicOff className=\"w-4 h-4\" />}\n                </Button>\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Vérifiez votre caméra et microphone\n              </p>\n            </div>\n            \n            <Button variant=\"outline\" onClick={onClose}>\n              Annuler\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`nexus-video-conference ${isFullscreen ? 'fullscreen' : ''}`}>\n      {/* Header de la session */}\n      <div className=\"nexus-video-header\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-8 h-8 bg-green-100 dark:bg-green-900/20 rounded-full flex items-center justify-center\">\n              <Video className=\"w-4 h-4 text-green-600\" />\n            </div>\n            <div>\n              <h3 className=\"font-semibold text-sm\">{demoSession.title}</h3>\n              <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\n                <Clock className=\"w-3 h-3\" />\n                <span>{formatDuration(sessionDuration)}</span>\n                <div className=\"flex items-center space-x-1\">\n                  {getConnectionIcon()}\n                  <span className=\"capitalize\">{connectionQuality}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {isRecording && (\n            <Badge className=\"bg-red-600 text-white animate-pulse\">\n              <div className=\"w-2 h-2 bg-white rounded-full mr-2\"></div>\n              REC\n            </Badge>\n          )}\n          \n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setIsFullscreen(!isFullscreen)}\n          >\n            {isFullscreen ? <Minimize className=\"w-4 h-4\" /> : <Maximize className=\"w-4 h-4\" />}\n          </Button>\n          \n          <Button variant=\"ghost\" size=\"sm\" onClick={copyMeetingInfo}>\n            <Copy className=\"w-4 h-4\" />\n          </Button>\n          \n          <Button variant=\"ghost\" size=\"sm\" onClick={handleLeaveSession}>\n            <X className=\"w-4 h-4\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"nexus-video-content\">\n        {/* Zone vidéo principale */}\n        <div className=\"nexus-video-main\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 h-full\">\n            {/* Vidéo du professeur */}\n            <div className=\"nexus-video-participant teacher\">\n              <div className=\"relative bg-gray-900 rounded-lg overflow-hidden h-full min-h-[300px]\">\n                {/* Simulation de la vidéo */}\n                <div className=\"absolute inset-0 bg-gradient-to-br from-blue-900 to-purple-900 flex items-center justify-center\">\n                  <div className=\"text-center text-white\">\n                    <div className=\"w-20 h-20 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                      <span className=\"text-2xl font-bold\">\n                        {demoSession.teacher.avatar}\n                      </span>\n                    </div>\n                    <h4 className=\"font-semibold\">{demoSession.teacher.name}</h4>\n                    <p className=\"text-sm opacity-75\">{demoSession.teacher.subject}</p>\n                  </div>\n                </div>\n                \n                {/* Contrôles de la vidéo */}\n                <div className=\"absolute bottom-4 left-4 flex items-center space-x-2\">\n                  <Badge variant=\"secondary\" className=\"text-xs\">\n                    Professeur\n                  </Badge>\n                  {isScreenSharing && (\n                    <Badge className=\"bg-blue-600 text-white text-xs\">\n                      <Monitor className=\"w-3 h-3 mr-1\" />\n                      Partage d'écran\n                    </Badge>\n                  )}\n                </div>\n                \n                <div className=\"absolute bottom-4 right-4 flex items-center space-x-1\">\n                  <div className=\"w-6 h-6 bg-green-600 rounded-full flex items-center justify-center\">\n                    <Mic className=\"w-3 h-3 text-white\" />\n                  </div>\n                  <div className=\"w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center\">\n                    <Video className=\"w-3 h-3 text-white\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            {/* Vidéo de l'étudiant */}\n            <div className=\"nexus-video-participant student\">\n              <div className=\"relative bg-gray-900 rounded-lg overflow-hidden h-full min-h-[300px]\">\n                {/* Simulation de la vidéo */}\n                <div className=\"absolute inset-0 bg-gradient-to-br from-green-900 to-teal-900 flex items-center justify-center\">\n                  <div className=\"text-center text-white\">\n                    <div className=\"w-20 h-20 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                      <span className=\"text-2xl font-bold\">\n                        {demoSession.student.avatar}\n                      </span>\n                    </div>\n                    <h4 className=\"font-semibold\">{demoSession.student.name}</h4>\n                    <p className=\"text-sm opacity-75\">Étudiant</p>\n                  </div>\n                </div>\n                \n                {/* Contrôles de la vidéo */}\n                <div className=\"absolute bottom-4 left-4 flex items-center space-x-2\">\n                  <Badge variant=\"secondary\" className=\"text-xs\">\n                    Vous\n                  </Badge>\n                </div>\n                \n                <div className=\"absolute bottom-4 right-4 flex items-center space-x-1\">\n                  <div className={`w-6 h-6 rounded-full flex items-center justify-center ${\n                    isAudioEnabled ? 'bg-green-600' : 'bg-red-600'\n                  }`}>\n                    {isAudioEnabled ? \n                      <Mic className=\"w-3 h-3 text-white\" /> : \n                      <MicOff className=\"w-3 h-3 text-white\" />\n                    }\n                  </div>\n                  <div className={`w-6 h-6 rounded-full flex items-center justify-center ${\n                    isVideoEnabled ? 'bg-blue-600' : 'bg-red-600'\n                  }`}>\n                    {isVideoEnabled ? \n                      <Video className=\"w-3 h-3 text-white\" /> : \n                      <VideoOff className=\"w-3 h-3 text-white\" />\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Panneau latéral */}\n        <div className=\"nexus-video-sidebar\">\n          <div className=\"flex flex-col h-full\">\n            {/* Onglets */}\n            <div className=\"flex border-b\">\n              <button\n                onClick={() => setIsChatOpen(true)}\n                className={`flex-1 px-4 py-2 text-sm font-medium ${\n                  isChatOpen ? 'border-b-2 border-blue-600 text-blue-600' : 'text-muted-foreground'\n                }`}\n              >\n                <MessageSquare className=\"w-4 h-4 inline mr-2\" />\n                Chat\n              </button>\n              <button\n                onClick={() => setIsChatOpen(false)}\n                className={`flex-1 px-4 py-2 text-sm font-medium ${\n                  !isChatOpen ? 'border-b-2 border-blue-600 text-blue-600' : 'text-muted-foreground'\n                }`}\n              >\n                <FileText className=\"w-4 h-4 inline mr-2\" />\n                Documents\n              </button>\n            </div>\n\n            {/* Contenu du chat */}\n            {isChatOpen ? (\n              <div className=\"flex flex-col flex-1\">\n                <div className=\"flex-1 overflow-y-auto p-4 space-y-3\" ref={chatRef}>\n                  {chatMessages.map((message) => (\n                    <div\n                      key={message.id}\n                      className={`flex ${\n                        message.sender === 'student' ? 'justify-end' : 'justify-start'\n                      }`}\n                    >\n                      <div\n                        className={`max-w-[80%] rounded-lg px-3 py-2 text-sm ${\n                          message.sender === 'student'\n                            ? 'bg-blue-600 text-white'\n                            : message.sender === 'system'\n                            ? 'bg-gray-100 dark:bg-gray-800 text-muted-foreground text-center'\n                            : 'bg-gray-100 dark:bg-gray-800'\n                        }`}\n                      >\n                        {message.sender !== 'system' && message.sender !== 'student' && (\n                          <div className=\"font-medium text-xs mb-1 opacity-75\">\n                            {message.senderName}\n                          </div>\n                        )}\n                        <div>{message.message}</div>\n                        <div className=\"text-xs opacity-50 mt-1\">\n                          {new Date(message.timestamp).toLocaleTimeString('fr-FR', {\n                            hour: '2-digit',\n                            minute: '2-digit'\n                          })}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                \n                {/* Zone de saisie */}\n                <div className=\"border-t p-4\">\n                  <div className=\"flex space-x-2\">\n                    <input\n                      type=\"text\"\n                      value={newMessage}\n                      onChange={(e) => setNewMessage(e.target.value)}\n                      onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n                      placeholder=\"Tapez votre message...\"\n                      className=\"flex-1 nexus-input text-sm\"\n                    />\n                    <Button size=\"sm\" onClick={sendMessage} disabled={!newMessage.trim()}>\n                      <Send className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              /* Contenu des documents */\n              <div className=\"flex-1 overflow-y-auto p-4\">\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <h4 className=\"font-semibold text-sm\">Documents partagés</h4>\n                    <Button variant=\"ghost\" size=\"sm\">\n                      <Plus className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                  \n                  {sharedDocuments.map((doc) => (\n                    <div key={doc.id} className=\"nexus-shared-document\">\n                      <div className=\"flex items-center space-x-3 p-3 rounded-lg border hover:bg-muted/50\">\n                        <div className=\"w-8 h-8 bg-blue-100 dark:bg-blue-900/20 rounded flex items-center justify-center\">\n                          {doc.type === 'pdf' ? (\n                            <FileText className=\"w-4 h-4 text-blue-600\" />\n                          ) : (\n                            <Image className=\"w-4 h-4 text-blue-600\" />\n                          )}\n                        </div>\n                        <div className=\"flex-1 min-w-0\">\n                          <h5 className=\"font-medium text-sm truncate\">{doc.name}</h5>\n                          <p className=\"text-xs text-muted-foreground\">\n                            {doc.sharedBy} • {doc.size}\n                          </p>\n                        </div>\n                        <Button variant=\"ghost\" size=\"sm\">\n                          <Download className=\"w-3 h-3\" />\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                  \n                  {sharedDocuments.length === 0 && (\n                    <div className=\"text-center py-8\">\n                      <FileText className=\"w-12 h-12 text-muted-foreground mx-auto mb-3\" />\n                      <p className=\"text-sm text-muted-foreground\">\n                        Aucun document partagé\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Contrôles de la session */}\n      <div className=\"nexus-video-controls\">\n        <div className=\"flex items-center justify-center space-x-4\">\n          <Button\n            variant={isAudioEnabled ? \"default\" : \"destructive\"}\n            size=\"lg\"\n            onClick={toggleAudio}\n            className=\"rounded-full w-12 h-12\"\n          >\n            {isAudioEnabled ? <Mic className=\"w-5 h-5\" /> : <MicOff className=\"w-5 h-5\" />}\n          </Button>\n          \n          <Button\n            variant={isVideoEnabled ? \"default\" : \"destructive\"}\n            size=\"lg\"\n            onClick={toggleVideo}\n            className=\"rounded-full w-12 h-12\"\n          >\n            {isVideoEnabled ? <Video className=\"w-5 h-5\" /> : <VideoOff className=\"w-5 h-5\" />}\n          </Button>\n          \n          <Button\n            variant={isScreenSharing ? \"default\" : \"outline\"}\n            size=\"lg\"\n            onClick={toggleScreenShare}\n            className=\"rounded-full w-12 h-12\"\n          >\n            {isScreenSharing ? <MonitorOff className=\"w-5 h-5\" /> : <Monitor className=\"w-5 h-5\" />}\n          </Button>\n          \n          <Button\n            variant={isRecording ? \"destructive\" : \"outline\"}\n            size=\"lg\"\n            onClick={toggleRecording}\n            className=\"rounded-full w-12 h-12\"\n          >\n            <div className={`w-3 h-3 rounded-full ${isRecording ? 'bg-white' : 'bg-red-600'}`}></div>\n          </Button>\n          \n          <Button\n            variant={whiteboardActive ? \"default\" : \"outline\"}\n            size=\"lg\"\n            onClick={() => setWhiteboardActive(!whiteboardActive)}\n            className=\"rounded-full w-12 h-12\"\n          >\n            <PenTool className=\"w-5 h-5\" />\n          </Button>\n          \n          <Button\n            variant=\"destructive\"\n            size=\"lg\"\n            onClick={handleLeaveSession}\n            className=\"rounded-full w-12 h-12\"\n          >\n            <PhoneOff className=\"w-5 h-5\" />\n          </Button>\n        </div>\n        \n        <div className=\"flex items-center justify-between mt-4 text-sm text-muted-foreground\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-1\">\n              <Users className=\"w-4 h-4\" />\n              <span>{participants.length} participant{participants.length > 1 ? 's' : ''}</span>\n            </div>\n            <div className=\"flex items-center space-x-1\">\n              {getConnectionIcon()}\n              <span className=\"capitalize\">{connectionQuality}</span>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-1\">\n            <Clock className=\"w-4 h-4\" />\n            <span>{formatDuration(sessionDuration)}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Composant pour programmer une session\nexport const ScheduleVideoSession = ({ onSchedule, teachers, student }) => {\n  const [selectedTeacher, setSelectedTeacher] = useState('');\n  const [sessionDate, setSessionDate] = useState('');\n  const [sessionTime, setSessionTime] = useState('');\n  const [duration, setDuration] = useState(60);\n  const [subject, setSubject] = useState('');\n  const [sessionType, setSessionType] = useState('individual');\n  const [notes, setNotes] = useState('');\n\n  const handleSchedule = () => {\n    const sessionData = {\n      teacherId: selectedTeacher,\n      studentId: student?.id,\n      date: sessionDate,\n      time: sessionTime,\n      duration,\n      subject,\n      type: sessionType,\n      notes,\n      scheduledAt: new Date().toISOString()\n    };\n    \n    if (onSchedule) {\n      onSchedule(sessionData);\n    }\n  };\n\n  return (\n    <Card className=\"nexus-card max-w-md\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center space-x-2\">\n          <Calendar className=\"w-5 h-5\" />\n          <span>Programmer une session</span>\n        </CardTitle>\n        <CardDescription>\n          Planifiez votre prochaine session de cours en ligne\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div>\n          <label className=\"nexus-form-label\">Professeur</label>\n          <select\n            value={selectedTeacher}\n            onChange={(e) => setSelectedTeacher(e.target.value)}\n            className=\"nexus-input w-full\"\n          >\n            <option value=\"\">Sélectionner un professeur</option>\n            {teachers?.map((teacher) => (\n              <option key={teacher.id} value={teacher.id}>\n                {teacher.name} - {teacher.subject}\n              </option>\n            ))}\n          </select>\n        </div>\n        \n        <div className=\"grid grid-cols-2 gap-4\">\n          <div>\n            <label className=\"nexus-form-label\">Date</label>\n            <input\n              type=\"date\"\n              value={sessionDate}\n              onChange={(e) => setSessionDate(e.target.value)}\n              className=\"nexus-input w-full\"\n              min={new Date().toISOString().split('T')[0]}\n            />\n          </div>\n          <div>\n            <label className=\"nexus-form-label\">Heure</label>\n            <input\n              type=\"time\"\n              value={sessionTime}\n              onChange={(e) => setSessionTime(e.target.value)}\n              className=\"nexus-input w-full\"\n            />\n          </div>\n        </div>\n        \n        <div>\n          <label className=\"nexus-form-label\">Durée (minutes)</label>\n          <select\n            value={duration}\n            onChange={(e) => setDuration(parseInt(e.target.value))}\n            className=\"nexus-input w-full\"\n          >\n            <option value={30}>30 minutes</option>\n            <option value={60}>1 heure</option>\n            <option value={90}>1h30</option>\n            <option value={120}>2 heures</option>\n          </select>\n        </div>\n        \n        <div>\n          <label className=\"nexus-form-label\">Matière</label>\n          <input\n            type=\"text\"\n            value={subject}\n            onChange={(e) => setSubject(e.target.value)}\n            placeholder=\"Ex: Mathématiques - Fonctions\"\n            className=\"nexus-input w-full\"\n          />\n        </div>\n        \n        <div>\n          <label className=\"nexus-form-label\">Type de session</label>\n          <select\n            value={sessionType}\n            onChange={(e) => setSessionType(e.target.value)}\n            className=\"nexus-input w-full\"\n          >\n            <option value=\"individual\">Cours individuel</option>\n            <option value=\"group\">Cours en groupe</option>\n            <option value=\"review\">Session de révision</option>\n            <option value=\"exam_prep\">Préparation d'examen</option>\n          </select>\n        </div>\n        \n        <div>\n          <label className=\"nexus-form-label\">Notes (optionnel)</label>\n          <textarea\n            value={notes}\n            onChange={(e) => setNotes(e.target.value)}\n            placeholder=\"Points spécifiques à aborder, questions préparées...\"\n            className=\"nexus-input w-full h-20 resize-none\"\n          />\n        </div>\n        \n        <div className=\"flex space-x-2\">\n          <Button\n            onClick={handleSchedule}\n            disabled={!selectedTeacher || !sessionDate || !sessionTime}\n            className=\"flex-1\"\n          >\n            <Calendar className=\"w-4 h-4 mr-2\" />\n            Programmer\n          </Button>\n          <Button variant=\"outline\" className=\"flex-1\">\n            Annuler\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default VideoConference;\n\n","import React, { useState, useEffect } from 'react';\nimport { \n  ChevronLeft, \n  ChevronRight, \n  Plus, \n  Calendar as CalendarIcon,\n  Clock,\n  MapPin,\n  Users,\n  Video,\n  Edit,\n  Trash2,\n  Eye\n} from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';\nimport { Button } from '../ui/button';\nimport { Badge } from '../ui/badge';\n\nexport default function ScheduleCalendar({ userId, userRole = 'student' }) {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [events, setEvents] = useState([]);\n  const [viewMode, setViewMode] = useState('month'); // month, week, day\n  const [loading, setLoading] = useState(true);\n\n  // Événements de démonstration\n  const demoEvents = [\n    {\n      id: 1,\n      title: 'Cours de Mathématiques',\n      subject: 'Mathématiques',\n      type: 'group_lesson',\n      start: new Date(2024, 0, 15, 14, 0), // 15 janvier 2024, 14h00\n      end: new Date(2024, 0, 15, 15, 30),\n      location: 'Salle A1',\n      teacher: 'M. Dubois',\n      students: ['Sarah', 'Ahmed', 'Léa', 'Youssef'],\n      status: 'confirmed',\n      isOnline: false\n    },\n    {\n      id: 2,\n      title: 'Session NSI - Algorithmes',\n      subject: 'NSI',\n      type: 'individual_lesson',\n      start: new Date(2024, 0, 16, 10, 0),\n      end: new Date(2024, 0, 16, 11, 0),\n      location: 'Visioconférence',\n      teacher: 'Mme Martin',\n      students: ['Ahmed'],\n      status: 'confirmed',\n      isOnline: true\n    },\n    {\n      id: 3,\n      title: 'Physique - Optique',\n      subject: 'Physique',\n      type: 'group_lesson',\n      start: new Date(2024, 0, 17, 16, 0),\n      end: new Date(2024, 0, 17, 17, 30),\n      location: 'Lab Physique',\n      teacher: 'Dr. Rousseau',\n      students: ['Sarah', 'Léa', 'Nour'],\n      status: 'pending',\n      isOnline: false\n    },\n    {\n      id: 4,\n      title: 'Coaching Parcoursup',\n      subject: 'Orientation',\n      type: 'coaching',\n      start: new Date(2024, 0, 18, 15, 0),\n      end: new Date(2024, 0, 18, 16, 0),\n      location: 'Bureau conseil',\n      teacher: 'Mme Benali',\n      students: ['Sarah'],\n      status: 'confirmed',\n      isOnline: false\n    },\n    {\n      id: 5,\n      title: 'Révision Bac Blanc',\n      subject: 'Mathématiques',\n      type: 'revision',\n      start: new Date(2024, 0, 19, 9, 0),\n      end: new Date(2024, 0, 19, 12, 0),\n      location: 'Salle d\\'examen',\n      teacher: 'M. Dubois',\n      students: ['Sarah', 'Ahmed', 'Léa', 'Youssef', 'Nour'],\n      status: 'confirmed',\n      isOnline: false\n    }\n  ];\n\n  useEffect(() => {\n    loadEvents();\n  }, [currentDate, userId]);\n\n  const loadEvents = async () => {\n    try {\n      setLoading(true);\n      \n      // Simuler le chargement des événements\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      setEvents(demoEvents);\n    } catch (error) {\n      console.error('Erreur lors du chargement des événements:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getDaysInMonth = (date) => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const daysInMonth = lastDay.getDate();\n    const startingDayOfWeek = firstDay.getDay();\n\n    const days = [];\n    \n    // Jours du mois précédent\n    for (let i = startingDayOfWeek - 1; i >= 0; i--) {\n      const prevDate = new Date(year, month, -i);\n      days.push({ date: prevDate, isCurrentMonth: false });\n    }\n    \n    // Jours du mois actuel\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push({ date: new Date(year, month, day), isCurrentMonth: true });\n    }\n    \n    // Jours du mois suivant pour compléter la grille\n    const remainingDays = 42 - days.length; // 6 semaines × 7 jours\n    for (let day = 1; day <= remainingDays; day++) {\n      days.push({ date: new Date(year, month + 1, day), isCurrentMonth: false });\n    }\n    \n    return days;\n  };\n\n  const getEventsForDate = (date) => {\n    return events.filter(event => {\n      const eventDate = new Date(event.start);\n      return eventDate.toDateString() === date.toDateString();\n    });\n  };\n\n  const formatTime = (date) => {\n    return date.toLocaleTimeString('fr-FR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getEventTypeColor = (type) => {\n    switch (type) {\n      case 'group_lesson':\n        return 'bg-blue-500';\n      case 'individual_lesson':\n        return 'bg-green-500';\n      case 'coaching':\n        return 'bg-purple-500';\n      case 'revision':\n        return 'bg-orange-500';\n      default:\n        return 'bg-gray-500';\n    }\n  };\n\n  const getEventTypeLabel = (type) => {\n    switch (type) {\n      case 'group_lesson':\n        return 'Cours groupe';\n      case 'individual_lesson':\n        return 'Cours individuel';\n      case 'coaching':\n        return 'Coaching';\n      case 'revision':\n        return 'Révision';\n      default:\n        return 'Événement';\n    }\n  };\n\n  const getStatusBadge = (status) => {\n    switch (status) {\n      case 'confirmed':\n        return <Badge className=\"bg-green-100 text-green-800\">Confirmé</Badge>;\n      case 'pending':\n        return <Badge className=\"bg-yellow-100 text-yellow-800\">En attente</Badge>;\n      case 'cancelled':\n        return <Badge className=\"bg-red-100 text-red-800\">Annulé</Badge>;\n      default:\n        return <Badge variant=\"outline\">Inconnu</Badge>;\n    }\n  };\n\n  const navigateMonth = (direction) => {\n    const newDate = new Date(currentDate);\n    newDate.setMonth(currentDate.getMonth() + direction);\n    setCurrentDate(newDate);\n  };\n\n  const goToToday = () => {\n    const today = new Date();\n    setCurrentDate(today);\n    setSelectedDate(today);\n  };\n\n  const monthNames = [\n    'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',\n    'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'\n  ];\n\n  const dayNames = ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'];\n\n  const days = getDaysInMonth(currentDate);\n  const selectedDateEvents = getEventsForDate(selectedDate);\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-8 bg-gray-200 rounded w-1/3 mb-4\"></div>\n          <div className=\"h-96 bg-gray-200 rounded\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* En-tête */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Planning</h1>\n          <p className=\"text-gray-600\">Gérez vos cours et rendez-vous</p>\n        </div>\n        \n        <div className=\"flex space-x-3\">\n          <Button variant=\"outline\" onClick={goToToday}>\n            Aujourd'hui\n          </Button>\n          {userRole === 'teacher' && (\n            <Button>\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Nouveau cours\n            </Button>\n          )}\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Calendrier principal */}\n        <Card className=\"lg:col-span-2\">\n          <CardHeader>\n            <div className=\"flex justify-between items-center\">\n              <CardTitle className=\"flex items-center\">\n                <CalendarIcon className=\"h-5 w-5 mr-2\" />\n                {monthNames[currentDate.getMonth()]} {currentDate.getFullYear()}\n              </CardTitle>\n              \n              <div className=\"flex space-x-2\">\n                <Button variant=\"outline\" size=\"sm\" onClick={() => navigateMonth(-1)}>\n                  <ChevronLeft className=\"h-4 w-4\" />\n                </Button>\n                <Button variant=\"outline\" size=\"sm\" onClick={() => navigateMonth(1)}>\n                  <ChevronRight className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </div>\n          </CardHeader>\n          \n          <CardContent>\n            {/* Grille du calendrier */}\n            <div className=\"grid grid-cols-7 gap-1 mb-4\">\n              {dayNames.map(day => (\n                <div key={day} className=\"p-2 text-center text-sm font-medium text-gray-500\">\n                  {day}\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"grid grid-cols-7 gap-1\">\n              {days.map((day, index) => {\n                const dayEvents = getEventsForDate(day.date);\n                const isSelected = selectedDate.toDateString() === day.date.toDateString();\n                const isToday = new Date().toDateString() === day.date.toDateString();\n                \n                return (\n                  <button\n                    key={index}\n                    onClick={() => setSelectedDate(day.date)}\n                    className={`p-2 min-h-[80px] text-left border rounded-lg transition-colors ${\n                      isSelected\n                        ? 'bg-blue-100 border-blue-500'\n                        : isToday\n                        ? 'bg-blue-50 border-blue-200'\n                        : day.isCurrentMonth\n                        ? 'hover:bg-gray-50 border-gray-200'\n                        : 'text-gray-400 border-gray-100'\n                    }`}\n                  >\n                    <div className={`text-sm font-medium ${\n                      day.isCurrentMonth ? 'text-gray-900' : 'text-gray-400'\n                    }`}>\n                      {day.date.getDate()}\n                    </div>\n                    \n                    {/* Événements du jour */}\n                    <div className=\"mt-1 space-y-1\">\n                      {dayEvents.slice(0, 2).map(event => (\n                        <div\n                          key={event.id}\n                          className={`text-xs p-1 rounded text-white truncate ${getEventTypeColor(event.type)}`}\n                        >\n                          {formatTime(event.start)} {event.title}\n                        </div>\n                      ))}\n                      {dayEvents.length > 2 && (\n                        <div className=\"text-xs text-gray-500\">\n                          +{dayEvents.length - 2} autres\n                        </div>\n                      )}\n                    </div>\n                  </button>\n                );\n              })}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Détails du jour sélectionné */}\n        <Card>\n          <CardHeader>\n            <CardTitle>\n              {selectedDate.toLocaleDateString('fr-FR', {\n                weekday: 'long',\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric'\n              })}\n            </CardTitle>\n            <CardDescription>\n              {selectedDateEvents.length} événement{selectedDateEvents.length !== 1 ? 's' : ''} prévu{selectedDateEvents.length !== 1 ? 's' : ''}\n            </CardDescription>\n          </CardHeader>\n          \n          <CardContent>\n            {selectedDateEvents.length === 0 ? (\n              <div className=\"text-center py-8 text-gray-500\">\n                <CalendarIcon className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\n                <p>Aucun événement prévu</p>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {selectedDateEvents.map(event => (\n                  <div key={event.id} className=\"border rounded-lg p-4\">\n                    <div className=\"flex justify-between items-start mb-2\">\n                      <h4 className=\"font-medium text-gray-900\">{event.title}</h4>\n                      {getStatusBadge(event.status)}\n                    </div>\n                    \n                    <div className=\"space-y-2 text-sm text-gray-600\">\n                      <div className=\"flex items-center\">\n                        <Clock className=\"h-4 w-4 mr-2\" />\n                        {formatTime(event.start)} - {formatTime(event.end)}\n                      </div>\n                      \n                      <div className=\"flex items-center\">\n                        {event.isOnline ? (\n                          <Video className=\"h-4 w-4 mr-2\" />\n                        ) : (\n                          <MapPin className=\"h-4 w-4 mr-2\" />\n                        )}\n                        {event.location}\n                      </div>\n                      \n                      <div className=\"flex items-center\">\n                        <Users className=\"h-4 w-4 mr-2\" />\n                        {event.teacher}\n                      </div>\n                      \n                      <div className=\"flex items-center\">\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {getEventTypeLabel(event.type)}\n                        </Badge>\n                      </div>\n                    </div>\n                    \n                    {/* Participants */}\n                    {event.students.length > 0 && (\n                      <div className=\"mt-3\">\n                        <div className=\"text-xs font-medium text-gray-700 mb-1\">\n                          Participants ({event.students.length}) :\n                        </div>\n                        <div className=\"flex flex-wrap gap-1\">\n                          {event.students.map((student, index) => (\n                            <Badge key={index} variant=\"secondary\" className=\"text-xs\">\n                              {student}\n                            </Badge>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                    \n                    {/* Actions */}\n                    <div className=\"flex space-x-2 mt-4\">\n                      <Button size=\"sm\" variant=\"outline\">\n                        <Eye className=\"h-3 w-3 mr-1\" />\n                        Voir\n                      </Button>\n                      \n                      {userRole === 'teacher' && (\n                        <>\n                          <Button size=\"sm\" variant=\"outline\">\n                            <Edit className=\"h-3 w-3 mr-1\" />\n                            Modifier\n                          </Button>\n                          <Button size=\"sm\" variant=\"outline\">\n                            <Trash2 className=\"h-3 w-3 mr-1\" />\n                            Annuler\n                          </Button>\n                        </>\n                      )}\n                      \n                      {event.isOnline && (\n                        <Button size=\"sm\">\n                          <Video className=\"h-3 w-3 mr-1\" />\n                          Rejoindre\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Prochains événements */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Prochains événements</CardTitle>\n          <CardDescription>\n            Vos cours et rendez-vous à venir\n          </CardDescription>\n        </CardHeader>\n        \n        <CardContent>\n          <div className=\"space-y-3\">\n            {events\n              .filter(event => event.start > new Date())\n              .sort((a, b) => a.start - b.start)\n              .slice(0, 5)\n              .map(event => (\n                <div key={event.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className={`h-3 w-3 rounded-full ${getEventTypeColor(event.type)}`} />\n                    <div>\n                      <div className=\"font-medium text-gray-900\">{event.title}</div>\n                      <div className=\"text-sm text-gray-600\">\n                        {event.start.toLocaleDateString('fr-FR')} à {formatTime(event.start)}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    {getStatusBadge(event.status)}\n                    <Button size=\"sm\" variant=\"outline\">\n                      Voir\n                    </Button>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { \n  Clock, \n  CheckCircle, \n  XCircle, \n  RotateCcw, \n  Play, \n  Pause,\n  Trophy,\n  Target,\n  Brain\n} from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Badge } from './ui/badge';\nimport { Progress } from './ui/progress';\n\nexport default function QuizSystem({ quizData, onComplete }) {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [timeRemaining, setTimeRemaining] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [score, setScore] = useState(0);\n\n  // Quiz de démonstration\n  const defaultQuiz = {\n    id: 'demo-math-proba',\n    title: 'Probabilités - Terminale',\n    subject: 'Mathématiques',\n    duration: 900, // 15 minutes\n    questions: [\n      {\n        id: 1,\n        question: \"Dans une urne contenant 5 boules rouges et 3 boules bleues, quelle est la probabilité de tirer une boule rouge ?\",\n        type: \"multiple_choice\",\n        options: [\n          { id: 'a', text: '3/8', correct: false },\n          { id: 'b', text: '5/8', correct: true },\n          { id: 'c', text: '1/2', correct: false },\n          { id: 'd', text: '5/3', correct: false }\n        ],\n        explanation: \"Il y a 5 boules rouges sur un total de 8 boules (5+3), donc P(rouge) = 5/8.\"\n      },\n      {\n        id: 2,\n        question: \"Deux événements A et B sont indépendants si :\",\n        type: \"multiple_choice\",\n        options: [\n          { id: 'a', text: 'P(A ∩ B) = P(A) + P(B)', correct: false },\n          { id: 'b', text: 'P(A ∩ B) = P(A) × P(B)', correct: true },\n          { id: 'c', text: 'P(A ∪ B) = P(A) × P(B)', correct: false },\n          { id: 'd', text: 'P(A|B) = P(B|A)', correct: false }\n        ],\n        explanation: \"Deux événements sont indépendants si P(A ∩ B) = P(A) × P(B).\"\n      },\n      {\n        id: 3,\n        question: \"Dans un jeu de 32 cartes, quelle est la probabilité de tirer un roi ?\",\n        type: \"multiple_choice\",\n        options: [\n          { id: 'a', text: '1/8', correct: true },\n          { id: 'b', text: '1/4', correct: false },\n          { id: 'c', text: '4/32', correct: false },\n          { id: 'd', text: '1/32', correct: false }\n        ],\n        explanation: \"Il y a 4 rois dans un jeu de 32 cartes, donc P(roi) = 4/32 = 1/8.\"\n      },\n      {\n        id: 4,\n        question: \"La loi binomiale B(n,p) a pour espérance :\",\n        type: \"multiple_choice\",\n        options: [\n          { id: 'a', text: 'np', correct: true },\n          { id: 'b', text: 'np(1-p)', correct: false },\n          { id: 'c', text: 'n(1-p)', correct: false },\n          { id: 'd', text: 'p(1-p)', correct: false }\n        ],\n        explanation: \"L'espérance d'une loi binomiale B(n,p) est E(X) = np.\"\n      },\n      {\n        id: 5,\n        question: \"Si P(A) = 0.6 et P(B) = 0.4, et que A et B sont incompatibles, alors P(A ∪ B) = ?\",\n        type: \"multiple_choice\",\n        options: [\n          { id: 'a', text: '0.24', correct: false },\n          { id: 'b', text: '1.0', correct: true },\n          { id: 'c', text: '0.76', correct: false },\n          { id: 'd', text: '0.2', correct: false }\n        ],\n        explanation: \"Si A et B sont incompatibles, P(A ∩ B) = 0, donc P(A ∪ B) = P(A) + P(B) = 0.6 + 0.4 = 1.0.\"\n      }\n    ]\n  };\n\n  const quiz = quizData || defaultQuiz;\n\n  useEffect(() => {\n    if (isActive && timeRemaining > 0) {\n      const timer = setInterval(() => {\n        setTimeRemaining(time => {\n          if (time <= 1) {\n            setIsActive(false);\n            handleSubmit();\n            return 0;\n          }\n          return time - 1;\n        });\n      }, 1000);\n\n      return () => clearInterval(timer);\n    }\n  }, [isActive, timeRemaining]);\n\n  const startQuiz = () => {\n    setTimeRemaining(quiz.duration);\n    setIsActive(true);\n    setCurrentQuestion(0);\n    setSelectedAnswers({});\n    setShowResults(false);\n    setScore(0);\n  };\n\n  const pauseQuiz = () => {\n    setIsActive(!isActive);\n  };\n\n  const selectAnswer = (questionId, answerId) => {\n    setSelectedAnswers(prev => ({\n      ...prev,\n      [questionId]: answerId\n    }));\n  };\n\n  const nextQuestion = () => {\n    if (currentQuestion < quiz.questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n  };\n\n  const previousQuestion = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(currentQuestion - 1);\n    }\n  };\n\n  const calculateScore = () => {\n    let correctAnswers = 0;\n    quiz.questions.forEach(question => {\n      const selectedAnswer = selectedAnswers[question.id];\n      const correctOption = question.options.find(opt => opt.correct);\n      if (selectedAnswer === correctOption.id) {\n        correctAnswers++;\n      }\n    });\n    return Math.round((correctAnswers / quiz.questions.length) * 100);\n  };\n\n  const handleSubmit = () => {\n    const finalScore = calculateScore();\n    setScore(finalScore);\n    setShowResults(true);\n    setIsActive(false);\n    \n    if (onComplete) {\n      onComplete({\n        score: finalScore,\n        answers: selectedAnswers,\n        timeSpent: quiz.duration - timeRemaining\n      });\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const getScoreColor = (score) => {\n    if (score >= 80) return 'text-green-600';\n    if (score >= 60) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  const getScoreBadge = (score) => {\n    if (score >= 90) return { text: 'Excellent', variant: 'default', color: 'bg-green-500' };\n    if (score >= 80) return { text: 'Très bien', variant: 'default', color: 'bg-blue-500' };\n    if (score >= 60) return { text: 'Bien', variant: 'secondary', color: 'bg-yellow-500' };\n    if (score >= 40) return { text: 'Passable', variant: 'outline', color: 'bg-orange-500' };\n    return { text: 'À revoir', variant: 'destructive', color: 'bg-red-500' };\n  };\n\n  if (showResults) {\n    const badge = getScoreBadge(score);\n    \n    return (\n      <Card className=\"max-w-4xl mx-auto\">\n        <CardHeader className=\"text-center\">\n          <div className=\"flex justify-center mb-4\">\n            <div className={`h-20 w-20 rounded-full ${badge.color} flex items-center justify-center`}>\n              <Trophy className=\"h-10 w-10 text-white\" />\n            </div>\n          </div>\n          <CardTitle className=\"text-2xl\">Quiz terminé !</CardTitle>\n          <CardDescription>Voici vos résultats pour \"{quiz.title}\"</CardDescription>\n        </CardHeader>\n        \n        <CardContent className=\"space-y-6\">\n          {/* Score principal */}\n          <div className=\"text-center\">\n            <div className={`text-6xl font-bold ${getScoreColor(score)} mb-2`}>\n              {score}%\n            </div>\n            <Badge className={badge.color}>{badge.text}</Badge>\n          </div>\n\n          {/* Statistiques */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n              <Target className=\"h-8 w-8 mx-auto mb-2 text-blue-600\" />\n              <div className=\"text-2xl font-bold text-gray-900\">\n                {Math.round((score / 100) * quiz.questions.length)}/{quiz.questions.length}\n              </div>\n              <div className=\"text-sm text-gray-600\">Bonnes réponses</div>\n            </div>\n            \n            <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n              <Clock className=\"h-8 w-8 mx-auto mb-2 text-green-600\" />\n              <div className=\"text-2xl font-bold text-gray-900\">\n                {formatTime(quiz.duration - timeRemaining)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Temps utilisé</div>\n            </div>\n            \n            <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\n              <Brain className=\"h-8 w-8 mx-auto mb-2 text-purple-600\" />\n              <div className=\"text-2xl font-bold text-gray-900\">\n                {Math.round((quiz.duration - timeRemaining) / quiz.questions.length)}s\n              </div>\n              <div className=\"text-sm text-gray-600\">Temps/question</div>\n            </div>\n          </div>\n\n          {/* Révision des réponses */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Révision des réponses</h3>\n            {quiz.questions.map((question, index) => {\n              const selectedAnswer = selectedAnswers[question.id];\n              const correctOption = question.options.find(opt => opt.correct);\n              const selectedOption = question.options.find(opt => opt.id === selectedAnswer);\n              const isCorrect = selectedAnswer === correctOption.id;\n\n              return (\n                <div key={question.id} className=\"border rounded-lg p-4\">\n                  <div className=\"flex items-start space-x-3\">\n                    <div className={`h-6 w-6 rounded-full flex items-center justify-center ${\n                      isCorrect ? 'bg-green-100' : 'bg-red-100'\n                    }`}>\n                      {isCorrect ? (\n                        <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                      ) : (\n                        <XCircle className=\"h-4 w-4 text-red-600\" />\n                      )}\n                    </div>\n                    <div className=\"flex-1\">\n                      <h4 className=\"font-medium text-gray-900 mb-2\">\n                        Question {index + 1}: {question.question}\n                      </h4>\n                      \n                      {selectedOption && (\n                        <div className={`p-2 rounded mb-2 ${\n                          isCorrect ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'\n                        }`}>\n                          <span className=\"font-medium\">Votre réponse: </span>\n                          {selectedOption.text}\n                        </div>\n                      )}\n                      \n                      {!isCorrect && (\n                        <div className=\"p-2 rounded mb-2 bg-green-50 border border-green-200\">\n                          <span className=\"font-medium\">Bonne réponse: </span>\n                          {correctOption.text}\n                        </div>\n                      )}\n                      \n                      <div className=\"text-sm text-gray-600 bg-blue-50 p-2 rounded\">\n                        <span className=\"font-medium\">Explication: </span>\n                        {question.explanation}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          {/* Actions */}\n          <div className=\"flex justify-center space-x-4\">\n            <Button onClick={startQuiz} variant=\"outline\">\n              <RotateCcw className=\"h-4 w-4 mr-2\" />\n              Recommencer\n            </Button>\n            <Button onClick={() => window.history.back()}>\n              Retour aux cours\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!isActive && timeRemaining === 0) {\n    return (\n      <Card className=\"max-w-2xl mx-auto\">\n        <CardHeader className=\"text-center\">\n          <CardTitle>{quiz.title}</CardTitle>\n          <CardDescription>{quiz.subject}</CardDescription>\n        </CardHeader>\n        \n        <CardContent className=\"space-y-6\">\n          <div className=\"text-center\">\n            <div className=\"h-20 w-20 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Brain className=\"h-10 w-10 text-blue-600\" />\n            </div>\n            <h3 className=\"text-xl font-semibold mb-2\">Prêt à commencer ?</h3>\n            <p className=\"text-gray-600 mb-4\">\n              Ce quiz contient {quiz.questions.length} questions et dure {Math.round(quiz.duration / 60)} minutes.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-center\">\n            <div className=\"p-4 bg-gray-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600\">{quiz.questions.length}</div>\n              <div className=\"text-sm text-gray-600\">Questions</div>\n            </div>\n            <div className=\"p-4 bg-gray-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600\">{Math.round(quiz.duration / 60)}</div>\n              <div className=\"text-sm text-gray-600\">Minutes</div>\n            </div>\n            <div className=\"p-4 bg-gray-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-purple-600\">QCM</div>\n              <div className=\"text-sm text-gray-600\">Format</div>\n            </div>\n          </div>\n\n          <div className=\"text-center\">\n            <Button onClick={startQuiz} size=\"lg\">\n              <Play className=\"h-5 w-5 mr-2\" />\n              Commencer le quiz\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const currentQ = quiz.questions[currentQuestion];\n  const progress = ((currentQuestion + 1) / quiz.questions.length) * 100;\n\n  return (\n    <Card className=\"max-w-4xl mx-auto\">\n      <CardHeader>\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <CardTitle>{quiz.title}</CardTitle>\n            <CardDescription>\n              Question {currentQuestion + 1} sur {quiz.questions.length}\n            </CardDescription>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={pauseQuiz}\n            >\n              {isActive ? <Pause className=\"h-4 w-4\" /> : <Play className=\"h-4 w-4\" />}\n            </Button>\n            <div className={`text-lg font-mono ${timeRemaining < 60 ? 'text-red-600' : 'text-gray-900'}`}>\n              <Clock className=\"h-4 w-4 inline mr-1\" />\n              {formatTime(timeRemaining)}\n            </div>\n          </div>\n        </div>\n        \n        <Progress value={progress} className=\"mt-4\" />\n      </CardHeader>\n      \n      <CardContent className=\"space-y-6\">\n        {/* Question */}\n        <div className=\"bg-gray-50 p-6 rounded-lg\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n            {currentQ.question}\n          </h3>\n          \n          {/* Options */}\n          <div className=\"space-y-3\">\n            {currentQ.options.map((option) => (\n              <button\n                key={option.id}\n                onClick={() => selectAnswer(currentQ.id, option.id)}\n                className={`w-full text-left p-4 rounded-lg border-2 transition-colors ${\n                  selectedAnswers[currentQ.id] === option.id\n                    ? 'border-blue-500 bg-blue-50'\n                    : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                }`}\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`h-4 w-4 rounded-full border-2 ${\n                    selectedAnswers[currentQ.id] === option.id\n                      ? 'border-blue-500 bg-blue-500'\n                      : 'border-gray-300'\n                  }`}>\n                    {selectedAnswers[currentQ.id] === option.id && (\n                      <div className=\"h-2 w-2 bg-white rounded-full mx-auto mt-0.5\" />\n                    )}\n                  </div>\n                  <span className=\"font-medium text-gray-700\">{option.id.toUpperCase()}.</span>\n                  <span className=\"text-gray-900\">{option.text}</span>\n                </div>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Navigation */}\n        <div className=\"flex justify-between items-center\">\n          <Button\n            variant=\"outline\"\n            onClick={previousQuestion}\n            disabled={currentQuestion === 0}\n          >\n            Précédent\n          </Button>\n          \n          <div className=\"flex space-x-2\">\n            {quiz.questions.map((_, index) => (\n              <button\n                key={index}\n                onClick={() => setCurrentQuestion(index)}\n                className={`h-8 w-8 rounded-full text-sm font-medium ${\n                  index === currentQuestion\n                    ? 'bg-blue-500 text-white'\n                    : selectedAnswers[quiz.questions[index].id]\n                    ? 'bg-green-100 text-green-700'\n                    : 'bg-gray-100 text-gray-600'\n                }`}\n              >\n                {index + 1}\n              </button>\n            ))}\n          </div>\n          \n          {currentQuestion === quiz.questions.length - 1 ? (\n            <Button\n              onClick={handleSubmit}\n              disabled={Object.keys(selectedAnswers).length !== quiz.questions.length}\n            >\n              Terminer le quiz\n            </Button>\n          ) : (\n            <Button\n              onClick={nextQuestion}\n              disabled={!selectedAnswers[currentQ.id]}\n            >\n              Suivant\n            </Button>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { \n  CheckCircle, \n  Circle, \n  Lock, \n  Play, \n  BookOpen, \n  Video, \n  FileText, \n  Award,\n  Clock,\n  Target,\n  TrendingUp,\n  Star\n} from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Badge } from './ui/badge';\nimport { Progress } from './ui/progress';\n\nexport default function LearningPath({ subject = 'mathematics', studentId }) {\n  const [currentPath, setCurrentPath] = useState(null);\n  const [progress, setProgress] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  // Parcours de démonstration\n  const learningPaths = {\n    mathematics: {\n      id: 'math-terminale',\n      title: 'Mathématiques Terminale',\n      description: 'Parcours complet pour maîtriser le programme de Terminale',\n      totalModules: 8,\n      estimatedHours: 120,\n      difficulty: 'Avancé',\n      modules: [\n        {\n          id: 'limits',\n          title: 'Limites et continuité',\n          description: 'Comprendre les limites de fonctions et la continuité',\n          status: 'completed',\n          progress: 100,\n          estimatedTime: 15,\n          lessons: [\n            { id: 'limits-1', title: 'Introduction aux limites', type: 'video', duration: 20, completed: true },\n            { id: 'limits-2', title: 'Calcul de limites', type: 'lesson', duration: 30, completed: true },\n            { id: 'limits-3', title: 'Exercices pratiques', type: 'quiz', duration: 25, completed: true },\n            { id: 'limits-4', title: 'Continuité', type: 'lesson', duration: 20, completed: true }\n          ],\n          skills: ['Calcul de limites', 'Théorèmes de continuité', 'Asymptotes'],\n          prerequisites: []\n        },\n        {\n          id: 'derivatives',\n          title: 'Dérivation',\n          description: 'Maîtriser les techniques de dérivation et leurs applications',\n          status: 'completed',\n          progress: 100,\n          estimatedTime: 18,\n          lessons: [\n            { id: 'deriv-1', title: 'Définition de la dérivée', type: 'video', duration: 25, completed: true },\n            { id: 'deriv-2', title: 'Règles de dérivation', type: 'lesson', duration: 35, completed: true },\n            { id: 'deriv-3', title: 'Applications géométriques', type: 'lesson', duration: 30, completed: true },\n            { id: 'deriv-4', title: 'Exercices d\\'application', type: 'quiz', duration: 20, completed: true }\n          ],\n          skills: ['Calcul de dérivées', 'Équations de tangentes', 'Variations de fonctions'],\n          prerequisites: ['limits']\n        },\n        {\n          id: 'integrals',\n          title: 'Intégration',\n          description: 'Techniques d\\'intégration et calcul d\\'aires',\n          status: 'current',\n          progress: 65,\n          estimatedTime: 20,\n          lessons: [\n            { id: 'int-1', title: 'Primitives', type: 'video', duration: 30, completed: true },\n            { id: 'int-2', title: 'Intégrale définie', type: 'lesson', duration: 25, completed: true },\n            { id: 'int-3', title: 'Calcul d\\'aires', type: 'lesson', duration: 20, completed: false },\n            { id: 'int-4', title: 'Exercices d\\'intégration', type: 'quiz', duration: 25, completed: false }\n          ],\n          skills: ['Calcul de primitives', 'Intégration par parties', 'Calcul d\\'aires'],\n          prerequisites: ['derivatives']\n        },\n        {\n          id: 'exponential',\n          title: 'Fonction exponentielle',\n          description: 'Propriétés et applications de la fonction exponentielle',\n          status: 'locked',\n          progress: 0,\n          estimatedTime: 12,\n          lessons: [\n            { id: 'exp-1', title: 'Définition et propriétés', type: 'video', duration: 20, completed: false },\n            { id: 'exp-2', title: 'Dérivée et primitive', type: 'lesson', duration: 15, completed: false },\n            { id: 'exp-3', title: 'Équations exponentielles', type: 'lesson', duration: 20, completed: false },\n            { id: 'exp-4', title: 'Applications', type: 'quiz', duration: 15, completed: false }\n          ],\n          skills: ['Propriétés exponentielles', 'Résolution d\\'équations', 'Modélisation'],\n          prerequisites: ['integrals']\n        },\n        {\n          id: 'logarithm',\n          title: 'Fonction logarithme',\n          description: 'Fonction logarithme népérien et ses applications',\n          status: 'locked',\n          progress: 0,\n          estimatedTime: 12,\n          lessons: [\n            { id: 'log-1', title: 'Définition du logarithme', type: 'video', duration: 20, completed: false },\n            { id: 'log-2', title: 'Propriétés algébriques', type: 'lesson', duration: 15, completed: false },\n            { id: 'log-3', title: 'Dérivée et étude', type: 'lesson', duration: 20, completed: false },\n            { id: 'log-4', title: 'Exercices pratiques', type: 'quiz', duration: 15, completed: false }\n          ],\n          skills: ['Propriétés logarithmiques', 'Équations logarithmiques', 'Études de fonctions'],\n          prerequisites: ['exponential']\n        },\n        {\n          id: 'trigonometry',\n          title: 'Trigonométrie avancée',\n          description: 'Fonctions trigonométriques et leurs applications',\n          status: 'locked',\n          progress: 0,\n          estimatedTime: 16,\n          lessons: [\n            { id: 'trig-1', title: 'Cercle trigonométrique', type: 'video', duration: 25, completed: false },\n            { id: 'trig-2', title: 'Fonctions sin, cos, tan', type: 'lesson', duration: 30, completed: false },\n            { id: 'trig-3', title: 'Équations trigonométriques', type: 'lesson', duration: 25, completed: false },\n            { id: 'trig-4', title: 'Applications géométriques', type: 'quiz', duration: 20, completed: false }\n          ],\n          skills: ['Résolution d\\'équations', 'Transformations', 'Géométrie'],\n          prerequisites: ['derivatives']\n        },\n        {\n          id: 'probability',\n          title: 'Probabilités',\n          description: 'Calcul des probabilités et lois de probabilité',\n          status: 'locked',\n          progress: 0,\n          estimatedTime: 22,\n          lessons: [\n            { id: 'prob-1', title: 'Probabilités conditionnelles', type: 'video', duration: 30, completed: false },\n            { id: 'prob-2', title: 'Variables aléatoires', type: 'lesson', duration: 35, completed: false },\n            { id: 'prob-3', title: 'Loi binomiale', type: 'lesson', duration: 25, completed: false },\n            { id: 'prob-4', title: 'Loi normale', type: 'lesson', duration: 30, completed: false },\n            { id: 'prob-5', title: 'Exercices de synthèse', type: 'quiz', duration: 40, completed: false }\n          ],\n          skills: ['Probabilités conditionnelles', 'Lois de probabilité', 'Statistiques'],\n          prerequisites: ['integrals']\n        },\n        {\n          id: 'geometry',\n          title: 'Géométrie dans l\\'espace',\n          description: 'Géométrie vectorielle et dans l\\'espace',\n          status: 'locked',\n          progress: 0,\n          estimatedTime: 18,\n          lessons: [\n            { id: 'geo-1', title: 'Vecteurs dans l\\'espace', type: 'video', duration: 25, completed: false },\n            { id: 'geo-2', title: 'Produit scalaire', type: 'lesson', duration: 20, completed: false },\n            { id: 'geo-3', title: 'Équations de plans', type: 'lesson', duration: 30, completed: false },\n            { id: 'geo-4', title: 'Géométrie analytique', type: 'quiz', duration: 25, completed: false }\n          ],\n          skills: ['Calcul vectoriel', 'Géométrie analytique', 'Équations de droites et plans'],\n          prerequisites: ['derivatives']\n        }\n      ]\n    }\n  };\n\n  useEffect(() => {\n    loadLearningPath();\n  }, [subject, studentId]);\n\n  const loadLearningPath = async () => {\n    try {\n      setLoading(true);\n      \n      // Simuler le chargement des données\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      const path = learningPaths[subject];\n      if (path) {\n        setCurrentPath(path);\n        \n        // Calculer la progression globale\n        const totalLessons = path.modules.reduce((acc, module) => acc + module.lessons.length, 0);\n        const completedLessons = path.modules.reduce((acc, module) => \n          acc + module.lessons.filter(lesson => lesson.completed).length, 0\n        );\n        \n        setProgress({\n          overall: Math.round((completedLessons / totalLessons) * 100),\n          modules: path.modules.reduce((acc, module) => {\n            acc[module.id] = module.progress;\n            return acc;\n          }, {})\n        });\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement du parcours:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'completed':\n        return <CheckCircle className=\"h-6 w-6 text-green-500\" />;\n      case 'current':\n        return <Play className=\"h-6 w-6 text-blue-500\" />;\n      case 'locked':\n        return <Lock className=\"h-6 w-6 text-gray-400\" />;\n      default:\n        return <Circle className=\"h-6 w-6 text-gray-300\" />;\n    }\n  };\n\n  const getLessonIcon = (type) => {\n    switch (type) {\n      case 'video':\n        return <Video className=\"h-4 w-4\" />;\n      case 'lesson':\n        return <BookOpen className=\"h-4 w-4\" />;\n      case 'quiz':\n        return <FileText className=\"h-4 w-4\" />;\n      default:\n        return <Circle className=\"h-4 w-4\" />;\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'completed':\n        return 'bg-green-100 text-green-800';\n      case 'current':\n        return 'bg-blue-100 text-blue-800';\n      case 'locked':\n        return 'bg-gray-100 text-gray-500';\n      default:\n        return 'bg-gray-100 text-gray-500';\n    }\n  };\n\n  const canAccessModule = (module) => {\n    if (module.prerequisites.length === 0) return true;\n    \n    return module.prerequisites.every(prereqId => {\n      const prereqModule = currentPath.modules.find(m => m.id === prereqId);\n      return prereqModule && prereqModule.status === 'completed';\n    });\n  };\n\n  const startModule = (moduleId) => {\n    // Logique pour démarrer un module\n    console.log('Démarrage du module:', moduleId);\n  };\n\n  const continueModule = (moduleId) => {\n    // Logique pour continuer un module\n    console.log('Continuation du module:', moduleId);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-8 bg-gray-200 rounded w-1/3 mb-4\"></div>\n          <div className=\"h-4 bg-gray-200 rounded w-2/3 mb-6\"></div>\n          <div className=\"grid gap-4\">\n            {[...Array(3)].map((_, i) => (\n              <div key={i} className=\"h-32 bg-gray-200 rounded\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!currentPath) {\n    return (\n      <div className=\"text-center py-12\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n          Parcours non trouvé\n        </h2>\n        <p className=\"text-gray-600\">\n          Le parcours d'apprentissage demandé n'existe pas.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* En-tête du parcours */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex justify-between items-start\">\n            <div>\n              <CardTitle className=\"text-2xl\">{currentPath.title}</CardTitle>\n              <CardDescription className=\"text-lg mt-2\">\n                {currentPath.description}\n              </CardDescription>\n            </div>\n            <Badge variant=\"outline\" className=\"text-sm\">\n              {currentPath.difficulty}\n            </Badge>\n          </div>\n        </CardHeader>\n        \n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-6\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-blue-600\">{progress.overall}%</div>\n              <div className=\"text-sm text-gray-600\">Progression globale</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-green-600\">{currentPath.totalModules}</div>\n              <div className=\"text-sm text-gray-600\">Modules</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-purple-600\">{currentPath.estimatedHours}h</div>\n              <div className=\"text-sm text-gray-600\">Durée estimée</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-orange-600\">\n                {currentPath.modules.filter(m => m.status === 'completed').length}\n              </div>\n              <div className=\"text-sm text-gray-600\">Modules terminés</div>\n            </div>\n          </div>\n          \n          <Progress value={progress.overall} className=\"h-3\" />\n        </CardContent>\n      </Card>\n\n      {/* Liste des modules */}\n      <div className=\"space-y-4\">\n        {currentPath.modules.map((module, index) => {\n          const isAccessible = canAccessModule(module);\n          const completedLessons = module.lessons.filter(l => l.completed).length;\n          \n          return (\n            <Card key={module.id} className={`transition-all duration-200 ${\n              module.status === 'current' ? 'ring-2 ring-blue-500 shadow-lg' : ''\n            } ${!isAccessible ? 'opacity-60' : 'hover:shadow-md'}`}>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-start space-x-4\">\n                  {/* Icône de statut */}\n                  <div className=\"flex-shrink-0 mt-1\">\n                    {getStatusIcon(module.status)}\n                  </div>\n                  \n                  {/* Contenu principal */}\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h3 className=\"text-lg font-semibold text-gray-900\">\n                        {index + 1}. {module.title}\n                      </h3>\n                      <Badge className={getStatusColor(module.status)}>\n                        {module.status === 'completed' ? 'Terminé' : \n                         module.status === 'current' ? 'En cours' : 'Verrouillé'}\n                      </Badge>\n                    </div>\n                    \n                    <p className=\"text-gray-600 mb-4\">{module.description}</p>\n                    \n                    {/* Progression du module */}\n                    <div className=\"mb-4\">\n                      <div className=\"flex justify-between text-sm text-gray-600 mb-1\">\n                        <span>Progression</span>\n                        <span>{completedLessons}/{module.lessons.length} leçons</span>\n                      </div>\n                      <Progress value={module.progress} className=\"h-2\" />\n                    </div>\n                    \n                    {/* Informations du module */}\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n                      <div className=\"flex items-center text-sm text-gray-600\">\n                        <Clock className=\"h-4 w-4 mr-2\" />\n                        {module.estimatedTime}h estimées\n                      </div>\n                      <div className=\"flex items-center text-sm text-gray-600\">\n                        <Target className=\"h-4 w-4 mr-2\" />\n                        {module.lessons.length} leçons\n                      </div>\n                      <div className=\"flex items-center text-sm text-gray-600\">\n                        <Award className=\"h-4 w-4 mr-2\" />\n                        {module.skills.length} compétences\n                      </div>\n                    </div>\n                    \n                    {/* Compétences */}\n                    <div className=\"mb-4\">\n                      <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Compétences acquises :</h4>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {module.skills.map((skill, skillIndex) => (\n                          <Badge key={skillIndex} variant=\"secondary\" className=\"text-xs\">\n                            {skill}\n                          </Badge>\n                        ))}\n                      </div>\n                    </div>\n                    \n                    {/* Leçons (si module en cours ou terminé) */}\n                    {(module.status === 'current' || module.status === 'completed') && (\n                      <div className=\"mb-4\">\n                        <h4 className=\"text-sm font-medium text-gray-900 mb-3\">Leçons :</h4>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n                          {module.lessons.map((lesson) => (\n                            <div key={lesson.id} className={`flex items-center space-x-3 p-2 rounded ${\n                              lesson.completed ? 'bg-green-50' : 'bg-gray-50'\n                            }`}>\n                              <div className={`h-4 w-4 ${lesson.completed ? 'text-green-500' : 'text-gray-400'}`}>\n                                {lesson.completed ? <CheckCircle className=\"h-4 w-4\" /> : getLessonIcon(lesson.type)}\n                              </div>\n                              <span className={`text-sm flex-1 ${lesson.completed ? 'text-green-700' : 'text-gray-700'}`}>\n                                {lesson.title}\n                              </span>\n                              <span className=\"text-xs text-gray-500\">{lesson.duration}min</span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                    \n                    {/* Prérequis */}\n                    {module.prerequisites.length > 0 && (\n                      <div className=\"mb-4\">\n                        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Prérequis :</h4>\n                        <div className=\"flex flex-wrap gap-2\">\n                          {module.prerequisites.map((prereqId) => {\n                            const prereqModule = currentPath.modules.find(m => m.id === prereqId);\n                            return (\n                              <Badge key={prereqId} variant=\"outline\" className=\"text-xs\">\n                                {prereqModule?.title}\n                              </Badge>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    )}\n                    \n                    {/* Actions */}\n                    <div className=\"flex space-x-3\">\n                      {module.status === 'current' && (\n                        <Button onClick={() => continueModule(module.id)}>\n                          <Play className=\"h-4 w-4 mr-2\" />\n                          Continuer\n                        </Button>\n                      )}\n                      \n                      {module.status === 'locked' && isAccessible && (\n                        <Button onClick={() => startModule(module.id)} variant=\"outline\">\n                          <Play className=\"h-4 w-4 mr-2\" />\n                          Commencer\n                        </Button>\n                      )}\n                      \n                      {module.status === 'completed' && (\n                        <Button variant=\"outline\" onClick={() => continueModule(module.id)}>\n                          <TrendingUp className=\"h-4 w-4 mr-2\" />\n                          Réviser\n                        </Button>\n                      )}\n                      \n                      {!isAccessible && module.status === 'locked' && (\n                        <Button disabled variant=\"outline\">\n                          <Lock className=\"h-4 w-4 mr-2\" />\n                          Verrouillé\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      {/* Récompenses et badges */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center\">\n            <Award className=\"h-5 w-5 mr-2\" />\n            Récompenses et badges\n          </CardTitle>\n          <CardDescription>\n            Vos accomplissements dans ce parcours\n          </CardDescription>\n        </CardHeader>\n        \n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center p-4 bg-yellow-50 rounded-lg\">\n              <Star className=\"h-8 w-8 text-yellow-500 mx-auto mb-2\" />\n              <div className=\"text-sm font-medium\">Débutant</div>\n              <div className=\"text-xs text-gray-600\">Premier module terminé</div>\n            </div>\n            \n            <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n              <Target className=\"h-8 w-8 text-blue-500 mx-auto mb-2\" />\n              <div className=\"text-sm font-medium\">Persévérant</div>\n              <div className=\"text-xs text-gray-600\">3 modules terminés</div>\n            </div>\n            \n            <div className=\"text-center p-4 bg-gray-100 rounded-lg opacity-50\">\n              <TrendingUp className=\"h-8 w-8 text-gray-400 mx-auto mb-2\" />\n              <div className=\"text-sm font-medium\">Expert</div>\n              <div className=\"text-xs text-gray-600\">Tous les modules terminés</div>\n            </div>\n            \n            <div className=\"text-center p-4 bg-gray-100 rounded-lg opacity-50\">\n              <Award className=\"h-8 w-8 text-gray-400 mx-auto mb-2\" />\n              <div className=\"text-sm font-medium\">Maître</div>\n              <div className=\"text-xs text-gray-600\">100% de réussite aux quiz</div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Badge } from './ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';\n\nconst TeacherProfiles = () => {\n  const [selectedTeacher, setSelectedTeacher] = useState(null);\n  const [filterSubject, setFilterSubject] = useState('all');\n\n  // Données des enseignants\n  const teachers = [\n    {\n      id: 1,\n      name: \"Dr. Amina Benali\",\n      title: \"Professeure Agrégée de Mathématiques\",\n      subjects: [\"Mathématiques\", \"Spécialité Maths\"],\n      level: \"Terminale\",\n      experience: \"15 ans\",\n      education: [\n        \"Agrégation de Mathématiques\",\n        \"Doctorat en Mathématiques Appliquées\",\n        \"Master en Pédagogie Numérique\"\n      ],\n      specialties: [\n        \"Analyse complexe\",\n        \"Probabilités et statistiques\",\n        \"Préparation concours\",\n        \"Méthodes pédagogiques innovantes\"\n      ],\n      achievements: [\n        \"Formatrice académique\",\n        \"Auteure de manuels scolaires\",\n        \"Jury de concours nationaux\",\n        \"Prix de l'innovation pédagogique 2023\"\n      ],\n      rating: 4.9,\n      reviews: 127,\n      availability: \"Lundi, Mercredi, Vendredi\",\n      languages: [\"Français\", \"Arabe\", \"Anglais\"],\n      methodology: \"Approche progressive avec visualisations et applications concrètes. Adaptation au rythme de chaque élève.\",\n      testimonials: [\n        {\n          student: \"Sarah M.\",\n          comment: \"Grâce à Dr. Benali, j'ai enfin compris les intégrales ! Sa méthode est claire et patiente.\",\n          rating: 5,\n          date: \"2024-01-15\"\n        },\n        {\n          student: \"Ahmed K.\",\n          comment: \"Excellente préparation pour le bac. Résultats au-delà de mes espérances.\",\n          rating: 5,\n          date: \"2024-01-10\"\n        }\n      ],\n      photo: \"/api/placeholder/150/150\",\n      certifications: [\"AEFE\", \"Agrégation\", \"Formation continue\"],\n      price: \"120 DT/h\"\n    },\n    {\n      id: 2,\n      name: \"M. Karim Trabelsi\",\n      title: \"Professeur Certifié NSI - DIU\",\n      subjects: [\"NSI\", \"Informatique\", \"Python\"],\n      level: \"Première, Terminale\",\n      experience: \"12 ans\",\n      education: [\n        \"DIU Enseigner l'Informatique au Lycée\",\n        \"Master en Informatique\",\n        \"Certification Python Institute\"\n      ],\n      specialties: [\n        \"Programmation Python\",\n        \"Algorithmes et structures de données\",\n        \"Bases de données\",\n        \"Intelligence artificielle\",\n        \"Préparation Grand Oral NSI\"\n      ],\n      achievements: [\n        \"Formateur DIU NSI\",\n        \"Développeur applications éducatives\",\n        \"Intervenant conférences tech\",\n        \"Mentor concours informatique\"\n      ],\n      rating: 4.8,\n      reviews: 89,\n      availability: \"Mardi, Jeudi, Samedi\",\n      languages: [\"Français\", \"Arabe\", \"Anglais\"],\n      methodology: \"Apprentissage par projets concrets. Coding sessions interactives et debugging collaboratif.\",\n      testimonials: [\n        {\n          student: \"Léa D.\",\n          comment: \"M. Trabelsi rend la programmation accessible et passionnante. Projets très motivants !\",\n          rating: 5,\n          date: \"2024-01-20\"\n        },\n        {\n          student: \"Youssef H.\",\n          comment: \"Préparation parfaite pour le Grand Oral NSI. Confiance retrouvée !\",\n          rating: 5,\n          date: \"2024-01-18\"\n        }\n      ],\n      photo: \"/api/placeholder/150/150\",\n      certifications: [\"AEFE\", \"DIU NSI\", \"Python Institute\"],\n      price: \"110 DT/h\"\n    },\n    {\n      id: 3,\n      name: \"Dr. Fatma Mansouri\",\n      title: \"Professeure Agrégée de Physique-Chimie\",\n      subjects: [\"Physique-Chimie\", \"Sciences\"],\n      level: \"Première, Terminale\",\n      experience: \"18 ans\",\n      education: [\n        \"Agrégation de Physique\",\n        \"Doctorat en Physique des Matériaux\",\n        \"Formation pédagogie expérimentale\"\n      ],\n      specialties: [\n        \"Mécanique quantique\",\n        \"Thermodynamique\",\n        \"Chimie organique\",\n        \"Expériences virtuelles\",\n        \"Préparation CPGE\"\n      ],\n      achievements: [\n        \"Responsable laboratoire lycée\",\n        \"Formatrice expériences numériques\",\n        \"Jury olympiades scientifiques\",\n        \"Auteure ressources pédagogiques\"\n      ],\n      rating: 4.9,\n      reviews: 156,\n      availability: \"Lundi, Mercredi, Vendredi, Samedi\",\n      languages: [\"Français\", \"Arabe\", \"Anglais\"],\n      methodology: \"Expériences concrètes et simulations. Liens théorie-pratique avec exemples du quotidien.\",\n      testimonials: [\n        {\n          student: \"Nour B.\",\n          comment: \"Les expériences de Dr. Mansouri sont fascinantes. La physique devient concrète !\",\n          rating: 5,\n          date: \"2024-01-22\"\n        },\n        {\n          student: \"Marc L.\",\n          comment: \"Préparation excellente pour les études d'ingénieur. Bases solides acquises.\",\n          rating: 5,\n          date: \"2024-01-16\"\n        }\n      ],\n      photo: \"/api/placeholder/150/150\",\n      certifications: [\"AEFE\", \"Agrégation\", \"Sécurité laboratoire\"],\n      price: \"115 DT/h\"\n    },\n    {\n      id: 4,\n      name: \"Mme. Sonia Gharbi\",\n      title: \"Professeure Certifiée de Français\",\n      subjects: [\"Français\", \"Littérature\", \"Grand Oral\"],\n      level: \"Première, Terminale\",\n      experience: \"14 ans\",\n      education: [\n        \"CAPES de Lettres Modernes\",\n        \"Master en Littérature Française\",\n        \"Formation Grand Oral\"\n      ],\n      specialties: [\n        \"Analyse littéraire\",\n        \"Expression écrite et orale\",\n        \"Préparation Grand Oral\",\n        \"Méthodologie dissertation\",\n        \"Théâtre et argumentation\"\n      ],\n      achievements: [\n        \"Jury Grand Oral\",\n        \"Formatrice expression orale\",\n        \"Coordinatrice projets théâtre\",\n        \"Auteure méthodes pédagogiques\"\n      ],\n      rating: 4.8,\n      reviews: 134,\n      availability: \"Mardi, Jeudi, Vendredi\",\n      languages: [\"Français\", \"Arabe\", \"Italien\"],\n      methodology: \"Approche créative et interactive. Ateliers d'écriture et débats argumentés.\",\n      testimonials: [\n        {\n          student: \"Ines K.\",\n          comment: \"Mme Gharbi m'a donné confiance en moi pour l'oral. Méthodes très efficaces !\",\n          rating: 5,\n          date: \"2024-01-25\"\n        },\n        {\n          student: \"Thomas R.\",\n          comment: \"Analyse littéraire devenue passionnante. Résultats en nette progression.\",\n          rating: 5,\n          date: \"2024-01-12\"\n        }\n      ],\n      photo: \"/api/placeholder/150/150\",\n      certifications: [\"AEFE\", \"CAPES\", \"Grand Oral\"],\n      price: \"105 DT/h\"\n    },\n    {\n      id: 5,\n      name: \"M. Mehdi Bouaziz\",\n      title: \"Professeur Certifié de Philosophie\",\n      subjects: [\"Philosophie\", \"Méthodologie\", \"Grand Oral\"],\n      level: \"Terminale\",\n      experience: \"11 ans\",\n      education: [\n        \"CAPES de Philosophie\",\n        \"Master en Philosophie Politique\",\n        \"Formation pensée critique\"\n      ],\n      specialties: [\n        \"Dissertation philosophique\",\n        \"Explication de texte\",\n        \"Pensée critique\",\n        \"Éthique et morale\",\n        \"Préparation Grand Oral\"\n      ],\n      achievements: [\n        \"Formateur académique\",\n        \"Animateur cafés philo\",\n        \"Jury concours éloquence\",\n        \"Auteur articles pédagogiques\"\n      ],\n      rating: 4.7,\n      reviews: 98,\n      availability: \"Lundi, Mercredi, Jeudi\",\n      languages: [\"Français\", \"Arabe\", \"Allemand\"],\n      methodology: \"Socratic questioning et débats structurés. Développement de l'esprit critique.\",\n      testimonials: [\n        {\n          student: \"Amira S.\",\n          comment: \"M. Bouaziz rend la philosophie accessible et passionnante. Méthode claire !\",\n          rating: 5,\n          date: \"2024-01-19\"\n        },\n        {\n          student: \"Lucas M.\",\n          comment: \"Préparation parfaite pour le bac philo. Confiance et méthode acquises.\",\n          rating: 4,\n          date: \"2024-01-14\"\n        }\n      ],\n      photo: \"/api/placeholder/150/150\",\n      certifications: [\"AEFE\", \"CAPES\", \"Formation continue\"],\n      price: \"100 DT/h\"\n    }\n  ];\n\n  const subjects = [\"Mathématiques\", \"NSI\", \"Physique-Chimie\", \"Français\", \"Philosophie\"];\n\n  const filteredTeachers = filterSubject === 'all' \n    ? teachers \n    : teachers.filter(teacher => teacher.subjects.includes(filterSubject));\n\n  const renderStars = (rating) => {\n    return Array.from({ length: 5 }, (_, i) => (\n      <span key={i} className={i < Math.floor(rating) ? \"text-yellow-400\" : \"text-gray-300\"}>\n        ⭐\n      </span>\n    ));\n  };\n\n  const TeacherCard = ({ teacher }) => (\n    <Card className=\"hover:shadow-lg transition-shadow duration-200 cursor-pointer\"\n          onClick={() => setSelectedTeacher(teacher)}>\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex items-start space-x-4\">\n          <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold text-xl\">\n            {teacher.name.split(' ').map(n => n[0]).join('')}\n          </div>\n          <div className=\"flex-1\">\n            <CardTitle className=\"text-lg font-semibold text-gray-900\">\n              {teacher.name}\n            </CardTitle>\n            <p className=\"text-sm text-gray-600 mb-2\">{teacher.title}</p>\n            <div className=\"flex items-center space-x-2 mb-2\">\n              <div className=\"flex\">{renderStars(teacher.rating)}</div>\n              <span className=\"text-sm text-gray-600\">\n                {teacher.rating} ({teacher.reviews} avis)\n              </span>\n            </div>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-lg font-bold text-blue-600\">{teacher.price}</div>\n            <div className=\"text-xs text-gray-500\">par heure</div>\n          </div>\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        <div className=\"space-y-3\">\n          {/* Matières enseignées */}\n          <div>\n            <h4 className=\"text-sm font-medium text-gray-700 mb-1\">Matières</h4>\n            <div className=\"flex flex-wrap gap-1\">\n              {teacher.subjects.map((subject, index) => (\n                <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                  {subject}\n                </Badge>\n              ))}\n            </div>\n          </div>\n\n          {/* Spécialités */}\n          <div>\n            <h4 className=\"text-sm font-medium text-gray-700 mb-1\">Spécialités</h4>\n            <div className=\"flex flex-wrap gap-1\">\n              {teacher.specialties.slice(0, 3).map((specialty, index) => (\n                <Badge key={index} className=\"text-xs bg-blue-100 text-blue-800\">\n                  {specialty}\n                </Badge>\n              ))}\n              {teacher.specialties.length > 3 && (\n                <Badge className=\"text-xs bg-gray-100 text-gray-600\">\n                  +{teacher.specialties.length - 3}\n                </Badge>\n              )}\n            </div>\n          </div>\n\n          {/* Certifications */}\n          <div>\n            <h4 className=\"text-sm font-medium text-gray-700 mb-1\">Certifications</h4>\n            <div className=\"flex flex-wrap gap-1\">\n              {teacher.certifications.map((cert, index) => (\n                <Badge key={index} className=\"text-xs bg-green-100 text-green-800\">\n                  ✓ {cert}\n                </Badge>\n              ))}\n            </div>\n          </div>\n\n          {/* Expérience et disponibilité */}\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">Expérience:</span>\n              <div className=\"font-medium\">{teacher.experience}</div>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Niveau:</span>\n              <div className=\"font-medium\">{teacher.level}</div>\n            </div>\n          </div>\n\n          {/* Méthodologie */}\n          <div>\n            <h4 className=\"text-sm font-medium text-gray-700 mb-1\">Approche pédagogique</h4>\n            <p className=\"text-xs text-gray-600 line-clamp-2\">{teacher.methodology}</p>\n          </div>\n\n          {/* Actions */}\n          <div className=\"flex space-x-2 pt-2\">\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              className=\"flex-1\"\n              onClick={(e) => {\n                e.stopPropagation();\n                setSelectedTeacher(teacher);\n              }}\n            >\n              👁️ Profil complet\n            </Button>\n            <Button \n              size=\"sm\" \n              className=\"flex-1 bg-blue-600 hover:bg-blue-700\"\n              onClick={(e) => {\n                e.stopPropagation();\n                // Logique de réservation\n                console.log('Réserver avec', teacher.name);\n              }}\n            >\n              📅 Réserver\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  const TeacherDetailModal = ({ teacher, onClose }) => (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n        <div className=\"p-6\">\n          {/* En-tête */}\n          <div className=\"flex items-start justify-between mb-6\">\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"w-20 h-20 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold text-2xl\">\n                {teacher.name.split(' ').map(n => n[0]).join('')}\n              </div>\n              <div>\n                <h2 className=\"text-2xl font-bold text-gray-900\">{teacher.name}</h2>\n                <p className=\"text-gray-600 mb-2\">{teacher.title}</p>\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"flex\">{renderStars(teacher.rating)}</div>\n                  <span className=\"text-sm text-gray-600\">\n                    {teacher.rating}/5 ({teacher.reviews} avis)\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"text-right mr-4\">\n                <div className=\"text-2xl font-bold text-blue-600\">{teacher.price}</div>\n                <div className=\"text-sm text-gray-500\">par heure</div>\n              </div>\n              <Button variant=\"outline\" onClick={onClose}>✕</Button>\n            </div>\n          </div>\n\n          <Tabs defaultValue=\"overview\" className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-5\">\n              <TabsTrigger value=\"overview\">Vue d'ensemble</TabsTrigger>\n              <TabsTrigger value=\"education\">Formation</TabsTrigger>\n              <TabsTrigger value=\"methodology\">Méthode</TabsTrigger>\n              <TabsTrigger value=\"reviews\">Avis</TabsTrigger>\n              <TabsTrigger value=\"booking\">Réservation</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"overview\" className=\"mt-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <h3 className=\"text-lg font-semibold mb-3\">Matières enseignées</h3>\n                  <div className=\"flex flex-wrap gap-2 mb-4\">\n                    {teacher.subjects.map((subject, index) => (\n                      <Badge key={index} className=\"bg-blue-100 text-blue-800\">\n                        {subject}\n                      </Badge>\n                    ))}\n                  </div>\n\n                  <h3 className=\"text-lg font-semibold mb-3\">Spécialités</h3>\n                  <div className=\"space-y-2\">\n                    {teacher.specialties.map((specialty, index) => (\n                      <div key={index} className=\"flex items-center space-x-2\">\n                        <span className=\"text-blue-600\">•</span>\n                        <span className=\"text-sm\">{specialty}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"text-lg font-semibold mb-3\">Informations pratiques</h3>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Expérience:</span>\n                      <span className=\"font-medium\">{teacher.experience}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Niveau:</span>\n                      <span className=\"font-medium\">{teacher.level}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Disponibilité:</span>\n                      <span className=\"font-medium\">{teacher.availability}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Langues:</span>\n                      <span className=\"font-medium\">{teacher.languages.join(', ')}</span>\n                    </div>\n                  </div>\n\n                  <h3 className=\"text-lg font-semibold mb-3 mt-6\">Réalisations</h3>\n                  <div className=\"space-y-2\">\n                    {teacher.achievements.map((achievement, index) => (\n                      <div key={index} className=\"flex items-center space-x-2\">\n                        <span className=\"text-green-600\">✓</span>\n                        <span className=\"text-sm\">{achievement}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"education\" className=\"mt-6\">\n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"text-lg font-semibold mb-3\">Formation académique</h3>\n                  <div className=\"space-y-3\">\n                    {teacher.education.map((edu, index) => (\n                      <div key={index} className=\"flex items-center space-x-3 p-3 bg-gray-50 rounded-lg\">\n                        <div className=\"w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-white text-sm font-bold\">\n                          {index + 1}\n                        </div>\n                        <span>{edu}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"text-lg font-semibold mb-3\">Certifications</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\n                    {teacher.certifications.map((cert, index) => (\n                      <div key={index} className=\"p-3 border border-green-200 rounded-lg bg-green-50\">\n                        <div className=\"flex items-center space-x-2\">\n                          <span className=\"text-green-600\">✓</span>\n                          <span className=\"font-medium text-green-800\">{cert}</span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"methodology\" className=\"mt-6\">\n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"text-lg font-semibold mb-3\">Approche pédagogique</h3>\n                  <p className=\"text-gray-700 leading-relaxed\">{teacher.methodology}</p>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"p-4 bg-blue-50 rounded-lg\">\n                    <h4 className=\"font-semibold text-blue-900 mb-2\">🎯 Objectifs</h4>\n                    <ul className=\"text-sm text-blue-800 space-y-1\">\n                      <li>• Maîtrise des concepts fondamentaux</li>\n                      <li>• Développement de l'autonomie</li>\n                      <li>• Préparation optimale aux examens</li>\n                      <li>• Confiance en soi renforcée</li>\n                    </ul>\n                  </div>\n\n                  <div className=\"p-4 bg-green-50 rounded-lg\">\n                    <h4 className=\"font-semibold text-green-900 mb-2\">⚙️ Méthodes</h4>\n                    <ul className=\"text-sm text-green-800 space-y-1\">\n                      <li>• Cours interactifs et personnalisés</li>\n                      <li>• Exercices progressifs adaptés</li>\n                      <li>• Suivi régulier des progrès</li>\n                      <li>• Feedback constructif continu</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"reviews\" className=\"mt-6\">\n              <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                  <h3 className=\"text-lg font-semibold\">Avis des élèves</h3>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"flex\">{renderStars(teacher.rating)}</div>\n                    <span className=\"font-medium\">{teacher.rating}/5</span>\n                    <span className=\"text-gray-600\">({teacher.reviews} avis)</span>\n                  </div>\n                </div>\n\n                <div className=\"space-y-4\">\n                  {teacher.testimonials.map((testimonial, index) => (\n                    <div key={index} className=\"p-4 border border-gray-200 rounded-lg\">\n                      <div className=\"flex items-start justify-between mb-2\">\n                        <div className=\"flex items-center space-x-2\">\n                          <div className=\"w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center text-sm font-medium\">\n                            {testimonial.student[0]}\n                          </div>\n                          <span className=\"font-medium\">{testimonial.student}</span>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <div className=\"flex\">{renderStars(testimonial.rating)}</div>\n                          <span className=\"text-sm text-gray-500\">\n                            {new Date(testimonial.date).toLocaleDateString('fr-FR')}\n                          </span>\n                        </div>\n                      </div>\n                      <p className=\"text-gray-700 text-sm\">{testimonial.comment}</p>\n                    </div>\n                  ))}\n                </div>\n\n                <Button variant=\"outline\" className=\"w-full\">\n                  📝 Voir tous les avis\n                </Button>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"booking\" className=\"mt-6\">\n              <div className=\"space-y-6\">\n                <div className=\"p-6 bg-blue-50 rounded-lg\">\n                  <h3 className=\"text-lg font-semibold text-blue-900 mb-4\">\n                    Réserver un cours avec {teacher.name}\n                  </h3>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Type de cours\n                      </label>\n                      <select className=\"w-full p-2 border border-gray-300 rounded-md\">\n                        <option>Cours individuel (1:1)</option>\n                        <option>Mini-groupe (3-5 élèves)</option>\n                        <option>Stage intensif</option>\n                      </select>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Matière\n                      </label>\n                      <select className=\"w-full p-2 border border-gray-300 rounded-md\">\n                        {teacher.subjects.map((subject, index) => (\n                          <option key={index}>{subject}</option>\n                        ))}\n                      </select>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Date souhaitée\n                      </label>\n                      <input \n                        type=\"date\" \n                        className=\"w-full p-2 border border-gray-300 rounded-md\"\n                        min={new Date().toISOString().split('T')[0]}\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Heure souhaitée\n                      </label>\n                      <select className=\"w-full p-2 border border-gray-300 rounded-md\">\n                        <option>09:00 - 10:00</option>\n                        <option>10:00 - 11:00</option>\n                        <option>14:00 - 15:00</option>\n                        <option>15:00 - 16:00</option>\n                        <option>16:00 - 17:00</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div className=\"mt-4\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Message (optionnel)\n                    </label>\n                    <textarea \n                      className=\"w-full p-2 border border-gray-300 rounded-md\"\n                      rows=\"3\"\n                      placeholder=\"Décrivez vos objectifs ou besoins spécifiques...\"\n                    ></textarea>\n                  </div>\n\n                  <div className=\"mt-6 flex space-x-3\">\n                    <Button className=\"flex-1 bg-blue-600 hover:bg-blue-700\">\n                      📅 Réserver maintenant\n                    </Button>\n                    <Button variant=\"outline\" className=\"flex-1\">\n                      💬 Contacter d'abord\n                    </Button>\n                  </div>\n                </div>\n\n                <div className=\"p-4 bg-gray-50 rounded-lg\">\n                  <h4 className=\"font-semibold mb-2\">📋 Informations importantes</h4>\n                  <ul className=\"text-sm text-gray-600 space-y-1\">\n                    <li>• Confirmation sous 24h par le professeur</li>\n                    <li>• Annulation gratuite jusqu'à 24h avant</li>\n                    <li>• Premier cours d'évaluation offert</li>\n                    <li>• Paiement sécurisé après confirmation</li>\n                  </ul>\n                </div>\n              </div>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6\">\n      {/* En-tête */}\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n          👨‍🏫 Nos Enseignants d'Excellence\n        </h1>\n        <p className=\"text-gray-600\">\n          Professeurs certifiés et agrégés des établissements AEFE, experts dans leur domaine\n        </p>\n      </div>\n\n      {/* Filtres */}\n      <div className=\"bg-white rounded-lg shadow-sm border p-6 mb-6\">\n        <div className=\"flex items-center space-x-4\">\n          <label className=\"text-sm font-medium text-gray-700\">\n            Filtrer par matière:\n          </label>\n          <select\n            value={filterSubject}\n            onChange={(e) => setFilterSubject(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"all\">Toutes les matières</option>\n            {subjects.map(subject => (\n              <option key={subject} value={subject}>{subject}</option>\n            ))}\n          </select>\n          \n          <div className=\"flex-1\"></div>\n          \n          <div className=\"text-sm text-gray-600\">\n            {filteredTeachers.length} enseignant{filteredTeachers.length !== 1 ? 's' : ''} disponible{filteredTeachers.length !== 1 ? 's' : ''}\n          </div>\n        </div>\n      </div>\n\n      {/* Grille des enseignants */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {filteredTeachers.map((teacher) => (\n          <TeacherCard key={teacher.id} teacher={teacher} />\n        ))}\n      </div>\n\n      {/* Modal de détail */}\n      {selectedTeacher && (\n        <TeacherDetailModal \n          teacher={selectedTeacher} \n          onClose={() => setSelectedTeacher(null)} \n        />\n      )}\n\n      {/* Section d'information */}\n      <div className=\"mt-12 bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg p-8\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n            🏆 L'Excellence Pédagogique Nexus Réussite\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-6\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-blue-600 mb-2\">100%</div>\n              <div className=\"text-sm text-gray-600\">Enseignants certifiés AEFE</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-green-600 mb-2\">15+</div>\n              <div className=\"text-sm text-gray-600\">Années d'expérience moyenne</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-purple-600 mb-2\">4.8/5</div>\n              <div className=\"text-sm text-gray-600\">Note moyenne des élèves</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TeacherProfiles;\n\n","import React, { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card.jsx'\nimport { Button } from '@/components/ui/button.jsx'\nimport { Badge } from '@/components/ui/badge.jsx'\nimport { Progress } from '@/components/ui/progress.jsx'\nimport { \n  Trophy, \n  Star, \n  Award, \n  Target, \n  Zap, \n  Crown, \n  Medal, \n  Flame, \n  TrendingUp,\n  Calendar,\n  BookOpen,\n  Brain,\n  Users,\n  Gift,\n  Sparkles,\n  ChevronRight,\n  Lock,\n  CheckCircle,\n  Clock,\n  BarChart3,\n  PieChart,\n  Activity,\n  Lightbulb,\n  Heart,\n  Shield,\n  Rocket,\n  Diamond,\n  Gem,\n  Coins,\n  Plus,\n  ArrowUp,\n  ArrowDown,\n  Minus\n} from 'lucide-react'\n\nconst Gamification = ({ \n  student, \n  onUpdateProgress, \n  onUnlockBadge, \n  addNotification,\n  isVisible,\n  onClose \n}) => {\n  const [activeTab, setActiveTab] = useState('overview');\n  const [selectedBadge, setSelectedBadge] = useState(null);\n  const [showBadgeModal, setShowBadgeModal] = useState(false);\n  const [dailyStreak, setDailyStreak] = useState(student?.streak || 0);\n  const [weeklyXP, setWeeklyXP] = useState(0);\n  const [monthlyRank, setMonthlyRank] = useState(0);\n\n  // Système de niveaux et XP\n  const levelSystem = {\n    1: { min: 0, max: 100, title: 'Débutant', color: 'bg-gray-500', icon: BookOpen },\n    2: { min: 100, max: 300, title: 'Apprenti', color: 'bg-green-500', icon: Target },\n    3: { min: 300, max: 600, title: 'Étudiant', color: 'bg-blue-500', icon: Brain },\n    4: { min: 600, max: 1000, title: 'Expert', color: 'bg-purple-500', icon: Star },\n    5: { min: 1000, max: 1500, title: 'Maître', color: 'bg-orange-500', icon: Crown },\n    6: { min: 1500, max: 2500, title: 'Champion', color: 'bg-red-500', icon: Trophy },\n    7: { min: 2500, max: 4000, title: 'Légende', color: 'bg-yellow-500', icon: Medal },\n    8: { min: 4000, max: 6000, title: 'Génie', color: 'bg-pink-500', icon: Diamond },\n    9: { min: 6000, max: 10000, title: 'Prodige', color: 'bg-indigo-500', icon: Rocket },\n    10: { min: 10000, max: Infinity, title: 'Nexus Master', color: 'bg-gradient-to-r from-purple-500 to-pink-500', icon: Gem }\n  };\n\n  // Badges disponibles\n  const availableBadges = [\n    {\n      id: 'first-steps',\n      name: 'Premier pas',\n      description: 'Complétez votre première session',\n      icon: Target,\n      rarity: 'common',\n      xpReward: 50,\n      unlocked: true,\n      progress: 100,\n      category: 'progression'\n    },\n    {\n      id: 'streak-7',\n      name: 'Série de 7 jours',\n      description: 'Maintenez une série de 7 jours consécutifs',\n      icon: Flame,\n      rarity: 'uncommon',\n      xpReward: 100,\n      unlocked: dailyStreak >= 7,\n      progress: Math.min((dailyStreak / 7) * 100, 100),\n      category: 'régularité'\n    },\n    {\n      id: 'streak-15',\n      name: 'Série de 15 jours',\n      description: 'Maintenez une série de 15 jours consécutifs',\n      icon: Flame,\n      rarity: 'rare',\n      xpReward: 250,\n      unlocked: dailyStreak >= 15,\n      progress: Math.min((dailyStreak / 15) * 100, 100),\n      category: 'régularité'\n    },\n    {\n      id: 'math-expert',\n      name: 'Expert en fonctions',\n      description: 'Maîtrisez parfaitement les fonctions exponentielles',\n      icon: Brain,\n      rarity: 'rare',\n      xpReward: 200,\n      unlocked: student?.progress?.mathématiques >= 85,\n      progress: student?.progress?.mathématiques || 0,\n      category: 'matière'\n    },\n    {\n      id: 'python-master',\n      name: 'Maître Python',\n      description: 'Complétez 5 projets Python avec succès',\n      icon: Award,\n      rarity: 'epic',\n      xpReward: 300,\n      unlocked: false,\n      progress: 60,\n      category: 'compétence'\n    },\n    {\n      id: 'oral-champion',\n      name: 'Orateur confirmé',\n      description: 'Excellez dans 3 présentations orales',\n      icon: Crown,\n      rarity: 'epic',\n      xpReward: 350,\n      unlocked: student?.name === 'Léa Moreau',\n      progress: student?.name === 'Léa Moreau' ? 100 : 33,\n      category: 'compétence'\n    },\n    {\n      id: 'data-analyst',\n      name: 'Analyste de données',\n      description: 'Résolvez 10 problèmes de statistiques',\n      icon: BarChart3,\n      rarity: 'rare',\n      xpReward: 200,\n      unlocked: student?.name === 'Sarah Benali',\n      progress: student?.name === 'Sarah Benali' ? 100 : 70,\n      category: 'compétence'\n    },\n    {\n      id: 'problem-solver',\n      name: 'Résolveur de problèmes',\n      description: 'Trouvez des solutions créatives à 5 défis complexes',\n      icon: Lightbulb,\n      rarity: 'legendary',\n      xpReward: 500,\n      unlocked: student?.level >= 4,\n      progress: student?.level >= 4 ? 100 : (student?.level || 1) * 20,\n      category: 'excellence'\n    },\n    {\n      id: 'perfectionist',\n      name: 'Perfectionniste',\n      description: 'Obtenez 5 notes parfaites consécutives',\n      icon: Diamond,\n      rarity: 'legendary',\n      xpReward: 600,\n      unlocked: student?.name === 'Léa Moreau',\n      progress: student?.name === 'Léa Moreau' ? 100 : 0,\n      category: 'excellence'\n    },\n    {\n      id: 'team-player',\n      name: 'Esprit d\\'équipe',\n      description: 'Participez activement à 3 sessions de groupe',\n      icon: Users,\n      rarity: 'uncommon',\n      xpReward: 150,\n      unlocked: false,\n      progress: 33,\n      category: 'social'\n    },\n    {\n      id: 'early-bird',\n      name: 'Lève-tôt',\n      description: 'Assistez à 5 sessions matinales',\n      icon: Clock,\n      rarity: 'common',\n      xpReward: 75,\n      unlocked: false,\n      progress: 40,\n      category: 'habitude'\n    },\n    {\n      id: 'night-owl',\n      name: 'Couche-tard studieux',\n      description: 'Complétez 5 sessions d\\'étude tardives',\n      icon: Shield,\n      rarity: 'common',\n      xpReward: 75,\n      unlocked: false,\n      progress: 20,\n      category: 'habitude'\n    }\n  ];\n\n  // Défis quotidiens\n  const dailyChallenges = [\n    {\n      id: 'daily-math',\n      title: 'Défi Mathématiques',\n      description: 'Résolvez 3 exercices de probabilités',\n      xpReward: 50,\n      progress: 67,\n      completed: false,\n      timeLeft: '4h 32min',\n      difficulty: 'Moyen'\n    },\n    {\n      id: 'daily-reading',\n      title: 'Lecture Active',\n      description: 'Lisez et résumez un chapitre de cours',\n      xpReward: 30,\n      progress: 100,\n      completed: true,\n      timeLeft: 'Terminé',\n      difficulty: 'Facile'\n    },\n    {\n      id: 'daily-code',\n      title: 'Code du Jour',\n      description: 'Implémentez un algorithme de recherche',\n      xpReward: 75,\n      progress: 25,\n      completed: false,\n      timeLeft: '6h 15min',\n      difficulty: 'Difficile'\n    }\n  ];\n\n  // Récompenses hebdomadaires\n  const weeklyRewards = [\n    {\n      id: 'week-xp-bonus',\n      title: 'Bonus XP Hebdomadaire',\n      description: 'Gagnez 500 XP supplémentaires',\n      requirement: '7 jours d\\'activité',\n      progress: 85,\n      unlocked: false,\n      reward: '500 XP'\n    },\n    {\n      id: 'week-badge-hunt',\n      title: 'Chasseur de Badges',\n      description: 'Débloquez 2 nouveaux badges cette semaine',\n      requirement: '2 badges débloqués',\n      progress: 50,\n      unlocked: false,\n      reward: 'Badge spécial'\n    },\n    {\n      id: 'week-perfect-score',\n      title: 'Semaine Parfaite',\n      description: 'Maintenez une moyenne de 90% ou plus',\n      requirement: 'Moyenne ≥ 90%',\n      progress: student?.progress?.overall || 0,\n      unlocked: (student?.progress?.overall || 0) >= 90,\n      reward: 'Titre exclusif'\n    }\n  ];\n\n  // Classement mensuel\n  const monthlyLeaderboard = [\n    { rank: 1, name: 'Léa Moreau', xp: 4750, badge: 'Légende', avatar: 'LM' },\n    { rank: 2, name: 'Sarah Benali', xp: 3250, badge: 'Expert', avatar: 'SB' },\n    { rank: 3, name: 'Youssef Khelifi', xp: 2340, badge: 'Étudiant', avatar: 'YK' },\n    { rank: 4, name: 'Nour Hamdi', xp: 2100, badge: 'Étudiant', avatar: 'NH' },\n    { rank: 5, name: 'Ahmed Trabelsi', xp: 1580, badge: 'Apprenti', avatar: 'AT' }\n  ];\n\n  const getCurrentLevel = (xp) => {\n    for (let level = 10; level >= 1; level--) {\n      if (xp >= levelSystem[level].min) {\n        return level;\n      }\n    }\n    return 1;\n  };\n\n  const getXPForNextLevel = (currentXP) => {\n    const currentLevel = getCurrentLevel(currentXP);\n    if (currentLevel === 10) return 0;\n    return levelSystem[currentLevel + 1].min - currentXP;\n  };\n\n  const getProgressToNextLevel = (currentXP) => {\n    const currentLevel = getCurrentLevel(currentXP);\n    if (currentLevel === 10) return 100;\n    \n    const currentLevelMin = levelSystem[currentLevel].min;\n    const nextLevelMin = levelSystem[currentLevel + 1].min;\n    const progress = ((currentXP - currentLevelMin) / (nextLevelMin - currentLevelMin)) * 100;\n    \n    return Math.min(progress, 100);\n  };\n\n  const getRarityColor = (rarity) => {\n    const colors = {\n      common: 'text-gray-600 bg-gray-100',\n      uncommon: 'text-green-600 bg-green-100',\n      rare: 'text-blue-600 bg-blue-100',\n      epic: 'text-purple-600 bg-purple-100',\n      legendary: 'text-yellow-600 bg-yellow-100'\n    };\n    return colors[rarity] || colors.common;\n  };\n\n  const handleBadgeClick = (badge) => {\n    setSelectedBadge(badge);\n    setShowBadgeModal(true);\n  };\n\n  const claimReward = (challengeId) => {\n    const challenge = dailyChallenges.find(c => c.id === challengeId);\n    if (challenge && challenge.completed) {\n      addNotification({\n        type: 'success',\n        title: 'Récompense réclamée !',\n        message: `Vous avez gagné ${challenge.xpReward} XP`\n      });\n      \n      if (onUpdateProgress) {\n        onUpdateProgress({\n          xp: student.xp + challenge.xpReward\n        });\n      }\n    }\n  };\n\n  const currentLevel = getCurrentLevel(student?.xp || 0);\n  const currentLevelInfo = levelSystem[currentLevel];\n  const LevelIcon = currentLevelInfo.icon;\n\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"nexus-gamification\">\n      <div className=\"nexus-gamification-header\">\n        <div className=\"flex items-center space-x-4\">\n          <div className={`w-12 h-12 ${currentLevelInfo.color} rounded-lg flex items-center justify-center`}>\n            <LevelIcon className=\"w-6 h-6 text-white\" />\n          </div>\n          <div>\n            <h2 className=\"text-xl font-bold\">Progression & Récompenses</h2>\n            <p className=\"text-sm text-muted-foreground\">\n              Niveau {currentLevel} - {currentLevelInfo.title}\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-4\">\n          <div className=\"text-right\">\n            <div className=\"flex items-center space-x-2\">\n              <Coins className=\"w-4 h-4 text-yellow-600\" />\n              <span className=\"font-bold text-lg\">{student?.xp || 0} XP</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Flame className=\"w-4 h-4 text-orange-600\" />\n              <span className=\"text-sm\">{dailyStreak} jours</span>\n            </div>\n          </div>\n          \n          <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n            <X className=\"w-4 h-4\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"grid lg:grid-cols-4 gap-6\">\n        {/* Sidebar - Vue d'ensemble */}\n        <div className=\"lg:col-span-1 space-y-6\">\n          {/* Niveau actuel */}\n          <Card className=\"nexus-card\">\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"flex items-center space-x-2\">\n                <LevelIcon className=\"w-5 h-5\" />\n                <span>Niveau {currentLevel}</span>\n              </CardTitle>\n              <CardDescription>{currentLevelInfo.title}</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between text-sm\">\n                  <span>Progression</span>\n                  <span>{Math.round(getProgressToNextLevel(student?.xp || 0))}%</span>\n                </div>\n                <Progress value={getProgressToNextLevel(student?.xp || 0)} className=\"w-full\" />\n                \n                {currentLevel < 10 && (\n                  <p className=\"text-xs text-muted-foreground\">\n                    {getXPForNextLevel(student?.xp || 0)} XP pour le niveau suivant\n                  </p>\n                )}\n                \n                {currentLevel === 10 && (\n                  <p className=\"text-xs text-yellow-600 font-medium\">\n                    🎉 Niveau maximum atteint !\n                  </p>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Statistiques rapides */}\n          <Card className=\"nexus-card\">\n            <CardHeader>\n              <CardTitle className=\"text-base\">Statistiques</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <Trophy className=\"w-4 h-4 text-yellow-600\" />\n                  <span className=\"text-sm\">Badges</span>\n                </div>\n                <span className=\"font-semibold\">\n                  {availableBadges.filter(b => b.unlocked).length}/{availableBadges.length}\n                </span>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <Flame className=\"w-4 h-4 text-orange-600\" />\n                  <span className=\"text-sm\">Série actuelle</span>\n                </div>\n                <span className=\"font-semibold\">{dailyStreak} jours</span>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <TrendingUp className=\"w-4 h-4 text-green-600\" />\n                  <span className=\"text-sm\">Progression</span>\n                </div>\n                <span className=\"font-semibold\">{student?.progress?.overall || 0}%</span>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <Medal className=\"w-4 h-4 text-purple-600\" />\n                  <span className=\"text-sm\">Rang mensuel</span>\n                </div>\n                <span className=\"font-semibold\">\n                  #{monthlyLeaderboard.findIndex(p => p.name === student?.name) + 1 || 'N/A'}\n                </span>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Navigation */}\n          <Card className=\"nexus-card\">\n            <CardContent className=\"p-3\">\n              <nav className=\"space-y-1\">\n                <button\n                  onClick={() => setActiveTab('overview')}\n                  className={`w-full text-left px-3 py-2 rounded-md text-sm transition-colors ${\n                    activeTab === 'overview' \n                      ? 'bg-primary text-primary-foreground' \n                      : 'hover:bg-muted'\n                  }`}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <Activity className=\"w-4 h-4\" />\n                    <span>Vue d'ensemble</span>\n                  </div>\n                </button>\n                \n                <button\n                  onClick={() => setActiveTab('badges')}\n                  className={`w-full text-left px-3 py-2 rounded-md text-sm transition-colors ${\n                    activeTab === 'badges' \n                      ? 'bg-primary text-primary-foreground' \n                      : 'hover:bg-muted'\n                  }`}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <Award className=\"w-4 h-4\" />\n                    <span>Badges</span>\n                  </div>\n                </button>\n                \n                <button\n                  onClick={() => setActiveTab('challenges')}\n                  className={`w-full text-left px-3 py-2 rounded-md text-sm transition-colors ${\n                    activeTab === 'challenges' \n                      ? 'bg-primary text-primary-foreground' \n                      : 'hover:bg-muted'\n                  }`}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <Target className=\"w-4 h-4\" />\n                    <span>Défis</span>\n                  </div>\n                </button>\n                \n                <button\n                  onClick={() => setActiveTab('leaderboard')}\n                  className={`w-full text-left px-3 py-2 rounded-md text-sm transition-colors ${\n                    activeTab === 'leaderboard' \n                      ? 'bg-primary text-primary-foreground' \n                      : 'hover:bg-muted'\n                  }`}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <Trophy className=\"w-4 h-4\" />\n                    <span>Classement</span>\n                  </div>\n                </button>\n              </nav>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Contenu principal */}\n        <div className=\"lg:col-span-3\">\n          {/* Vue d'ensemble */}\n          {activeTab === 'overview' && (\n            <div className=\"space-y-6\">\n              {/* Défis quotidiens */}\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Target className=\"w-5 h-5 text-blue-600\" />\n                    <span>Défis Quotidiens</span>\n                  </CardTitle>\n                  <CardDescription>\n                    Complétez vos défis pour gagner des XP bonus\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid md:grid-cols-3 gap-4\">\n                    {dailyChallenges.map((challenge) => (\n                      <div key={challenge.id} className=\"nexus-challenge-card\">\n                        <div className=\"flex items-start justify-between mb-3\">\n                          <div>\n                            <h4 className=\"font-semibold text-sm\">{challenge.title}</h4>\n                            <p className=\"text-xs text-muted-foreground\">{challenge.description}</p>\n                          </div>\n                          <Badge \n                            variant=\"outline\" \n                            className={`text-xs ${\n                              challenge.difficulty === 'Facile' ? 'text-green-600' :\n                              challenge.difficulty === 'Moyen' ? 'text-yellow-600' :\n                              'text-red-600'\n                            }`}\n                          >\n                            {challenge.difficulty}\n                          </Badge>\n                        </div>\n                        \n                        <div className=\"space-y-2\">\n                          <div className=\"flex justify-between text-xs\">\n                            <span>Progression</span>\n                            <span>{challenge.progress}%</span>\n                          </div>\n                          <Progress value={challenge.progress} className=\"w-full h-2\" />\n                          \n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center space-x-1\">\n                              <Coins className=\"w-3 h-3 text-yellow-600\" />\n                              <span className=\"text-xs font-medium\">{challenge.xpReward} XP</span>\n                            </div>\n                            <span className=\"text-xs text-muted-foreground\">\n                              {challenge.timeLeft}\n                            </span>\n                          </div>\n                          \n                          {challenge.completed ? (\n                            <Button \n                              size=\"sm\" \n                              className=\"w-full\"\n                              onClick={() => claimReward(challenge.id)}\n                            >\n                              <Gift className=\"w-3 h-3 mr-1\" />\n                              Réclamer\n                            </Button>\n                          ) : (\n                            <Button size=\"sm\" variant=\"outline\" className=\"w-full\">\n                              <Play className=\"w-3 h-3 mr-1\" />\n                              Continuer\n                            </Button>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Récompenses hebdomadaires */}\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Calendar className=\"w-5 h-5 text-purple-600\" />\n                    <span>Récompenses Hebdomadaires</span>\n                  </CardTitle>\n                  <CardDescription>\n                    Objectifs à long terme avec des récompenses exclusives\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {weeklyRewards.map((reward) => (\n                      <div key={reward.id} className=\"nexus-reward-card\">\n                        <div className=\"flex items-center space-x-4\">\n                          <div className={`w-12 h-12 rounded-lg flex items-center justify-center ${\n                            reward.unlocked ? 'bg-green-100' : 'bg-gray-100'\n                          }`}>\n                            {reward.unlocked ? (\n                              <CheckCircle className=\"w-6 h-6 text-green-600\" />\n                            ) : (\n                              <Lock className=\"w-6 h-6 text-gray-400\" />\n                            )}\n                          </div>\n                          \n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center justify-between mb-1\">\n                              <h4 className=\"font-semibold\">{reward.title}</h4>\n                              <Badge className=\"nexus-badge-info\">{reward.reward}</Badge>\n                            </div>\n                            <p className=\"text-sm text-muted-foreground mb-2\">{reward.description}</p>\n                            \n                            <div className=\"flex items-center space-x-4\">\n                              <div className=\"flex-1\">\n                                <div className=\"flex justify-between text-xs mb-1\">\n                                  <span>{reward.requirement}</span>\n                                  <span>{reward.progress}%</span>\n                                </div>\n                                <Progress value={reward.progress} className=\"w-full h-2\" />\n                              </div>\n                              \n                              {reward.unlocked && (\n                                <Button size=\"sm\">\n                                  <Gift className=\"w-3 h-3 mr-1\" />\n                                  Réclamer\n                                </Button>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Badges récents */}\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Award className=\"w-5 h-5 text-yellow-600\" />\n                      <span>Badges Récents</span>\n                    </div>\n                    <Button \n                      variant=\"ghost\" \n                      size=\"sm\"\n                      onClick={() => setActiveTab('badges')}\n                    >\n                      Voir tout\n                      <ChevronRight className=\"w-4 h-4 ml-1\" />\n                    </Button>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                    {availableBadges\n                      .filter(badge => badge.unlocked)\n                      .slice(0, 4)\n                      .map((badge) => {\n                        const BadgeIcon = badge.icon;\n                        return (\n                          <div\n                            key={badge.id}\n                            className=\"nexus-badge-mini\"\n                            onClick={() => handleBadgeClick(badge)}\n                          >\n                            <div className={`w-12 h-12 rounded-lg flex items-center justify-center ${getRarityColor(badge.rarity)}`}>\n                              <BadgeIcon className=\"w-6 h-6\" />\n                            </div>\n                            <h4 className=\"font-medium text-sm text-center mt-2\">{badge.name}</h4>\n                            <Badge variant=\"outline\" className=\"text-xs mx-auto\">\n                              {badge.rarity}\n                            </Badge>\n                          </div>\n                        );\n                      })}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          )}\n\n          {/* Badges */}\n          {activeTab === 'badges' && (\n            <div className=\"space-y-6\">\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Award className=\"w-5 h-5 text-yellow-600\" />\n                    <span>Collection de Badges</span>\n                  </CardTitle>\n                  <CardDescription>\n                    {availableBadges.filter(b => b.unlocked).length} sur {availableBadges.length} badges débloqués\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid md:grid-cols-3 lg:grid-cols-4 gap-4\">\n                    {availableBadges.map((badge) => {\n                      const BadgeIcon = badge.icon;\n                      return (\n                        <div\n                          key={badge.id}\n                          className={`nexus-badge-card ${badge.unlocked ? 'unlocked' : 'locked'}`}\n                          onClick={() => handleBadgeClick(badge)}\n                        >\n                          <div className={`w-16 h-16 rounded-lg flex items-center justify-center mb-3 ${\n                            badge.unlocked \n                              ? getRarityColor(badge.rarity)\n                              : 'bg-gray-100 text-gray-400'\n                          }`}>\n                            {badge.unlocked ? (\n                              <BadgeIcon className=\"w-8 h-8\" />\n                            ) : (\n                              <Lock className=\"w-8 h-8\" />\n                            )}\n                          </div>\n                          \n                          <h4 className={`font-semibold text-center mb-1 ${\n                            badge.unlocked ? 'text-foreground' : 'text-muted-foreground'\n                          }`}>\n                            {badge.name}\n                          </h4>\n                          \n                          <p className=\"text-xs text-muted-foreground text-center mb-3\">\n                            {badge.description}\n                          </p>\n                          \n                          <div className=\"space-y-2\">\n                            <div className=\"flex items-center justify-between text-xs\">\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                {badge.rarity}\n                              </Badge>\n                              <div className=\"flex items-center space-x-1\">\n                                <Coins className=\"w-3 h-3 text-yellow-600\" />\n                                <span>{badge.xpReward} XP</span>\n                              </div>\n                            </div>\n                            \n                            {!badge.unlocked && (\n                              <>\n                                <div className=\"flex justify-between text-xs\">\n                                  <span>Progression</span>\n                                  <span>{Math.round(badge.progress)}%</span>\n                                </div>\n                                <Progress value={badge.progress} className=\"w-full h-1\" />\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          )}\n\n          {/* Défis */}\n          {activeTab === 'challenges' && (\n            <div className=\"space-y-6\">\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Target className=\"w-5 h-5 text-blue-600\" />\n                    <span>Défis & Objectifs</span>\n                  </CardTitle>\n                  <CardDescription>\n                    Relevez des défis pour progresser plus rapidement\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-6\">\n                    {/* Défis quotidiens détaillés */}\n                    <div>\n                      <h3 className=\"font-semibold mb-4 flex items-center space-x-2\">\n                        <Clock className=\"w-4 h-4\" />\n                        <span>Défis Quotidiens</span>\n                      </h3>\n                      <div className=\"grid md:grid-cols-2 gap-4\">\n                        {dailyChallenges.map((challenge) => (\n                          <div key={challenge.id} className=\"nexus-challenge-detailed\">\n                            <div className=\"flex items-start justify-between mb-4\">\n                              <div>\n                                <h4 className=\"font-semibold\">{challenge.title}</h4>\n                                <p className=\"text-sm text-muted-foreground\">{challenge.description}</p>\n                              </div>\n                              <Badge \n                                variant=\"outline\" \n                                className={`${\n                                  challenge.difficulty === 'Facile' ? 'text-green-600' :\n                                  challenge.difficulty === 'Moyen' ? 'text-yellow-600' :\n                                  'text-red-600'\n                                }`}\n                              >\n                                {challenge.difficulty}\n                              </Badge>\n                            </div>\n                            \n                            <div className=\"space-y-3\">\n                              <div className=\"flex justify-between text-sm\">\n                                <span>Progression</span>\n                                <span>{challenge.progress}%</span>\n                              </div>\n                              <Progress value={challenge.progress} className=\"w-full\" />\n                              \n                              <div className=\"flex items-center justify-between\">\n                                <div className=\"flex items-center space-x-2\">\n                                  <Coins className=\"w-4 h-4 text-yellow-600\" />\n                                  <span className=\"font-medium\">{challenge.xpReward} XP</span>\n                                </div>\n                                <span className=\"text-sm text-muted-foreground\">\n                                  {challenge.timeLeft}\n                                </span>\n                              </div>\n                              \n                              <div className=\"flex space-x-2\">\n                                {challenge.completed ? (\n                                  <Button \n                                    className=\"flex-1\"\n                                    onClick={() => claimReward(challenge.id)}\n                                  >\n                                    <Gift className=\"w-4 h-4 mr-2\" />\n                                    Réclamer la récompense\n                                  </Button>\n                                ) : (\n                                  <>\n                                    <Button variant=\"outline\" className=\"flex-1\">\n                                      <Play className=\"w-4 h-4 mr-2\" />\n                                      Continuer\n                                    </Button>\n                                    <Button variant=\"ghost\" size=\"sm\">\n                                      <Eye className=\"w-4 h-4\" />\n                                    </Button>\n                                  </>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Défis hebdomadaires */}\n                    <div>\n                      <h3 className=\"font-semibold mb-4 flex items-center space-x-2\">\n                        <Calendar className=\"w-4 h-4\" />\n                        <span>Défis Hebdomadaires</span>\n                      </h3>\n                      <div className=\"space-y-4\">\n                        {weeklyRewards.map((reward) => (\n                          <div key={reward.id} className=\"nexus-weekly-challenge\">\n                            <div className=\"flex items-center space-x-4\">\n                              <div className={`w-16 h-16 rounded-lg flex items-center justify-center ${\n                                reward.unlocked ? 'bg-green-100' : 'bg-gray-100'\n                              }`}>\n                                {reward.unlocked ? (\n                                  <CheckCircle className=\"w-8 h-8 text-green-600\" />\n                                ) : (\n                                  <Lock className=\"w-8 h-8 text-gray-400\" />\n                                )}\n                              </div>\n                              \n                              <div className=\"flex-1\">\n                                <div className=\"flex items-center justify-between mb-2\">\n                                  <h4 className=\"font-semibold\">{reward.title}</h4>\n                                  <Badge className=\"nexus-badge-info\">{reward.reward}</Badge>\n                                </div>\n                                <p className=\"text-sm text-muted-foreground mb-3\">{reward.description}</p>\n                                \n                                <div className=\"space-y-2\">\n                                  <div className=\"flex justify-between text-sm\">\n                                    <span>{reward.requirement}</span>\n                                    <span>{reward.progress}%</span>\n                                  </div>\n                                  <Progress value={reward.progress} className=\"w-full\" />\n                                </div>\n                              </div>\n                              \n                              <div className=\"flex flex-col space-y-2\">\n                                {reward.unlocked ? (\n                                  <Button>\n                                    <Gift className=\"w-4 h-4 mr-2\" />\n                                    Réclamer\n                                  </Button>\n                                ) : (\n                                  <Button variant=\"outline\" disabled>\n                                    <Lock className=\"w-4 h-4 mr-2\" />\n                                    Verrouillé\n                                  </Button>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          )}\n\n          {/* Classement */}\n          {activeTab === 'leaderboard' && (\n            <div className=\"space-y-6\">\n              <Card className=\"nexus-card\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Trophy className=\"w-5 h-5 text-yellow-600\" />\n                    <span>Classement Mensuel</span>\n                  </CardTitle>\n                  <CardDescription>\n                    Comparez votre progression avec les autres étudiants\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {monthlyLeaderboard.map((player, index) => (\n                      <div\n                        key={player.rank}\n                        className={`nexus-leaderboard-item ${\n                          player.name === student?.name ? 'current-user' : ''\n                        }`}\n                      >\n                        <div className=\"flex items-center space-x-4\">\n                          <div className={`w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm ${\n                            player.rank === 1 ? 'bg-yellow-100 text-yellow-800' :\n                            player.rank === 2 ? 'bg-gray-100 text-gray-800' :\n                            player.rank === 3 ? 'bg-orange-100 text-orange-800' :\n                            'bg-blue-100 text-blue-800'\n                          }`}>\n                            {player.rank === 1 ? '🥇' :\n                             player.rank === 2 ? '🥈' :\n                             player.rank === 3 ? '🥉' :\n                             player.rank}\n                          </div>\n                          \n                          <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold\">\n                            {player.avatar}\n                          </div>\n                          \n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center justify-between\">\n                              <h4 className=\"font-semibold\">{player.name}</h4>\n                              <div className=\"flex items-center space-x-2\">\n                                <Coins className=\"w-4 h-4 text-yellow-600\" />\n                                <span className=\"font-bold\">{player.xp.toLocaleString()} XP</span>\n                              </div>\n                            </div>\n                            <div className=\"flex items-center space-x-2\">\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                {player.badge}\n                              </Badge>\n                              {player.name === student?.name && (\n                                <Badge className=\"nexus-badge-info text-xs\">Vous</Badge>\n                              )}\n                            </div>\n                          </div>\n                          \n                          {index > 0 && (\n                            <div className=\"text-right\">\n                              <div className=\"flex items-center space-x-1 text-sm text-muted-foreground\">\n                                <ArrowDown className=\"w-3 h-3\" />\n                                <span>-{monthlyLeaderboard[0].xp - player.xp}</span>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  \n                  <div className=\"mt-6 p-4 rounded-lg bg-blue-50 dark:bg-blue-900/20\">\n                    <div className=\"flex items-center space-x-3\">\n                      <Trophy className=\"w-5 h-5 text-blue-600\" />\n                      <div>\n                        <h4 className=\"font-medium text-blue-900 dark:text-blue-100\">\n                          Récompenses de fin de mois\n                        </h4>\n                        <p className=\"text-sm text-blue-700 dark:text-blue-300\">\n                          Top 3 : Badges exclusifs • Top 10 : Bonus XP • Tous : Certificat de participation\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Modal de badge */}\n      {showBadgeModal && selectedBadge && (\n        <div className=\"nexus-modal-overlay\">\n          <div className=\"nexus-modal max-w-md\">\n            <div className=\"text-center p-6\">\n              <div className={`w-20 h-20 rounded-lg flex items-center justify-center mx-auto mb-4 ${\n                selectedBadge.unlocked \n                  ? getRarityColor(selectedBadge.rarity)\n                  : 'bg-gray-100 text-gray-400'\n              }`}>\n                {selectedBadge.unlocked ? (\n                  <selectedBadge.icon className=\"w-10 h-10\" />\n                ) : (\n                  <Lock className=\"w-10 h-10\" />\n                )}\n              </div>\n              \n              <h3 className=\"text-xl font-bold mb-2\">{selectedBadge.name}</h3>\n              <p className=\"text-muted-foreground mb-4\">{selectedBadge.description}</p>\n              \n              <div className=\"flex items-center justify-center space-x-4 mb-4\">\n                <Badge className={getRarityColor(selectedBadge.rarity)}>\n                  {selectedBadge.rarity}\n                </Badge>\n                <div className=\"flex items-center space-x-1\">\n                  <Coins className=\"w-4 h-4 text-yellow-600\" />\n                  <span className=\"font-medium\">{selectedBadge.xpReward} XP</span>\n                </div>\n              </div>\n              \n              {!selectedBadge.unlocked && (\n                <div className=\"space-y-2 mb-4\">\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Progression</span>\n                    <span>{Math.round(selectedBadge.progress)}%</span>\n                  </div>\n                  <Progress value={selectedBadge.progress} className=\"w-full\" />\n                </div>\n              )}\n              \n              <div className=\"flex space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  className=\"flex-1\"\n                  onClick={() => setShowBadgeModal(false)}\n                >\n                  Fermer\n                </Button>\n                {selectedBadge.unlocked && (\n                  <Button className=\"flex-1\">\n                    <Share2 className=\"w-4 h-4 mr-2\" />\n                    Partager\n                  </Button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Gamification;\n\n","import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Badge } from './ui/badge';\nimport { Progress } from './ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';\nimport { \n  TrendingUp, \n  TrendingDown, \n  Minus, \n  Target, \n  Award, \n  Calendar,\n  Clock,\n  BookOpen,\n  Brain,\n  Zap,\n  Star,\n  Trophy,\n  Medal,\n  CheckCircle,\n  AlertCircle,\n  Info,\n  BarChart3,\n  PieChart,\n  LineChart,\n  Activity\n} from 'lucide-react';\n\nconst ProgressTracking = ({ studentId = \"sarah_m\" }) => {\n  const [progressData, setProgressData] = useState(null);\n  const [selectedPeriod, setSelectedPeriod] = useState('month');\n  const [selectedSubject, setSelectedSubject] = useState('all');\n  const [loading, setLoading] = useState(true);\n\n  // Données de démonstration\n  const demoProgressData = {\n    student: {\n      id: \"sarah_m\",\n      name: \"Sarah Mansouri\",\n      level: \"Terminale\",\n      avatar: \"/api/placeholder/80/80\"\n    },\n    overview: {\n      overall_progress: 78.5,\n      weekly_improvement: 12.3,\n      monthly_improvement: 8.7,\n      streak_days: 23,\n      total_hours: 156,\n      completed_modules: 34,\n      total_modules: 45,\n      current_level: \"Avancé\",\n      next_milestone: \"Excellence\"\n    },\n    subjects: [\n      {\n        id: \"mathematics\",\n        name: \"Mathématiques\",\n        icon: \"📐\",\n        color: \"blue\",\n        progress: 85.2,\n        grade: 16.8,\n        trend: \"up\",\n        trend_value: 2.3,\n        hours_spent: 45,\n        modules_completed: 12,\n        total_modules: 15,\n        last_activity: \"2024-01-25T14:30:00Z\",\n        strengths: [\"Analyse\", \"Géométrie\", \"Probabilités\"],\n        weaknesses: [\"Arithmétique\"],\n        next_topics: [\"Intégrales\", \"Équations différentielles\"],\n        recent_scores: [14.5, 15.2, 16.1, 16.8, 17.2],\n        milestones: [\n          { name: \"Dérivées maîtrisées\", completed: true, date: \"2024-01-15\" },\n          { name: \"Intégrales en cours\", completed: false, progress: 60 },\n          { name: \"Bac blanc\", completed: false, date: \"2024-02-15\" }\n        ]\n      },\n      {\n        id: \"nsi\",\n        name: \"NSI\",\n        icon: \"💻\",\n        color: \"green\",\n        progress: 92.1,\n        grade: 17.5,\n        trend: \"up\",\n        trend_value: 1.8,\n        hours_spent: 38,\n        modules_completed: 11,\n        total_modules: 12,\n        last_activity: \"2024-01-25T16:45:00Z\",\n        strengths: [\"Algorithmes\", \"Python\", \"Structures de données\"],\n        weaknesses: [\"Bases de données\"],\n        next_topics: [\"IA et Machine Learning\", \"Projet final\"],\n        recent_scores: [16.2, 16.8, 17.1, 17.5, 18.0],\n        milestones: [\n          { name: \"Python maîtrisé\", completed: true, date: \"2024-01-10\" },\n          { name: \"Projet en cours\", completed: false, progress: 75 },\n          { name: \"Grand Oral NSI\", completed: false, date: \"2024-03-20\" }\n        ]\n      },\n      {\n        id: \"physics\",\n        name: \"Physique-Chimie\",\n        icon: \"⚛️\",\n        color: \"purple\",\n        progress: 73.4,\n        grade: 15.2,\n        trend: \"stable\",\n        trend_value: 0.1,\n        hours_spent: 32,\n        modules_completed: 8,\n        total_modules: 12,\n        last_activity: \"2024-01-24T10:20:00Z\",\n        strengths: [\"Mécanique\", \"Optique\"],\n        weaknesses: [\"Chimie organique\", \"Thermodynamique\"],\n        next_topics: [\"Ondes\", \"Radioactivité\"],\n        recent_scores: [14.8, 15.0, 15.1, 15.2, 15.3],\n        milestones: [\n          { name: \"Mécanique validée\", completed: true, date: \"2024-01-08\" },\n          { name: \"Chimie en cours\", completed: false, progress: 45 },\n          { name: \"TP pratiques\", completed: false, date: \"2024-02-10\" }\n        ]\n      },\n      {\n        id: \"french\",\n        name: \"Français\",\n        icon: \"📚\",\n        color: \"red\",\n        progress: 81.7,\n        grade: 16.3,\n        trend: \"up\",\n        trend_value: 1.2,\n        hours_spent: 28,\n        modules_completed: 9,\n        total_modules: 11,\n        last_activity: \"2024-01-25T11:15:00Z\",\n        strengths: [\"Dissertation\", \"Analyse littéraire\"],\n        weaknesses: [\"Expression orale\"],\n        next_topics: [\"Grand Oral\", \"Révisions Bac\"],\n        recent_scores: [15.5, 15.8, 16.0, 16.3, 16.5],\n        milestones: [\n          { name: \"Méthode dissertation\", completed: true, date: \"2024-01-12\" },\n          { name: \"Oral en cours\", completed: false, progress: 30 },\n          { name: \"Bac français\", completed: false, date: \"2024-06-15\" }\n        ]\n      }\n    ],\n    weekly_activity: [\n      { day: \"Lun\", hours: 3.5, efficiency: 85 },\n      { day: \"Mar\", hours: 4.2, efficiency: 92 },\n      { day: \"Mer\", hours: 2.8, efficiency: 78 },\n      { day: \"Jeu\", hours: 4.0, efficiency: 88 },\n      { day: \"Ven\", hours: 3.2, efficiency: 82 },\n      { day: \"Sam\", hours: 5.1, efficiency: 95 },\n      { day: \"Dim\", hours: 2.5, efficiency: 75 }\n    ],\n    achievements: [\n      {\n        id: \"streak_master\",\n        name: \"Maître de la Régularité\",\n        description: \"23 jours consécutifs d'activité\",\n        icon: \"🔥\",\n        earned_date: \"2024-01-25\",\n        rarity: \"rare\"\n      },\n      {\n        id: \"math_expert\",\n        name: \"Expert Mathématiques\",\n        description: \"85% de progression en maths\",\n        icon: \"🧮\",\n        earned_date: \"2024-01-20\",\n        rarity: \"epic\"\n      },\n      {\n        id: \"code_ninja\",\n        name: \"Ninja du Code\",\n        description: \"Projet Python parfait\",\n        icon: \"🥷\",\n        earned_date: \"2024-01-18\",\n        rarity: \"legendary\"\n      },\n      {\n        id: \"fast_learner\",\n        name: \"Apprenant Rapide\",\n        description: \"Module terminé en moins de 2h\",\n        icon: \"⚡\",\n        earned_date: \"2024-01-15\",\n        rarity: \"common\"\n      }\n    ],\n    goals: [\n      {\n        id: \"bac_mention_tb\",\n        name: \"Mention Très Bien au Bac\",\n        description: \"Obtenir une moyenne ≥ 16/20\",\n        target_date: \"2024-06-15\",\n        progress: 78,\n        status: \"in_progress\",\n        milestones: [\n          { name: \"Moyenne 15/20\", completed: true },\n          { name: \"Moyenne 16/20\", completed: false, progress: 85 },\n          { name: \"Préparation intensive\", completed: false }\n        ]\n      },\n      {\n        id: \"prepa_admission\",\n        name: \"Admission en Prépa\",\n        description: \"Intégrer une classe préparatoire scientifique\",\n        target_date: \"2024-07-01\",\n        progress: 65,\n        status: \"in_progress\",\n        milestones: [\n          { name: \"Dossier constitué\", completed: true },\n          { name: \"Notes excellentes\", completed: false, progress: 70 },\n          { name: \"Entretiens\", completed: false }\n        ]\n      },\n      {\n        id: \"nsi_project\",\n        name: \"Projet NSI d'Excellence\",\n        description: \"Créer un projet innovant pour le Grand Oral\",\n        target_date: \"2024-03-15\",\n        progress: 75,\n        status: \"in_progress\",\n        milestones: [\n          { name: \"Concept défini\", completed: true },\n          { name: \"Développement\", completed: false, progress: 75 },\n          { name: \"Présentation\", completed: false }\n        ]\n      }\n    ],\n    aria_insights: {\n      learning_style: \"Visuel\",\n      optimal_study_time: \"14h-17h\",\n      recommended_break_frequency: \"25 minutes\",\n      strength_areas: [\"Logique\", \"Analyse\", \"Résolution de problèmes\"],\n      improvement_areas: [\"Expression orale\", \"Gestion du stress\"],\n      next_recommendations: [\n        \"Augmenter la pratique orale en français\",\n        \"Réviser la thermodynamique en physique\",\n        \"Préparer le Grand Oral NSI\"\n      ],\n      motivation_level: 85,\n      confidence_level: 78,\n      stress_level: 32\n    }\n  };\n\n  useEffect(() => {\n    // Simulation du chargement des données\n    setLoading(true);\n    setTimeout(() => {\n      setProgressData(demoProgressData);\n      setLoading(false);\n    }, 1000);\n  }, [studentId]);\n\n  const getTrendIcon = (trend, value) => {\n    if (trend === 'up') return <TrendingUp className=\"w-4 h-4 text-green-500\" />;\n    if (trend === 'down') return <TrendingDown className=\"w-4 h-4 text-red-500\" />;\n    return <Minus className=\"w-4 h-4 text-gray-500\" />;\n  };\n\n  const getProgressColor = (progress) => {\n    if (progress >= 80) return 'bg-green-500';\n    if (progress >= 60) return 'bg-blue-500';\n    if (progress >= 40) return 'bg-yellow-500';\n    return 'bg-red-500';\n  };\n\n  const getRarityColor = (rarity) => {\n    switch (rarity) {\n      case 'legendary': return 'bg-gradient-to-r from-yellow-400 to-orange-500';\n      case 'epic': return 'bg-gradient-to-r from-purple-400 to-pink-500';\n      case 'rare': return 'bg-gradient-to-r from-blue-400 to-cyan-500';\n      default: return 'bg-gradient-to-r from-gray-400 to-gray-500';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (!progressData) {\n    return (\n      <div className=\"text-center py-8\">\n        <AlertCircle className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n        <p className=\"text-gray-600\">Aucune donnée de progression disponible</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6 space-y-6\">\n      {/* En-tête avec profil étudiant */}\n      <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg p-6 text-white\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"w-16 h-16 bg-white bg-opacity-20 rounded-full flex items-center justify-center text-2xl font-bold\">\n            {progressData.student.name.split(' ').map(n => n[0]).join('')}\n          </div>\n          <div className=\"flex-1\">\n            <h1 className=\"text-2xl font-bold\">{progressData.student.name}</h1>\n            <p className=\"text-blue-100\">{progressData.student.level}</p>\n            <div className=\"flex items-center space-x-4 mt-2\">\n              <div className=\"flex items-center space-x-1\">\n                <Zap className=\"w-4 h-4\" />\n                <span className=\"text-sm\">{progressData.overview.streak_days} jours</span>\n              </div>\n              <div className=\"flex items-center space-x-1\">\n                <Clock className=\"w-4 h-4\" />\n                <span className=\"text-sm\">{progressData.overview.total_hours}h étudiées</span>\n              </div>\n              <div className=\"flex items-center space-x-1\">\n                <BookOpen className=\"w-4 h-4\" />\n                <span className=\"text-sm\">{progressData.overview.completed_modules}/{progressData.overview.total_modules} modules</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-3xl font-bold\">{progressData.overview.overall_progress}%</div>\n            <div className=\"text-sm text-blue-100\">Progression globale</div>\n            <Badge className=\"mt-2 bg-white bg-opacity-20\">\n              {progressData.overview.current_level}\n            </Badge>\n          </div>\n        </div>\n      </div>\n\n      {/* Métriques rapides */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Amélioration hebdo</p>\n                <p className=\"text-2xl font-bold text-green-600\">+{progressData.overview.weekly_improvement}%</p>\n              </div>\n              <TrendingUp className=\"w-8 h-8 text-green-500\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Amélioration mensuelle</p>\n                <p className=\"text-2xl font-bold text-blue-600\">+{progressData.overview.monthly_improvement}%</p>\n              </div>\n              <BarChart3 className=\"w-8 h-8 text-blue-500\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Série actuelle</p>\n                <p className=\"text-2xl font-bold text-orange-600\">{progressData.overview.streak_days} jours</p>\n              </div>\n              <Zap className=\"w-8 h-8 text-orange-500\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Prochain palier</p>\n                <p className=\"text-lg font-bold text-purple-600\">{progressData.overview.next_milestone}</p>\n              </div>\n              <Target className=\"w-8 h-8 text-purple-500\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Tabs defaultValue=\"subjects\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-5\">\n          <TabsTrigger value=\"subjects\">Matières</TabsTrigger>\n          <TabsTrigger value=\"goals\">Objectifs</TabsTrigger>\n          <TabsTrigger value=\"achievements\">Réussites</TabsTrigger>\n          <TabsTrigger value=\"activity\">Activité</TabsTrigger>\n          <TabsTrigger value=\"insights\">Insights IA</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"subjects\" className=\"mt-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {progressData.subjects.map((subject) => (\n              <Card key={subject.id} className=\"hover:shadow-lg transition-shadow\">\n                <CardHeader className=\"pb-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"text-2xl\">{subject.icon}</div>\n                      <div>\n                        <CardTitle className=\"text-lg\">{subject.name}</CardTitle>\n                        <div className=\"flex items-center space-x-2 mt-1\">\n                          <span className=\"text-sm text-gray-600\">Note: {subject.grade}/20</span>\n                          {getTrendIcon(subject.trend, subject.trend_value)}\n                          <span className={`text-sm ${subject.trend === 'up' ? 'text-green-600' : subject.trend === 'down' ? 'text-red-600' : 'text-gray-600'}`}>\n                            {subject.trend === 'up' ? '+' : subject.trend === 'down' ? '-' : ''}{subject.trend_value}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"text-2xl font-bold text-blue-600\">{subject.progress}%</div>\n                      <div className=\"text-xs text-gray-500\">{subject.modules_completed}/{subject.total_modules} modules</div>\n                    </div>\n                  </div>\n                </CardHeader>\n\n                <CardContent className=\"space-y-4\">\n                  {/* Barre de progression */}\n                  <div>\n                    <div className=\"flex justify-between text-sm mb-1\">\n                      <span>Progression</span>\n                      <span>{subject.progress}%</span>\n                    </div>\n                    <Progress value={subject.progress} className=\"h-2\" />\n                  </div>\n\n                  {/* Points forts et faibles */}\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <h4 className=\"text-sm font-medium text-green-700 mb-2\">Points forts</h4>\n                      <div className=\"space-y-1\">\n                        {subject.strengths.map((strength, index) => (\n                          <Badge key={index} variant=\"outline\" className=\"text-xs bg-green-50 text-green-700 border-green-200\">\n                            {strength}\n                          </Badge>\n                        ))}\n                      </div>\n                    </div>\n                    <div>\n                      <h4 className=\"text-sm font-medium text-red-700 mb-2\">À améliorer</h4>\n                      <div className=\"space-y-1\">\n                        {subject.weaknesses.map((weakness, index) => (\n                          <Badge key={index} variant=\"outline\" className=\"text-xs bg-red-50 text-red-700 border-red-200\">\n                            {weakness}\n                          </Badge>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Prochains sujets */}\n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Prochains sujets</h4>\n                    <div className=\"flex flex-wrap gap-1\">\n                      {subject.next_topics.map((topic, index) => (\n                        <Badge key={index} className=\"text-xs bg-blue-100 text-blue-800\">\n                          {topic}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Jalons */}\n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Jalons</h4>\n                    <div className=\"space-y-2\">\n                      {subject.milestones.map((milestone, index) => (\n                        <div key={index} className=\"flex items-center space-x-2\">\n                          {milestone.completed ? (\n                            <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                          ) : (\n                            <div className=\"w-4 h-4 border-2 border-gray-300 rounded-full\"></div>\n                          )}\n                          <span className={`text-sm ${milestone.completed ? 'text-green-700' : 'text-gray-600'}`}>\n                            {milestone.name}\n                          </span>\n                          {milestone.progress && !milestone.completed && (\n                            <div className=\"flex-1 ml-2\">\n                              <Progress value={milestone.progress} className=\"h-1\" />\n                            </div>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Statistiques */}\n                  <div className=\"grid grid-cols-2 gap-4 pt-2 border-t\">\n                    <div className=\"text-center\">\n                      <div className=\"text-lg font-bold text-blue-600\">{subject.hours_spent}h</div>\n                      <div className=\"text-xs text-gray-500\">Temps passé</div>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"text-lg font-bold text-green-600\">{subject.recent_scores[subject.recent_scores.length - 1]}/20</div>\n                      <div className=\"text-xs text-gray-500\">Dernière note</div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"goals\" className=\"mt-6\">\n          <div className=\"space-y-6\">\n            {progressData.goals.map((goal) => (\n              <Card key={goal.id}>\n                <CardHeader>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <CardTitle className=\"flex items-center space-x-2\">\n                        <Target className=\"w-5 h-5 text-blue-600\" />\n                        <span>{goal.name}</span>\n                      </CardTitle>\n                      <p className=\"text-gray-600 mt-1\">{goal.description}</p>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"text-2xl font-bold text-blue-600\">{goal.progress}%</div>\n                      <Badge className={`mt-1 ${goal.status === 'in_progress' ? 'bg-blue-100 text-blue-800' : 'bg-green-100 text-green-800'}`}>\n                        {goal.status === 'in_progress' ? 'En cours' : 'Terminé'}\n                      </Badge>\n                    </div>\n                  </div>\n                </CardHeader>\n\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {/* Barre de progression globale */}\n                    <div>\n                      <div className=\"flex justify-between text-sm mb-2\">\n                        <span>Progression globale</span>\n                        <span>{goal.progress}%</span>\n                      </div>\n                      <Progress value={goal.progress} className=\"h-3\" />\n                    </div>\n\n                    {/* Date cible */}\n                    <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n                      <Calendar className=\"w-4 h-4\" />\n                      <span>Objectif: {new Date(goal.target_date).toLocaleDateString('fr-FR')}</span>\n                    </div>\n\n                    {/* Jalons détaillés */}\n                    <div>\n                      <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Étapes</h4>\n                      <div className=\"space-y-3\">\n                        {goal.milestones.map((milestone, index) => (\n                          <div key={index} className=\"flex items-center space-x-3\">\n                            {milestone.completed ? (\n                              <CheckCircle className=\"w-5 h-5 text-green-500\" />\n                            ) : (\n                              <div className=\"w-5 h-5 border-2 border-gray-300 rounded-full\"></div>\n                            )}\n                            <div className=\"flex-1\">\n                              <div className={`text-sm ${milestone.completed ? 'text-green-700 font-medium' : 'text-gray-700'}`}>\n                                {milestone.name}\n                              </div>\n                              {milestone.progress && !milestone.completed && (\n                                <div className=\"mt-1\">\n                                  <Progress value={milestone.progress} className=\"h-1\" />\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"achievements\" className=\"mt-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {progressData.achievements.map((achievement) => (\n              <Card key={achievement.id} className=\"hover:shadow-lg transition-shadow\">\n                <CardContent className=\"p-6\">\n                  <div className={`w-16 h-16 rounded-full ${getRarityColor(achievement.rarity)} flex items-center justify-center text-2xl mb-4 mx-auto`}>\n                    {achievement.icon}\n                  </div>\n                  <div className=\"text-center\">\n                    <h3 className=\"font-bold text-lg mb-2\">{achievement.name}</h3>\n                    <p className=\"text-gray-600 text-sm mb-3\">{achievement.description}</p>\n                    <Badge className={`${getRarityColor(achievement.rarity)} text-white`}>\n                      {achievement.rarity === 'legendary' ? 'Légendaire' :\n                       achievement.rarity === 'epic' ? 'Épique' :\n                       achievement.rarity === 'rare' ? 'Rare' : 'Commun'}\n                    </Badge>\n                    <div className=\"text-xs text-gray-500 mt-2\">\n                      Obtenu le {new Date(achievement.earned_date).toLocaleDateString('fr-FR')}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {/* Statistiques des réussites */}\n          <Card className=\"mt-6\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <Trophy className=\"w-5 h-5 text-yellow-600\" />\n                <span>Statistiques des réussites</span>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-yellow-600\">1</div>\n                  <div className=\"text-sm text-gray-600\">Légendaire</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-purple-600\">1</div>\n                  <div className=\"text-sm text-gray-600\">Épique</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-blue-600\">1</div>\n                  <div className=\"text-sm text-gray-600\">Rare</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-gray-600\">1</div>\n                  <div className=\"text-sm text-gray-600\">Commun</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"activity\" className=\"mt-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Activité hebdomadaire */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Activity className=\"w-5 h-5 text-blue-600\" />\n                  <span>Activité hebdomadaire</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {progressData.weekly_activity.map((day, index) => (\n                    <div key={index} className=\"flex items-center space-x-3\">\n                      <div className=\"w-12 text-sm font-medium\">{day.day}</div>\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center space-x-2\">\n                          <div className=\"flex-1 bg-gray-200 rounded-full h-2\">\n                            <div \n                              className=\"bg-blue-600 h-2 rounded-full\" \n                              style={{ width: `${(day.hours / 6) * 100}%` }}\n                            ></div>\n                          </div>\n                          <span className=\"text-sm text-gray-600\">{day.hours}h</span>\n                        </div>\n                      </div>\n                      <div className=\"w-16 text-right\">\n                        <Badge className={`text-xs ${day.efficiency >= 90 ? 'bg-green-100 text-green-800' : day.efficiency >= 80 ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'}`}>\n                          {day.efficiency}%\n                        </Badge>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Répartition du temps */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <PieChart className=\"w-5 h-5 text-green-600\" />\n                  <span>Répartition du temps</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {progressData.subjects.map((subject, index) => {\n                    const totalHours = progressData.subjects.reduce((sum, s) => sum + s.hours_spent, 0);\n                    const percentage = (subject.hours_spent / totalHours) * 100;\n                    return (\n                      <div key={index} className=\"flex items-center space-x-3\">\n                        <div className=\"text-lg\">{subject.icon}</div>\n                        <div className=\"flex-1\">\n                          <div className=\"flex justify-between text-sm mb-1\">\n                            <span>{subject.name}</span>\n                            <span>{subject.hours_spent}h ({percentage.toFixed(1)}%)</span>\n                          </div>\n                          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                            <div \n                              className={`h-2 rounded-full ${getProgressColor(percentage)}`}\n                              style={{ width: `${percentage}%` }}\n                            ></div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"insights\" className=\"mt-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Profil d'apprentissage */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Brain className=\"w-5 h-5 text-purple-600\" />\n                  <span>Profil d'apprentissage ARIA</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <div className=\"flex justify-between text-sm mb-1\">\n                    <span>Style d'apprentissage</span>\n                    <Badge className=\"bg-purple-100 text-purple-800\">\n                      {progressData.aria_insights.learning_style}\n                    </Badge>\n                  </div>\n                </div>\n\n                <div>\n                  <div className=\"flex justify-between text-sm mb-1\">\n                    <span>Horaire optimal</span>\n                    <span className=\"font-medium\">{progressData.aria_insights.optimal_study_time}</span>\n                  </div>\n                </div>\n\n                <div>\n                  <div className=\"flex justify-between text-sm mb-1\">\n                    <span>Fréquence de pause</span>\n                    <span className=\"font-medium\">{progressData.aria_insights.recommended_break_frequency}</span>\n                  </div>\n                </div>\n\n                <div>\n                  <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Points forts</h4>\n                  <div className=\"flex flex-wrap gap-1\">\n                    {progressData.aria_insights.strength_areas.map((strength, index) => (\n                      <Badge key={index} className=\"text-xs bg-green-100 text-green-800\">\n                        {strength}\n                      </Badge>\n                    ))}\n                  </div>\n                </div>\n\n                <div>\n                  <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Axes d'amélioration</h4>\n                  <div className=\"flex flex-wrap gap-1\">\n                    {progressData.aria_insights.improvement_areas.map((area, index) => (\n                      <Badge key={index} className=\"text-xs bg-orange-100 text-orange-800\">\n                        {area}\n                      </Badge>\n                    ))}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Métriques psychologiques */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Activity className=\"w-5 h-5 text-blue-600\" />\n                  <span>État psychologique</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <div className=\"flex justify-between text-sm mb-2\">\n                    <span>Motivation</span>\n                    <span>{progressData.aria_insights.motivation_level}%</span>\n                  </div>\n                  <Progress value={progressData.aria_insights.motivation_level} className=\"h-2\" />\n                </div>\n\n                <div>\n                  <div className=\"flex justify-between text-sm mb-2\">\n                    <span>Confiance</span>\n                    <span>{progressData.aria_insights.confidence_level}%</span>\n                  </div>\n                  <Progress value={progressData.aria_insights.confidence_level} className=\"h-2\" />\n                </div>\n\n                <div>\n                  <div className=\"flex justify-between text-sm mb-2\">\n                    <span>Niveau de stress</span>\n                    <span>{progressData.aria_insights.stress_level}%</span>\n                  </div>\n                  <Progress \n                    value={progressData.aria_insights.stress_level} \n                    className=\"h-2\"\n                  />\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Recommandations ARIA */}\n            <Card className=\"lg:col-span-2\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Zap className=\"w-5 h-5 text-yellow-600\" />\n                  <span>Recommandations personnalisées</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {progressData.aria_insights.next_recommendations.map((recommendation, index) => (\n                    <div key={index} className=\"flex items-start space-x-3 p-3 bg-blue-50 rounded-lg\">\n                      <Info className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n                      <div className=\"flex-1\">\n                        <p className=\"text-sm text-blue-900\">{recommendation}</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default ProgressTracking;\n\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { HelmetProvider, Helmet } from 'react-helmet-async';\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\nimport AuthPage from './components/Auth/AuthPage';\nimport LandingPage from './components/LandingPage';\nimport MainDashboard from './components/Dashboard/MainDashboard';\nimport StudentDashboard from './components/StudentDashboard';\nimport ParentDashboard from './components/ParentDashboard';\nimport TeacherDashboard from './components/TeacherDashboard';\nimport AdminDashboard from './components/AdminDashboard';\nimport ARIAAgent from './components/ARIAAgent';\nimport DocumentGenerator from './components/DocumentGenerator';\nimport ContentLibrary from './components/ContentLibrary';\nimport VideoConference from './components/VideoConference';\nimport ScheduleCalendar from './components/Calendar/ScheduleCalendar';\nimport QuizSystem from './components/QuizSystem';\nimport LearningPath from './components/LearningPath';\nimport TeacherProfiles from './components/TeacherProfiles';\nimport Gamification from './components/Gamification';\nimport ProgressTracking from './components/ProgressTracking';\nimport NotificationSystem from './components/NotificationSystem';\nimport DashboardLayout from './components/Layout/DashboardLayout';\nimport './App.css';\n\n// Composant pour protéger les routes\nfunction ProtectedRoute({ children, requiredRoles = [] }) {\n  const { isAuthenticated, isLoading, user, hasRole } = useAuth();\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (!isAuthenticated) {\n    return <Navigate to=\"/auth\" replace />;\n  }\n\n  if (requiredRoles.length > 0 && !hasRole(requiredRoles)) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n            Accès non autorisé\n          </h2>\n          <p className=\"text-gray-600\">\n            Vous n'avez pas les permissions nécessaires pour accéder à cette page.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return children;\n}\n\n// Composant pour rediriger selon le rôle\nfunction RoleBasedRedirect() {\n  const { user, isStudent, isParent, isTeacher, isAdmin } = useAuth();\n\n  if (isStudent()) {\n    return <Navigate to=\"/dashboard\" replace />;\n  } else if (isParent()) {\n    return <Navigate to=\"/dashboard\" replace />;\n  } else if (isTeacher()) {\n    return <Navigate to=\"/dashboard\" replace />;\n  } else if (isAdmin()) {\n    return <Navigate to=\"/dashboard\" replace />;\n  }\n\n  return <Navigate to=\"/dashboard\" replace />;\n}\n\n// Composant principal de l'application\nfunction AppContent() {\n  const { isAuthenticated, isLoading, checkAuthStatus } = useAuth();\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Chargement...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Nexus Réussite - Plateforme Éducative Intelligente</title>\n        <meta name=\"description\" content=\"Plateforme éducative avec IA pour l'accompagnement personnalisé des élèves du système français en Tunisie\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <meta httpEquiv=\"X-Content-Type-Options\" content=\"nosniff\" />\n        <meta httpEquiv=\"X-Frame-Options\" content=\"DENY\" />\n        <meta httpEquiv=\"X-XSS-Protection\" content=\"1; mode=block\" />\n        <meta httpEquiv=\"Referrer-Policy\" content=\"strict-origin-when-cross-origin\" />\n        <meta httpEquiv=\"Content-Security-Policy\" content=\"default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; style-src-elem 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self'; frame-ancestors 'none';\" />\n      </Helmet>\n      <Router>\n        <Routes>\n        {/* Route publique - Page d'accueil */}\n        <Route \n          path=\"/\" \n          element={isAuthenticated ? <RoleBasedRedirect /> : <LandingPage />} \n        />\n        \n        {/* Route d'authentification */}\n        <Route \n          path=\"/auth\" \n          element={isAuthenticated ? <RoleBasedRedirect /> : <AuthPage />} \n        />\n\n        {/* Routes protégées - Dashboard principal */}\n        <Route \n          path=\"/dashboard\" \n          element={\n            <ProtectedRoute>\n              <MainDashboard />\n            </ProtectedRoute>\n          } \n        />\n\n        {/* Routes protégées - Dashboards spécifiques */}\n        <Route \n          path=\"/student-dashboard\" \n          element={\n            <ProtectedRoute requiredRoles={['student']}>\n              <DashboardLayout currentPage=\"dashboard\">\n                <StudentDashboard />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/parent-dashboard\" \n          element={\n            <ProtectedRoute requiredRoles={['parent']}>\n              <DashboardLayout currentPage=\"dashboard\">\n                <ParentDashboard />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/teacher-dashboard\" \n          element={\n            <ProtectedRoute requiredRoles={['teacher']}>\n              <DashboardLayout currentPage=\"dashboard\">\n                <TeacherDashboard />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/admin-dashboard\" \n          element={\n            <ProtectedRoute requiredRoles={['admin']}>\n              <DashboardLayout currentPage=\"dashboard\">\n                <AdminDashboard />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        {/* Routes protégées - Fonctionnalités */}\n        <Route \n          path=\"/aria\" \n          element={\n            <ProtectedRoute>\n              <DashboardLayout currentPage=\"aria\">\n                <ARIAAgent />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/documents\" \n          element={\n            <ProtectedRoute>\n              <DashboardLayout currentPage=\"documents\">\n                <DocumentGenerator />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/courses\" \n          element={\n            <ProtectedRoute>\n              <DashboardLayout currentPage=\"courses\">\n                <ContentLibrary />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/video\" \n          element={\n            <ProtectedRoute>\n              <DashboardLayout currentPage=\"video\">\n                <VideoConference />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/calendar\" \n          element={\n            <ProtectedRoute>\n              <DashboardLayout currentPage=\"calendar\">\n                <ScheduleCalendar />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/quiz/:quizId?\" \n          element={\n            <ProtectedRoute>\n              <DashboardLayout currentPage=\"quiz\">\n                <QuizSystem />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/learning-path/:subject?\" \n          element={\n            <ProtectedRoute>\n              <DashboardLayout currentPage=\"learning\">\n                <LearningPath />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/teachers\" \n          element={\n            <ProtectedRoute>\n              <DashboardLayout currentPage=\"teachers\">\n                <TeacherProfiles />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/gamification\" \n          element={\n            <ProtectedRoute>\n              <DashboardLayout currentPage=\"gamification\">\n                <Gamification />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/progress\" \n          element={\n            <ProtectedRoute>\n              <DashboardLayout currentPage=\"progress\">\n                <ProgressTracking />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/notifications\" \n          element={\n            <ProtectedRoute>\n              <DashboardLayout currentPage=\"notifications\">\n                <NotificationSystem />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        {/* Routes spécifiques aux enseignants */}\n        <Route \n          path=\"/students\" \n          element={\n            <ProtectedRoute requiredRoles={['teacher']}>\n              <DashboardLayout currentPage=\"students\">\n                <div className=\"text-center py-12\">\n                  <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n                    Gestion des élèves\n                  </h2>\n                  <p className=\"text-gray-600\">\n                    Interface de gestion des élèves en cours de développement.\n                  </p>\n                </div>\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/create-content\" \n          element={\n            <ProtectedRoute requiredRoles={['teacher']}>\n              <DashboardLayout currentPage=\"create-content\">\n                <DocumentGenerator />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        {/* Routes spécifiques aux parents */}\n        <Route \n          path=\"/children\" \n          element={\n            <ProtectedRoute requiredRoles={['parent']}>\n              <DashboardLayout currentPage=\"children\">\n                <div className=\"text-center py-12\">\n                  <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n                    Suivi des enfants\n                  </h2>\n                  <p className=\"text-gray-600\">\n                    Interface de suivi des enfants en cours de développement.\n                  </p>\n                </div>\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/reports\" \n          element={\n            <ProtectedRoute requiredRoles={['parent']}>\n              <DashboardLayout currentPage=\"reports\">\n                <ProgressTracking />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        {/* Routes spécifiques aux administrateurs */}\n        <Route \n          path=\"/admin\" \n          element={\n            <ProtectedRoute requiredRoles={['admin']}>\n              <DashboardLayout currentPage=\"admin\">\n                <AdminDashboard />\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/users\" \n          element={\n            <ProtectedRoute requiredRoles={['admin']}>\n              <DashboardLayout currentPage=\"users\">\n                <div className=\"text-center py-12\">\n                  <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n                    Gestion des utilisateurs\n                  </h2>\n                  <p className=\"text-gray-600\">\n                    Interface de gestion des utilisateurs en cours de développement.\n                  </p>\n                </div>\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        <Route \n          path=\"/stats\" \n          element={\n            <ProtectedRoute requiredRoles={['admin']}>\n              <DashboardLayout currentPage=\"stats\">\n                <div className=\"text-center py-12\">\n                  <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n                    Statistiques\n                  </h2>\n                  <p className=\"text-gray-600\">\n                    Interface de statistiques en cours de développement.\n                  </p>\n                </div>\n              </DashboardLayout>\n            </ProtectedRoute>\n          } \n        />\n\n        {/* Route par défaut */}\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\n// Composant racine avec le provider d'authentification\nfunction App() {\n  return (\n    <HelmetProvider>\n      <AuthProvider>\n        <AppContent />\n      </AuthProvider>\n    </HelmetProvider>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App.jsx';\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n);\n\n"],"names":["API_BASE_URL","ApiService","token","char","error","encryptedToken","decoded","encrypted","includeAuth","headers","endpoint","options","url","config","response","errorData","contentType","params","queryString","data","email","password","userData","profileData","file","formData","studentId","studentData","progressData","message","context","subject","documentData","documentId","contentId","query","filters","metadata","conferenceData","roomId","includeHistory","notificationId","notificationData","achievementId","formulaId","teacherId","sessionData","period","parentId","reportConfig","paymentData","ticketData","ticketId","updateData","userType","userId","category","apiService","WebSocketService","userRole","wsUrl","event","notification","achievement","invitation","alert","delay","recipientId","title","type","callback","callbacks","index","webSocketService","cn","inputs","twMerge","clsx","parseJwt","base64","jsonPayload","c","isTokenExpired","currentTime","initialState","AUTH_ACTIONS","authReducer","state","action","AuthContext","createContext","AuthProvider","children","dispatch","useReducer","useEffect","checkAuthStatus","handleAuthError","logout","refreshResponse","userResponse","login","register","updateProfile","updates","uploadAvatar","clearError","hasPermission","permission","hasRole","role","isTeacher","isStudent","isParent","isAdmin","getCurrentUser","getToken","value","jsx","useAuth","useContext","Button","React","className","variant","size","asChild","props","ref","baseClasses","variants","sizes","variantClass","sizeClass","Input","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","Logo","showSlogan","animated","currentSize","LoginForm","onSwitchToRegister","isLoading","setFormData","useState","showPassword","setShowPassword","formErrors","setFormErrors","handleChange","e","name","prev","validateForm","errors","handleSubmit","handleDemoLogin","account","jsxs","AlertCircle","Mail","Lock","EyeOff","Eye","Select","SelectContent","SelectItem","SelectTrigger","ChevronDown","SelectValue","RegisterForm","onSwitchToLogin","showConfirmPassword","setShowConfirmPassword","passwordStrength","setPasswordStrength","grades","roles","checked","newValue","calculatePasswordStrength","handleSelectChange","strength","getPasswordStrengthColor","getPasswordStrengthText","User","Phone","grade","CheckCircle","AuthPage","isLogin","setIsLogin","switchToRegister","switchToLogin","Fragment","Badge","Tabs","onValueChange","child","TabsList","TabsTrigger","handleClick","TabsContent","currentValue","targetValue","LandingPage","onLogin","activeTab","setActiveTab","currentTestimonial","setCurrentTestimonial","mobileMenuOpen","setMobileMenuOpen","testimonials","teachers","interval","scrollToSection","sectionId","_a","X","Menu","Award","Code2","Presentation","Play","TrendingUp","Target","Brain","MessageCircle","Users","Calculator","Calendar","Atom","BookOpen","PenTool","Lightbulb","Sparkles","Star","Trophy","GraduationCap","Rocket","_","Quote","teacher","Clock","specialty","i","Monitor","Coffee","MapPin","Car","Shield","Navigation","Facebook","Instagram","Youtube","Linkedin","Globe","Progress","StudentDashboard","student","documents","onShowARIA","addNotification","selectedSubject","setSelectedSubject","studyTimer","setStudyTimer","formatTime","seconds","hours","minutes","secs","toggleTimer","resetTimer","getProgressColor","progress","getSubjectIcon","Flame","Zap","Pause","RotateCcw","Home","BarChart3","FileText","_b","_c","activity","Bell","style","percentage","_d","badge","Plus","Settings","Filter","doc","Download","Share2","_e","_f","ParentDashboard","students","onSelectStudent","selectedPeriod","setSelectedPeriod","showMessageModal","setShowMessageModal","selectedTeacher","setSelectedTeacher","weeklyReports","messages","upcomingSessions","sendMessage","t","s","session","m","report","reportIndex","subjectIndex","topic","topicIndex","n","Video","Send","TeacherDashboard","stats","setStats","recentActivities","setRecentActivities","upcomingClasses","setUpcomingClasses","studentProgress","setStudentProgress","loading","setLoading","loadDashboardData","statsResponse","activitiesResponse","classesResponse","progressResponse","dateString","formatDate","getActivityIcon","MessageSquare","getTrendIcon","trend","class_","AdminDashboard","dashboardData","setDashboardData","demoDashboardData","UserPlus","UserCheck","DollarSign","Activity","getAlertIcon","XCircle","AlertTriangle","PieChart","level","Search","Edit","MoreHorizontal","Server","HardDrive","Network","NotificationSystem","notifications","onMarkAsRead","onMarkAllAsRead","onDeleteNotification","onUpdateSettings","isVisible","onClose","filter","setFilter","soundEnabled","setSoundEnabled","selectedNotifications","setSelectedNotifications","showSettings","setShowSettings","notificationTypes","Info","demoNotifications","allNotifications","filteredNotifications","unreadCount","formatTimestamp","timestamp","date","now","diffInMinutes","handleMarkAsRead","handleMarkAllAsRead","handleDeleteNotification","handleNotificationClick","toggleNotificationSelection","id","handleBulkAction","Volume2","VolumeX","Check","Archive","Trash2","typeConfig","TypeIcon","ExternalLink","Smartphone","DashboardLayout","currentPage","user","sidebarOpen","setSidebarOpen","notificationsOpen","setNotificationsOpen","navigation","handleLogout","userInitials","userName","item","LogOut","MainDashboard","timer","renderDashboard","ARIAAgent","onMinimize","isMinimized","onGenerateDocument","onRequestExercise","setMessages","inputMessage","setInputMessage","isTyping","setIsTyping","isListening","setIsListening","isSpeaking","setIsSpeaking","currentMode","setCurrentMode","ariaPersonality","setAriaPersonality","showSuggestions","setShowSuggestions","conversationHistory","setConversationHistory","ariaThinking","setAriaThinking","attachedFiles","setAttachedFiles","quickActions","setQuickActions","messagesEndRef","useRef","inputRef","fileInputRef","welcomeMessages","contextualSuggestions","handleSuggestionClick","Code","Mic","getModeActions","welcomeSet","generateQuickActions","scrollToBottom","actions","generatePersonalizedExercise","suggestion","messageText","userMessage","ariaResponse","generateARIAResponse","responses","responseCategory","personalizedResponse","generateFollowUpSuggestions","generateResponseActions","suggestions","exercise","startVoiceInteraction","speakMessage","utterance","handleFileAttachment","files","removeAttachment","copyMessage","rateMessage","messageId","rating","msg","Maximize2","Minimize2","Paperclip","Copy","ThumbsUp","ThumbsDown","MicOff","DocumentGenerator","onSaveDocument","selectedTemplate","setSelectedTemplate","generationParams","setGenerationParams","isGenerating","setIsGenerating","generatedContent","setGeneratedContent","searchQuery","setSearchQuery","filterSubject","setFilterSubject","filterType","setFilterType","viewMode","setViewMode","selectedDocuments","setSelectedDocuments","showPreview","setShowPreview","previewDocument","setPreviewDocument","documentTemplates","subjectTopics","filteredTemplates","template","matchesSubject","matchesType","matchesDifficulty","filteredDocuments","matchesSearch","handleGenerateDocument","resolve","generatedDoc","generateMockContent","saveDocument","document","previewDoc","downloadDocument","format","Wand2","Layers","feature","RefreshCw","Save","List","Grid","ContentLibrary","searchTerm","setSearchTerm","selectedType","setSelectedType","selectedLevel","setSelectedLevel","content","setContent","demoContent","subjects","types","levels","filteredContent","tag","matchesLevel","getDifficultyColor","difficulty","getDifficultyLabel","handleDownload","handlePreview","sum","a","b","VideoConference","onJoinSession","onLeaveSession","onSendMessage","onShareScreen","onRecordSession","isConnected","setIsConnected","isVideoEnabled","setIsVideoEnabled","isAudioEnabled","setIsAudioEnabled","isScreenSharing","setIsScreenSharing","isRecording","setIsRecording","isChatOpen","setIsChatOpen","isFullscreen","setIsFullscreen","connectionQuality","setConnectionQuality","participants","setParticipants","chatMessages","setChatMessages","newMessage","setNewMessage","sessionDuration","setSessionDuration","isWaitingRoom","setIsWaitingRoom","sharedDocuments","setSharedDocuments","whiteboardActive","setWhiteboardActive","chatRef","sessionStartTime","demoSession","demoChatMessages","demoSharedDocuments","qualities","weights","random","cumulative","formatDuration","getConnectionIcon","Wifi","WifiOff","handleLeaveSession","toggleVideo","toggleAudio","toggleScreenShare","toggleRecording","autoReply","copyMeetingInfo","meetingInfo","VideoOff","Minimize","Maximize","Image","MonitorOff","PhoneOff","ScheduleCalendar","currentDate","setCurrentDate","selectedDate","setSelectedDate","events","setEvents","demoEvents","loadEvents","getDaysInMonth","year","month","firstDay","daysInMonth","startingDayOfWeek","days","prevDate","day","remainingDays","getEventsForDate","getEventTypeColor","getEventTypeLabel","getStatusBadge","status","navigateMonth","direction","newDate","goToToday","today","monthNames","dayNames","selectedDateEvents","CalendarIcon","ChevronLeft","ChevronRight","dayEvents","isSelected","isToday","QuizSystem","quizData","onComplete","currentQuestion","setCurrentQuestion","selectedAnswers","setSelectedAnswers","timeRemaining","setTimeRemaining","isActive","setIsActive","showResults","setShowResults","score","setScore","quiz","time","startQuiz","pauseQuiz","selectAnswer","questionId","answerId","nextQuestion","previousQuestion","calculateScore","correctAnswers","question","selectedAnswer","correctOption","opt","finalScore","mins","getScoreColor","getScoreBadge","selectedOption","isCorrect","currentQ","option","LearningPath","currentPath","setCurrentPath","setProgress","learningPaths","loadLearningPath","path","totalLessons","acc","module","completedLessons","lesson","getStatusIcon","Circle","getLessonIcon","getStatusColor","canAccessModule","prereqId","prereqModule","startModule","moduleId","continueModule","isAccessible","l","skill","skillIndex","TeacherProfiles","filteredTeachers","renderStars","TeacherCard","cert","TeacherDetailModal","edu","testimonial","Gamification","onUpdateProgress","onUnlockBadge","selectedBadge","setSelectedBadge","showBadgeModal","setShowBadgeModal","dailyStreak","setDailyStreak","weeklyXP","setWeeklyXP","monthlyRank","setMonthlyRank","levelSystem","Crown","Medal","Diamond","Gem","availableBadges","dailyChallenges","weeklyRewards","monthlyLeaderboard","getCurrentLevel","xp","getXPForNextLevel","currentXP","currentLevel","getProgressToNextLevel","currentLevelMin","nextLevelMin","getRarityColor","rarity","colors","handleBadgeClick","claimReward","challengeId","challenge","currentLevelInfo","LevelIcon","Coins","p","Gift","reward","BadgeIcon","player","ArrowDown","ProgressTracking","setProgressData","demoProgressData","TrendingDown","Minus","weakness","milestone","goal","totalHours","area","recommendation","ProtectedRoute","requiredRoles","isAuthenticated","Navigate","RoleBasedRedirect","AppContent","Helmet","Router","Routes","Route","App","HelmetProvider","ReactDOM"],"mappings":"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"}