# Multi-stage build for production
FROM python:3.12-slim as builder

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Create wheel directory
WORKDIR /wheels

# Copy requirements first for better caching
COPY requirements-production.txt /wheels/
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /wheels -r requirements-production.txt

# Production stage
FROM python:3.12-slim as production

# Security: Create non-root user
RUN groupadd -r nexus && useradd --no-log-init -r -g nexus nexus

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    FLASK_ENV=production \
    FLASK_APP=src.main_production:create_app

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy wheels from builder stage
COPY --from=builder /wheels /wheels

# Install Python dependencies
RUN pip install --no-cache-dir --no-index --find-links=/wheels -r /wheels/requirements-production.txt \
    && rm -rf /wheels

# Create app directory
WORKDIR /app

# Copy application code
COPY --chown=nexus:nexus . /app/

# Create necessary directories
RUN mkdir -p /app/logs /app/uploads /app/static \
    && chown -R nexus:nexus /app

# Health check script
COPY --chown=nexus:nexus scripts/healthcheck.py /app/scripts/
RUN chmod +x /app/scripts/healthcheck.py

# Switch to non-root user
USER nexus

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD python /app/scripts/healthcheck.py

# Default command
CMD ["gunicorn", \
     "--bind", "0.0.0.0:8000", \
     "--workers", "4", \
     "--worker-class", "gevent", \
     "--worker-connections", "1000", \
     "--max-requests", "1000", \
     "--max-requests-jitter", "100", \
     "--timeout", "120", \
     "--keep-alive", "5", \
     "--log-level", "info", \
     "--access-logfile", "-", \
     "--error-logfile", "-", \
     "--capture-output", \
     "src.main_production:create_app()"]
