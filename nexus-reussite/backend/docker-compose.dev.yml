version: '3.8'

# ==========================================
# NEXUS R√âUSSITE - DEVELOPMENT ENVIRONMENT
# ==========================================
# Docker Compose pour un environnement de d√©veloppement propre
# Usage: docker-compose -f docker-compose.dev.yml up

services:
  # =============================================
  # BASE DE DONN√âES POSTGRESQL POUR D√âVELOPPEMENT
  # =============================================
  dev-db:
    image: postgres:15-alpine
    container_name: nexus-dev-postgres
    environment:
      POSTGRES_DB: nexus_dev
      POSTGRES_USER: nexus_dev_user
      POSTGRES_PASSWORD: dev_password_123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"  # Port diff√©rent pour √©viter les conflits
    volumes:
      - dev_postgres_data:/var/lib/postgresql/data
      - ./database/dev_init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nexus_dev_user -d nexus_dev"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - nexus-dev-network

  # =============================================
  # REDIS POUR CACHE ET SESSIONS (DEV)
  # =============================================
  dev-redis:
    image: redis:7-alpine
    container_name: nexus-dev-redis
    ports:
      - "6380:6379"  # Port diff√©rent pour √©viter les conflits
    volumes:
      - dev_redis_data:/data
    command: redis-server --appendonly yes --requirepass dev_redis_pass
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - nexus-dev-network

  # =============================================
  # BACKEND NEXUS R√âUSSITE (D√âVELOPPEMENT)
  # =============================================
  dev-backend:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    container_name: nexus-dev-backend
    environment:
      # Configuration d√©veloppement
      FLASK_ENV: development
      FLASK_DEBUG: 1
      SECRET_KEY: dev-secret-key-not-for-production
      PORT: 5000
      
      # Base de donn√©es de d√©veloppement
      DATABASE_URL: postgresql://nexus_dev_user:dev_password_123@dev-db:5432/nexus_dev
      
      # OpenAI (utiliser votre vraie cl√© ou une cl√© de test)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-sk-test-key}
      OPENAI_MODEL: gpt-3.5-turbo  # Mod√®le moins cher pour le dev
      OPENAI_MAX_TOKENS: 500
      
      # JWT d√©veloppement
      JWT_SECRET_KEY: dev-jwt-secret-not-for-production
      JWT_ACCESS_TOKEN_EXPIRES: 86400  # 24h pour le dev
      
      # CORS permissif en d√©veloppement
      CORS_ORIGINS: "*"
      
      # Redis d√©veloppement
      REDIS_URL: redis://:dev_redis_pass@dev-redis:6379/0
      
      # Email mock pour d√©veloppement
      MAIL_SERVER: localhost
      MAIL_PORT: 1025  # MailHog
      MAIL_USE_TLS: "false"
      MAIL_USERNAME: dev@nexus-reussite.com
      MAIL_PASSWORD: dev_password
      
      # Uploads
      UPLOAD_FOLDER: /app/uploads
      MAX_CONTENT_LENGTH: 16777216
      
      # Logs d√©taill√©s
      LOG_LEVEL: DEBUG
      
      # D√©veloppement settings
      PRODUCTION: "false"
      ENABLE_DEMO_DATA: "true"
      
    ports:
      - "5001:5000"  # Port diff√©rent pour √©viter les conflits
    volumes:
      - ./src:/app/src:ro  # Code source en lecture seule
      - ./tests:/app/tests:ro
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      dev-db:
        condition: service_healthy
      dev-redis:
        condition: service_healthy
    networks:
      - nexus-dev-network
    # Auto-restart en cas d'erreur
    restart: unless-stopped

  # =============================================
  # MAILHOG POUR TESTS D'EMAIL
  # =============================================
  mailhog:
    image: mailhog/mailhog:latest
    container_name: nexus-dev-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Interface web
    networks:
      - nexus-dev-network

  # =============================================
  # ADMINER POUR GESTION BDD
  # =============================================
  adminer:
    image: adminer:latest
    container_name: nexus-dev-adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: dev-db
    depends_on:
      - dev-db
    networks:
      - nexus-dev-network

  # =============================================
  # REDIS COMMANDER POUR GESTION REDIS
  # =============================================
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: nexus-dev-redis-commander
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:dev-redis:6379:0:dev_redis_pass
    depends_on:
      - dev-redis
    networks:
      - nexus-dev-network

# =============================================
# VOLUMES PERSISTANTS D√âVELOPPEMENT
# =============================================
volumes:
  dev_postgres_data:
    driver: local
  dev_redis_data:
    driver: local

# =============================================
# R√âSEAU D√âVELOPPEMENT
# =============================================
networks:
  nexus-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

# =============================================
# INFORMATIONS DE CONNEXION D√âVELOPPEMENT
# =============================================
# 
# üåê Services accessibles:
# - Backend API: http://localhost:5001
# - Base de donn√©es: localhost:5433
# - Redis: localhost:6380
# - Adminer (BDD): http://localhost:8080
# - Redis Commander: http://localhost:8081
# - MailHog: http://localhost:8025
#
# üîë Identifiants de d√©veloppement:
# - DB: nexus_dev_user / dev_password_123 / nexus_dev
# - Redis: dev_redis_pass
# - Email: Tous les emails sont captur√©s par MailHog
#
# üöÄ D√©marrage rapide:
# docker-compose -f docker-compose.dev.yml up -d
# 
# üßπ Nettoyage:
# docker-compose -f docker-compose.dev.yml down -v
#
