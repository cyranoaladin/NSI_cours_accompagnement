name: Database Schema Checks

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/models/**'
      - 'migrations/**'
      - 'src/database.py'
  push:
    branches: [ main, develop ]
    paths:
      - 'src/models/**'
      - 'migrations/**'
      - 'src/database.py'

jobs:
  schema-drift-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up environment variables
      run: |
        echo "FLASK_ENV=testing" >> $GITHUB_ENV
        echo "DATABASE_URL=sqlite:///:memory:" >> $GITHUB_ENV
        echo "OPENAI_API_KEY=test-key-for-ci" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV
        
    - name: Check for schema drift
      run: |
        cd backend
        python scripts/check_schema_drift.py
      
    - name: Validate migration files
      run: |
        cd backend
        python scripts/validate_migrations.py
        
    - name: Test database creation from scratch
      run: |
        cd backend
        python scripts/test_fresh_db.py
        
    - name: Comment PR if schema drift detected
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '❌ **Dérive du schéma de base de données détectée!**\n\nLes modèles SQLAlchemy ne correspondent pas aux migrations Alembic. Veuillez:\n\n1. Générer une nouvelle migration avec `flask db migrate -m "Description"`\n2. Vérifier et valider la migration générée\n3. Committer la nouvelle migration\n\nConsultez les logs de CI pour plus de détails.'
          })
