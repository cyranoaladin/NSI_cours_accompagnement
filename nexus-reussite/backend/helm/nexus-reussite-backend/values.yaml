# Default values for nexus-reussite-backend
replicaCount: 3

image:
  repository: nexus-reussite/backend
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8000

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: api.nexusreussite.tn
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: nexus-backend-tls
      hosts:
        - api.nexusreussite.tn

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - nexus-reussite-backend
        topologyKey: kubernetes.io/hostname

# Environment variables
env:
  FLASK_ENV: production
  DATABASE_URL: "postgresql://user:password@postgres:5432/nexus_reussite"
  REDIS_URL: "redis://redis:6379/0"
  
# Secrets (should be created separately)
envFromSecret:
  - secretRef:
      name: nexus-backend-secrets

# Persistent storage
persistence:
  enabled: true
  storageClass: "gp2"
  accessMode: ReadWriteOnce
  size: 10Gi
  mountPath: /app/uploads

# Probes
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health/ready
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# PostgreSQL dependency
postgresql:
  enabled: true
  auth:
    postgresPassword: "postgres"
    username: "nexus_user"
    password: "nexus_password"
    database: "nexus_reussite"
  primary:
    persistence:
      enabled: true
      size: 50Gi

# Redis dependency
redis:
  enabled: true
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 10Gi
