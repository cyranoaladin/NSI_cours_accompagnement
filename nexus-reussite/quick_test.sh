#!/bin/bash

echo "üîß Arr√™t des processus existants..."
pkill -f "python.*start_server" 2>/dev/null || true
pkill -f "vite.*--host" 2>/dev/null || true
sleep 2

echo "üöÄ D√©marrage du backend Flask..."
cd /home/alaeddine/Documents/NSI_cours_accompagnement/nexus-reussite/backend
FLASK_PORT=5002 python start_server.py &
BACKEND_PID=$!
echo "Backend PID: $BACKEND_PID"

echo "‚è≥ Attente backend (5s)..."
sleep 5

# Test backend
if curl -s http://localhost:5002/health > /dev/null; then
    echo "‚úÖ Backend OK"
else
    echo "‚ùå Backend KO"
    exit 1
fi

echo "üé® D√©marrage du frontend React..."
cd /home/alaeddine/Documents/NSI_cours_accompagnement/nexus-reussite/frontend
npm run dev &
FRONTEND_PID=$!
echo "Frontend PID: $FRONTEND_PID"

echo "‚è≥ Attente frontend (10s)..."
sleep 10

# Test sur plusieurs ports
for PORT in 3000 3001 3002 3003; do
    if curl -s http://localhost:$PORT > /dev/null 2>&1; then
        echo "‚úÖ Frontend accessible sur port $PORT"
        echo "üåê Application pr√™te : http://localhost:$PORT"
        echo "üîß Backend API : http://localhost:5002"
        echo ""
        echo "Processus actifs :"
        echo "- Backend PID: $BACKEND_PID"
        echo "- Frontend PID: $FRONTEND_PID"
        echo ""
        echo "Appuyez sur Ctrl+C pour arr√™ter..."
        
        # Attendre interruption
        trap "echo 'Arr√™t des serveurs...'; kill $BACKEND_PID $FRONTEND_PID 2>/dev/null; exit 0" INT
        
        while true; do
            sleep 1
        done
        exit 0
    fi
done

echo "‚ùå Frontend non accessible sur les ports test√©s"
exit 1
